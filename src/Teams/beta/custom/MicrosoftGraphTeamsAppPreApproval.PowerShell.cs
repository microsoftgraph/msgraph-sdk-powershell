// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6306, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.Beta.PowerShell.Models
{
    using Microsoft.Graph.Beta.PowerShell.Runtime.PowerShell;
    using System;

    /// <summary>conversationMember</summary>
    [System.ComponentModel.TypeConverter(typeof(MicrosoftGraphTeamsAppPreapprovalTypeConverter))]
    public partial class MicrosoftGraphTeamsAppPreApproval
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Graph.Beta.PowerShell.Models.MicrosoftGraphTeamsAppPreApproval"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApproval" />.
        /// </returns>
        public static Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApproval DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new MicrosoftGraphTeamsAppPreApproval(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Graph.Beta.PowerShell.Models.MicrosoftGraphTeamsAppPreApproval"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApproval" />.
        /// </returns>
        public static Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApproval DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new MicrosoftGraphTeamsAppPreApproval(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="MicrosoftGraphTeamsAppPreApproval" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="MicrosoftGraphTeamsAppPreApproval" /> model class.</returns>
        public static Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApproval FromJsonString(string jsonText) => FromJson(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Graph.Beta.PowerShell.Models.MicrosoftGraphTeamsAppPreApproval"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal MicrosoftGraphTeamsAppPreApproval(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }

            // actually deserialize
            if (content.Contains("TeamsAppId"))
            {
                ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).TeamsAppId = (string)content.GetValueForProperty("TeamsAppId", ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).TeamsAppId, global::System.Convert.ToString);
            }

            if (content.Contains("ResourceSpecificApplicationPermissionsAllowedForTeams"))
            {
                ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).ResourceSpecificApplicationPermissionsAllowedForTeams = (string[])content.GetValueForProperty("ResourceSpecificApplicationPermissionsAllowedForTeams", ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).ResourceSpecificApplicationPermissionsAllowedForTeams, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }

            if (content.Contains("ResourceSpecificApplicationPermissionsAllowedForChats"))
            {
                ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).ResourceSpecificApplicationPermissionsAllowedForChats = (string[])content.GetValueForProperty("ResourceSpecificApplicationPermissionsAllowedForChats", ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).ResourceSpecificApplicationPermissionsAllowedForChats, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }

            if (content.Contains("TeamLevelSensitivityLabelCondition"))
            {
                ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).TeamLevelSensitivityLabelCondition =
                    (MicrosoftGraphSensitivityLabelCondition?)content.GetValueForProperty(
                        "TeamLevelSensitivityLabelCondition",
                        ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).TeamLevelSensitivityLabelCondition,
                        o =>
                        {
                            if (Enum.TryParse<MicrosoftGraphSensitivityLabelCondition>(
                                System.Convert.ToString(o),
                                out MicrosoftGraphSensitivityLabelCondition parsedObj))
                            {
                                return parsedObj;
                            }

                            return null;
                        });
            }

            if (content.Contains("SpecificSensitivityLabelIdsApplicableToTeams"))
            {
                ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).SpecificSensitivityLabelIdsApplicableToTeams = (string[])content.GetValueForProperty("SpecificSensitivityLabelIdsApplicableToTeams", ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).SpecificSensitivityLabelIdsApplicableToTeams, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }

            if (content.Contains("Id"))
            {
                ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphEntityInternal)this).Id = (string)content.GetValueForProperty("Id", ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphEntityInternal)this).Id, global::System.Convert.ToString);
            }

            // this type is a dictionary; copy elements from source to here.
            CopyFrom(content);
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Graph.Beta.PowerShell.Models.MicrosoftGraphConversationMember"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal MicrosoftGraphTeamsAppPreApproval(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }

            // actually deserialize
            if (content.Contains("TeamsAppId"))
            {
                ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).TeamsAppId = (string)content.GetValueForProperty("TeamsAppId", ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).TeamsAppId, global::System.Convert.ToString);
            }

            if (content.Contains("ResourceSpecificApplicationPermissionsAllowedForTeams"))
            {
                ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).ResourceSpecificApplicationPermissionsAllowedForTeams = (string[])content.GetValueForProperty("ResourceSpecificApplicationPermissionsAllowedForTeams", ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).ResourceSpecificApplicationPermissionsAllowedForTeams, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }

            if (content.Contains("ResourceSpecificApplicationPermissionsAllowedForChats"))
            {
                ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).ResourceSpecificApplicationPermissionsAllowedForChats = (string[])content.GetValueForProperty("ResourceSpecificApplicationPermissionsAllowedForChats", ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).ResourceSpecificApplicationPermissionsAllowedForChats, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }

            if (content.Contains("TeamLevelSensitivityLabelCondition"))
            {
                ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).TeamLevelSensitivityLabelCondition =
                    (MicrosoftGraphSensitivityLabelCondition?)content.GetValueForProperty(
                        "TeamLevelSensitivityLabelCondition",
                        ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).TeamLevelSensitivityLabelCondition,
                        o =>
                        {
                            if (Enum.TryParse<MicrosoftGraphSensitivityLabelCondition>(
                                System.Convert.ToString(o),
                                out MicrosoftGraphSensitivityLabelCondition parsedObj))
                            {
                                return parsedObj;
                            }

                            return null;
                        });
            }

            if (content.Contains("SpecificSensitivityLabelIdsApplicableToTeams"))
            {
                ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).SpecificSensitivityLabelIdsApplicableToTeams = (string[])content.GetValueForProperty("SpecificSensitivityLabelIdsApplicableToTeams", ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApprovalInternal)this).SpecificSensitivityLabelIdsApplicableToTeams, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }

            if (content.Contains("Id"))
            {
                ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphEntityInternal)this).Id = (string)content.GetValueForProperty("Id", ((Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphEntityInternal)this).Id, global::System.Convert.ToString);
            }

            // this type is a dictionary; copy elements from source to here.
            CopyFrom(content);
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Graph.Beta.PowerShell.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// conversationMember
    [System.ComponentModel.TypeConverter(typeof(MicrosoftGraphTeamsAppPreapprovalTypeConverter))]
    public partial interface IMicrosoftGraphTeamsAppPreApproval

    {

    }
}