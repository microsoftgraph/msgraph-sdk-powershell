// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6306, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.Beta.PowerShell.Models.TeamsInternal
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using static Microsoft.Graph.Beta.PowerShell.Runtime.Extensions;

    /// <summary>
    /// Teams internal model for information protection sensitivity labels.
    /// </summary>
    internal class MGTeamsInternalSensitivityLabel
    {
        /// <summary>
        /// The Id.
        /// </summary>
        internal string Id { get; private set; }

        /// <summary>
        /// The display name of the label.
        /// </summary>
        internal string Name { get; private set; }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode"/> into an instance of MGTeamsInternalSensitivityLabel.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of MGTeamsInternalSensitivityLabel.</returns>
        internal static MGTeamsInternalSensitivityLabel FromJson(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject json)
        {
            return new MGTeamsInternalSensitivityLabel(json);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MGTeamsInternalSensitivityLabel"/> class.
        /// </summary>
        internal MGTeamsInternalSensitivityLabel(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject json)
        {
            string id = If(json.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString>("id"), out var jsonId)
                ? (string)jsonId
                : null;

            string name = If(json.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString>("name"), out var jsonName)
                ? (string)jsonName
                : null;

            this.SetProperties(id, name);
        }

        /// <summary>
        /// Initialize properties of this object.
        /// </summary>
        /// <param name="id">The Id.</param>
        /// <param name="name">The name.</param>
        private void SetProperties(string id, string name)
        {
            this.Id = id;
            this.Name = name;
        }
    }
}