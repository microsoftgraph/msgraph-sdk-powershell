// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6306, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.Beta.PowerShell.Models.TeamsInternal
{
    using static Microsoft.Graph.Beta.PowerShell.Runtime.Extensions;

    /// <summary>
    /// Teams internal model for permissions in preapproval policies.
    /// </summary>
    internal class MGTeamsInternalPreApprovedPermissions
    {
        /// <summary>
        /// Permission kind.
        /// </summary>
        internal string PermissionKind { get; private set; }

        /// <summary>
        /// Permission type.
        /// </summary>
        internal string PermissionType { get; private set; }

        /// <summary>
        /// Odata type of the object.
        /// </summary>
        internal string OdataType { get; private set; }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode"/> into an instance of MGTeamsInternalPreApprovedPermissions.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of MGTeamsInternalPreApprovedPermissions.</returns>
        internal static MGTeamsInternalPreApprovedPermissions FromJson(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject json)
        {
            string odataType = If(json.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString>("@odata.type"), out var jsonType)
                ? (string)jsonType
                : string.Empty;

            if (string.Equals(odataType, "#microsoft.graph.allPreApprovedPermissions", System.StringComparison.OrdinalIgnoreCase))
            {
                return MGTeamsInternalAllPreApprovedPermissions.FromJson(json);
            }

            if (string.Equals(odataType, "#microsoft.graph.enumeratedPreApprovedPermissions", System.StringComparison.OrdinalIgnoreCase))
            {
                return MGTeamsInternalEnumeratedPreApprovedPermissions.FromJson(json);
            }

            if (string.Equals(odataType, "#microsoft.graph.allPreApprovedPermissionsOnResourceApp", System.StringComparison.OrdinalIgnoreCase))
            {
                return MGTeamsInternalAllPreApprovedPermissionsOnResourceApp.FromJson(json);
            }

            return new MGTeamsInternalPreApprovedPermissions(json);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MGTeamsInternalPreApprovedPermissions"/> class.
        /// </summary>
        internal MGTeamsInternalPreApprovedPermissions(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject json)
        {
            string odataType = If(json.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString>("@odata.type"), out var jsonType)
                ? (string)jsonType
                : string.Empty;
            string permissionKind = If(json.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString>("permissionKind"), out var jsonPermissionKind)
                ? (string)jsonPermissionKind
                : string.Empty;
            string permissionType = If(json.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString>("permissionType"), out var jsonPermissionType)
                ? (string)jsonPermissionType
                : string.Empty;

            this.SetProperties(permissionKind: permissionKind, permissionType: permissionType, odataType: odataType);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MGTeamsInternalPreApprovedPermissions"/> class.
        /// </summary>
        internal MGTeamsInternalPreApprovedPermissions(string permissionKind, string odataType)
        {
            this.SetProperties(permissionKind, permissionType: "application", odataType: odataType);
        }

        /// <summary>
        /// Initialize properties of this object.
        /// </summary>
        private void SetProperties(
            string permissionKind,
            string permissionType,
            string odataType)
        {
            this.PermissionKind = permissionKind;
            this.PermissionType = permissionType;
            this.OdataType = odataType;
        }

        /// <summary>
        /// Serialize this instance to a JsonNode.
        /// </summary>
        /// <returns>Json Node.</returns>
        internal virtual Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode ToJson()
        {
            Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject jsonObject = new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject();

            if (this.PermissionKind != null)
            {
                jsonObject.Add("permissionKind", (Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode)new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString(this.PermissionKind));
            }

            if (this.PermissionType != null)
            {
                jsonObject.Add("permissionType", (Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode)new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString(this.PermissionType));
            }

            if (this.OdataType != null)
            {
                jsonObject.Add("@odata.type", (Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode)new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString(this.OdataType));
            }

            return jsonObject;
        }
    }
}