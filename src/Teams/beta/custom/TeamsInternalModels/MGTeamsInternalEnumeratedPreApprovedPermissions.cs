// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6306, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.Beta.PowerShell.Models.TeamsInternal
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using static Microsoft.Graph.Beta.PowerShell.Runtime.Extensions;

    /// <summary>
    /// Teams internal model for enumerated preapproved permissions in preapproval policies.
    /// </summary>
    internal class MGTeamsInternalEnumeratedPreApprovedPermissions : MGTeamsInternalPreApprovedPermissions
    {
        /// <summary>
        /// The permission Ids.
        /// </summary>
        internal IEnumerable<string> PermissionIds { get; private set; }

        /// <summary>
        /// The Resource Application Id.
        /// </summary>
        internal string ResourceApplicationId { get; private set; }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode"/> into an instance of MGTeamsInternalEnumeratedPreApprovedPermissions.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of MGTeamsInternalEnumeratedPreApprovedPermissions.</returns>
        internal static new MGTeamsInternalEnumeratedPreApprovedPermissions FromJson(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject json)
        {
            return new MGTeamsInternalEnumeratedPreApprovedPermissions(json);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MGTeamsInternalEnumeratedPreApprovedPermissions"/> class.
        /// </summary>
        internal MGTeamsInternalEnumeratedPreApprovedPermissions(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject json)
            : base(json)
        {
            IEnumerable<string> permissionIds = If(json.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonArray>("permissionIds"), out var jsonPermissionIds)
                ? jsonPermissionIds.Select(j => (string)j).ToArray()
                : Array.Empty<string>();

            string resourceApplicationId = If(json.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString>("resourceApplicationId"), out var jsonResourceApplicationId)
                ? (string)ResourceApplicationId
                : string.Empty;

            this.SetProperties(permissionIds, resourceApplicationId);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MGTeamsInternalEnumeratedPreApprovedPermissions"/> class.
        /// </summary>
        internal MGTeamsInternalEnumeratedPreApprovedPermissions(
            IEnumerable<string> permissionIds)
            : base(permissionKind: "enumerated", odataType: "#microsoft.graph.enumeratedPreApprovedPermissions")
        {
            this.SetProperties(permissionIds, resourceApplicationId: "00000003-0000-0000-c000-000000000000");
        }

        /// <summary>
        /// Initialize properties of this object.
        /// </summary>
        private void SetProperties(
            IEnumerable<string> permissionIds,
            string resourceApplicationId)
        {
            this.PermissionIds = permissionIds;
            this.ResourceApplicationId = resourceApplicationId;
        }

        /// <summary>
        /// Serialize this instance to a JsonNode.
        /// </summary>
        /// <returns>Json Node.</returns>
        internal override Runtime.Json.JsonNode ToJson()
        {
            Runtime.Json.JsonObject jsonObject =
                (Runtime.Json.JsonObject)base.ToJson();

            if (this.PermissionIds != null)
            {
                var permissionIdsJson = new Runtime.Json.XNodeArray();
                foreach (var singlePermissionId in this.PermissionIds)
                {
                    if (singlePermissionId != null)
                    {
                        permissionIdsJson.Add(new Runtime.Json.JsonString(singlePermissionId));
                    }
                }

                jsonObject.Add("permissionIds", permissionIdsJson);
            }

            if (this.ResourceApplicationId != null)
            {
                jsonObject.Add("resourceApplicationId", (Runtime.Json.JsonNode)new Runtime.Json.JsonString(this.ResourceApplicationId));
            }

            return jsonObject;
        }
    }
}