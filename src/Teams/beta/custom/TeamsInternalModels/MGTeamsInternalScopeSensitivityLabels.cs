// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6306, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.Beta.PowerShell.Models.TeamsInternal
{
    using static Microsoft.Graph.Beta.PowerShell.Runtime.Extensions;

    /// <summary>
    /// Teams internal model for sensitivity labels in preapproval policies.
    /// </summary>
    internal class MGTeamsInternalScopeSensitivityLabels
    {
        /// <summary>
        /// The label kind.
        /// </summary>
        internal string LabelKind { get; private set; }

        /// <summary>
        /// The odata type of the object.
        /// </summary>
        internal string OdataType { get; private set; }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode"/> into an instance of MGTeamsInternalScopeSensitivityLabels.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of MGTeamsInternalScopeSensitivityLabels.</returns>
        internal static MGTeamsInternalScopeSensitivityLabels FromJson(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject json)
        {
            string type = If(json.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString>("@odata.type"), out var jsonType)
                ? (string)jsonType
                : string.Empty; 

            if (string.Equals(type, "#microsoft.graph.allScopeSensitivityLabels", System.StringComparison.OrdinalIgnoreCase))
            {
                return MGTeamsInternalAllScopeSensitivityLabels.FromJson(json);
            }

            if (string.Equals(type, "#microsoft.graph.enumeratedScopeSensitivityLabels", System.StringComparison.OrdinalIgnoreCase))
            {
                return MGTeamsInternalEnumeratedScopeSensitivityLabels.FromJson(json);
            }

            return new MGTeamsInternalScopeSensitivityLabels(json);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MGTeamsInternalScopeSensitivityLabels"/> class.
        /// </summary>
        internal MGTeamsInternalScopeSensitivityLabels(string labelKind, string type)
        {
            this.SetProperties(labelKind: labelKind, type: type);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MGTeamsInternalScopeSensitivityLabels"/> class.
        /// </summary>
        internal MGTeamsInternalScopeSensitivityLabels(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject json)
        {
            string type = If(json.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString>("@odata.type"), out var jsonType)
                ? (string)jsonType
                : string.Empty;

            string labelKind = If(json.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString>("labelKind"), out var jsonLabelKind)
                ? (string)jsonLabelKind
                : string.Empty;

            this.SetProperties(labelKind: labelKind, type: type);
        }

        /// <summary>
        /// Initialize properties of this object.
        /// </summary>
        private void SetProperties(string labelKind, string type)
        {
            this.LabelKind = labelKind;
            this.OdataType = type;
        }

        /// <summary>
        /// Serialize this instance to a JsonNode.
        /// </summary>
        /// <returns>Json Node.</returns>
        internal virtual Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode ToJson()
        {
            Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject jsonObject = new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject();

            if (this.LabelKind != null)
            {
                jsonObject.Add("labelKind", (Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode)new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString(this.LabelKind));
            }

            if (this.OdataType != null)
            {
                jsonObject.Add("@odata.type", (Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode)new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString(this.OdataType));
            }

            return jsonObject;
        }
    }
}