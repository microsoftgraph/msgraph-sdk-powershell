// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6306, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.Beta.PowerShell.Models
{
    using System;
    using static Microsoft.Graph.Beta.PowerShell.Runtime.Extensions;

    /// <summary>teamsApp</summary>
    public partial class MicrosoftGraphTeamsAppPreApproval
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject json);

        partial void AfterToJson(ref Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject container, Microsoft.Graph.Beta.PowerShell.Runtime.SerializationMode serializationMode);


        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode"/> into an instance of Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsApp.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsApp.</returns>
        public static Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphTeamsAppPreApproval FromJson(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject json ? new MicrosoftGraphTeamsAppPreApproval(json, new global::System.Collections.Generic.HashSet<string>() { @"id", @"resourceSpecificApplicationPermissionsAllowedForTeams", @"resourceSpecificApplicationPermissionsAllowedForChats", @"teamLevelSensitivityLabelSelectionMode", @"specificSensitivityLabelIdsApplicableToTeams" }) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject into a new instance of <see cref="MicrosoftGraphTeamsApp" />.
        /// </summary>
        /// <param name="json">A Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject instance to deserialize from.</param>
        /// <param name="exclusions"></param>
        internal MicrosoftGraphTeamsAppPreApproval(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject json, global::System.Collections.Generic.HashSet<string> exclusions = null)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }

            __microsoftGraphEntity = new Microsoft.Graph.Beta.PowerShell.Models.MicrosoftGraphEntity(json, new global::System.Collections.Generic.HashSet<string>((exclusions ?? new System.Collections.Generic.HashSet<string>())) { @"id", @"teamsAppId", @"resourceSpecificApplicationPermissionsAllowedForTeams", @"resourceSpecificApplicationPermissionsAllowedForChats", @"teamLevelSensitivityLabelSelectionMode", @"specificSensitivityLabelIdsApplicableToTeams" });
            { _teamsAppId = If(json?.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString>("teamsAppId"), out var __jsonTeamsAppId) ? (string)__jsonTeamsAppId : (string)TeamsAppId; }
            { _resourceSpecificApplicationPermissionsAllowedForTeams = If(json?.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonArray>("resourceSpecificApplicationPermissionsAllowedForTeams"), out var __jsonResourceSpecificApplicationPermissionsAllowedForTeams) ? If(__jsonResourceSpecificApplicationPermissionsAllowedForTeams as Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(() => global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u) => (string)(__u is Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null))))() : null : ResourceSpecificApplicationPermissionsAllowedForTeams; }
            { _resourceSpecificApplicationPermissionsAllowedForChats = If(json?.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonArray>("resourceSpecificApplicationPermissionsAllowedForChats"), out var __jsonResourceSpecificApplicationPermissionsAllowedForChats) ? If(__jsonResourceSpecificApplicationPermissionsAllowedForChats as Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(() => global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u) => (string)(__u is Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null))))() : null : ResourceSpecificApplicationPermissionsAllowedForChats; }
            { _teamLevelSensitivityLabelCondition =
                    If(json?.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString>("teamLevelSensitivityLabelCondition"), out var __jsonTeamLevelSensitivityLabelSelectionMode) 
                    ? (MicrosoftGraphSensitivityLabelCondition?)Enum.Parse(typeof(MicrosoftGraphSensitivityLabelCondition?), __jsonTeamLevelSensitivityLabelSelectionMode.ToString())
                    : TeamLevelSensitivityLabelCondition;
            }
            { _specificSensitivityLabelIdsApplicableToTeams = If(json?.PropertyT<Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonArray>("specificSensitivityLabelIdsApplicableToTeams"), out var __jsonSpecificSensitivityLabelIdsApplicableToTeams) ? If(__jsonSpecificSensitivityLabelIdsApplicableToTeams as Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(() => global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u) => (string)(__u is Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null))))() : null : SpecificSensitivityLabelIdsApplicableToTeams; }

            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="MicrosoftGraphTeamsApp" /> into a <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="MicrosoftGraphTeamsApp" /> as a <see cref="Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode ToJson(Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject container, Microsoft.Graph.Beta.PowerShell.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }

            __microsoftGraphEntity?.ToJson(container, serializationMode);

            AddIf(null != (((object)this._teamsAppId)?.ToString()) ? (Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode)new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString(this._teamLevelSensitivityLabelCondition.ToString()) : null, "teamsAppId", container.Add);

            if (null != this._resourceSpecificApplicationPermissionsAllowedForTeams)
            {
                var __w = new Microsoft.Graph.Beta.PowerShell.Runtime.Json.XNodeArray();
                foreach (var __x in this._resourceSpecificApplicationPermissionsAllowedForTeams)
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode)new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString(__x.ToString()) : null, __w.Add);
                }
                container.Add("resourceSpecificApplicationPermissionsAllowedForTeams", __w);
            }

            if (null != this._resourceSpecificApplicationPermissionsAllowedForChats)
            {
                var __w = new Microsoft.Graph.Beta.PowerShell.Runtime.Json.XNodeArray();
                foreach (var __x in this._resourceSpecificApplicationPermissionsAllowedForChats)
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode)new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString(__x.ToString()) : null, __w.Add);
                }
                container.Add("resourceSpecificApplicationPermissionsAllowedForChats", __w);
            }

            AddIf(null != (((object)this._teamLevelSensitivityLabelCondition)?.ToString()) ? (Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode)new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString(this._teamLevelSensitivityLabelCondition.ToString()) : null, "teamLevelSensitivityLabelSelectionMode", container.Add);

            if (null != this._specificSensitivityLabelIdsApplicableToTeams)
            {
                var __w = new Microsoft.Graph.Beta.PowerShell.Runtime.Json.XNodeArray();
                foreach (var __x in this._specificSensitivityLabelIdsApplicableToTeams)
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonNode)new Microsoft.Graph.Beta.PowerShell.Runtime.Json.JsonString(__x.ToString()) : null, __w.Add);
                }
                container.Add("specificSensitivityLabelIdsApplicableToTeams", __w);
            }

            AfterToJson(ref container);
            AfterToJson(ref container, serializationMode);

            return container;
        }
    }
}