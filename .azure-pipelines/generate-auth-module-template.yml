# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

parameters:
  - name: AUTH_MODULE_PATH
    displayName: 'Authentication Module Path'
    type: string
    default: 'src\Authentication\Authentication\'
  - name: AUTH_MODULE_NAME
    displayName: 'Authentication Module Name'
    type: string
    default: 'Authentication'
  - name: Api_Key
    displayName: 'Api Key'
    type: string
  - name: EnableSigning
    displayName: 'Enable Signing'
    type: boolean
    default: false
  - name: BUILDNUMBER
    displayName: 'Build Number'
    type: string
    default: $[format('{0:yyMMddHH}', pipeline.startTime)]
  - name: AZURESUBSCRIPTION
    default: "Microsoft Graph Build Agents (Win+Lin)"
    displayName: Azure Subscription

  - name: KEYVAULT
    default: "msgraph-build-keyvault"
    displayName: Build Key vault


jobs:
- job: MsGraphPSSDKAuthModuleGeneration
  displayName: Microsoft Graph PowerShell SDK Auth Module Generation

  steps:
  - template: ./common-templates/install-tools-template.yml

  - task: AzureKeyVault@1
    inputs:
     azureSubscription: $(AZURESUBSCRIPTION)
     KeyVaultName: $(KEYVAULT)
     SecretsFilter: '*'
     RunAsPreJob: true

  - task: PowerShell@2
    displayName: 'Generate and Build Auth Module'
    env:
       CLIENTCERTIFICATE: $(MsGraphPSSDKCertificate)
    inputs:
      targetType: 'inline'
      pwsh: true
      script: |
        Write-Host $(BUILDNUMBER)
        . $(System.DefaultWorkingDirectory)/tools/GenerateAuthenticationModule.ps1 -ArtifactsLocation $(Build.ArtifactStagingDirectory) -Build -ModulePreviewNumber $(BUILDNUMBER) -Test

  - task: DotNetCoreCLI@2
    displayName: 'Run: Enabled Tests'
    inputs:
      command: 'test'
      publishTestResults: true
      projects: '$(System.DefaultWorkingDirectory)/src/Authentication/Authentication.Test/*.csproj'
      testRunTitle: 'Run Enabled Tests'

  - task: RoslynAnalyzers@2
    inputs:
        userProvideBuildInfo: 'msBuildInfo'
        msBuildVersion: '16.0'
        msBuildArchitecture: 'DotNetCore'
        msBuildCommandline: '"C:\Program Files\dotnet\dotnet.exe" msbuild $(System.DefaultWorkingDirectory)//src//Authentication//Authentication.sln /nologo /nr:false'

  - task: CodeMetrics@1
    displayName: 'Run CodeMetrics'
    inputs:
        Files: '$(System.DefaultWorkingDirectory)//**//Microsoft.Graph.Authentication.dll;$(System.DefaultWorkingDirectory)//**//Microsoft.Graph.Authentication.exe'
        continueOnError: true

  - task: PowerShell@2
    displayName: 'Generate and Build Auth Module'
    inputs:
      targetType: 'inline'
      pwsh: true
      script: |
        Write-Host $(BUILDNUMBER)
        . $(System.DefaultWorkingDirectory)/tools/GenerateAuthenticationModule.ps1 -ArtifactsLocation $(Build.ArtifactStagingDirectory) -Build -EnableSigning -ModulePreviewNumber $(BUILDNUMBER) -RepositoryName "LocalNugetFeed"

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
    displayName: 'ESRP DLL Strong Name (Graph Auth Module)'
    enabled: true
    inputs:
      ConnectedServiceName: 'microsoftgraph ESRP CodeSign DLL and NuGet (AKV)'
      FolderPath: $(AUTH_MODULE_PATH)
      # Recursively finds files matching these patterns:
      Pattern: 'Microsoft.Graph.Authentication.dll, Microsoft.Graph.Authentication.Core.dll'
      signConfigType: inlineSignParams
      inlineOperation: |
       [
           {
               "keyCode": "CP-233863-SN",
               "operationSetCode": "StrongNameSign",
               "parameters": [],
               "toolName": "sign",
               "toolVersion": "1.0"
           },
           {
               "keyCode": "CP-233863-SN",
               "operationSetCode": "StrongNameVerify",
               "parameters": [],
               "toolName": "sign",
               "toolVersion": "1.0"
           }
       ]
      SessionTimeout: 20

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
    displayName: 'ESRP DLL CodeSigning (Graph Auth Module)'
    enabled: true
    inputs:
      ConnectedServiceName: 'microsoftgraph ESRP CodeSign DLL and NuGet (AKV)'
      FolderPath: $(AUTH_MODULE_PATH)
      # Recursively finds files matching these patterns:
      Pattern: 'Microsoft.Graph.Authentication.dll, Microsoft.Graph.Authentication.Core.dll, *.ps1'
      signConfigType: inlineSignParams
      inlineOperation: |
       [
           {
               "keyCode": "CP-230012",
               "operationSetCode": "SigntoolSign",
               "parameters": [
                   {
                       "parameterName": "OpusName",
                       "parameterValue": "Microsoft"
                   },
                   {
                       "parameterName": "OpusInfo",
                       "parameterValue": "http://www.microsoft.com"
                   },
                   {
                       "parameterName": "FileDigest",
                       "parameterValue": "/fd \"SHA256\""
                   },
                   {
                       "parameterName": "PageHash",
                       "parameterValue": "/NPH"
                   },
                   {
                       "parameterName": "TimeStamp",
                       "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                   }
               ],
               "toolName": "sign",
               "toolVersion": "1.0"
           },
           {
               "keyCode": "CP-230012",
               "operationSetCode": "SigntoolVerify",
               "parameters": [],
               "toolName": "sign",
               "toolVersion": "1.0"
           }
       ]
      SessionTimeout: 20

  - task: PowerShell@2
    displayName: 'Pack Auth Module'
    inputs:
      targetType: 'inline'
      pwsh: true
      script: |
        . $(System.DefaultWorkingDirectory)/tools/PackModule.ps1 -Module $(AUTH_MODULE_NAME) -ArtifactsLocation $(Build.ArtifactStagingDirectory)

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
    displayName: 'ESRP NuGet CodeSigning'
    enabled: true
    inputs:
      ConnectedServiceName: 'microsoftgraph ESRP CodeSign DLL and NuGet (AKV)'
      FolderPath: '$(Build.ArtifactStagingDirectory)\$(AUTH_MODULE_NAME)'
      Pattern: 'Microsoft.Graph.$(AUTH_MODULE_NAME)*.nupkg'
      signConfigType: inlineSignParams
      inlineOperation: |
            [
                {
                    "keyCode": "CP-401405",
                    "operationSetCode": "NuGetSign",
                    "parameters": [ ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                },
                {
                    "keyCode": "CP-401405",
                    "operationSetCode": "NuGetVerify",
                    "parameters": [ ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                }
            ]
      SessionTimeout: 20

  - task: NuGetCommand@2
    displayName: 'NuGet Publish To Local Build Feed'
    inputs:
      command: push
      packagesToPush: '$(Build.ArtifactStagingDirectory)\$(AUTH_MODULE_NAME)\Microsoft.Graph.$(AUTH_MODULE_NAME)*.nupkg'
      publishVstsFeed: '0985d294-5762-4bc2-a565-161ef349ca3e/edc337b9-e5ea-49dd-a2cb-e8d66668ca57'
      allowPackageConflicts: true

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'NUnit'
      testResultsFiles: '**/*-TestResults.xml'

  - task: PublishCodeCoverageResults@1
    inputs:
      #codeCoverageTool: 'JaCoCo' # Options: cobertura, jaCoCo
      summaryFileLocation: "**/coverage.xml"

  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact Microsoft.Graph.Authentication.nupkg'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(AUTH_MODULE_NAME)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
