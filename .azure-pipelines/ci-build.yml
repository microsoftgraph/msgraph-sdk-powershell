# azure-pipelines.yml
trigger:
  branches:
    include:
      - task/migrate-acr-push-pipeline
      - main

  tags:
    include:
      - v*
 
variables:
  REGISTRY: 'msgraphpperegistry.azurecr.io'
  IMAGE_NAME: 'public/microsoftgraph/powershell'
  PREVIEW_BRANCH: 'refs/heads/task/migrate-acr-push-pipeline'  # Updated to target your branch
  vmImageName: 'ubuntu-latest'
 
 
stages:
- stage: PushToRegistry
  displayName: 'Push docker image'
  jobs:
    - job: PushDockerImage
      displayName: 'Push docker image'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - checkout: self

      # Display the contents of the Build.SourcesDirectory
      - bash: |
          echo "Build.SourcesDirectory: $(Build.SourcesDirectory)"
          ls -la $(Build.SourcesDirectory)
        displayName: 'List contents of Build.SourcesDirectory'
 
      - task: AzureCLI@2
        displayName: "Log in to Azure Container Registry"
        inputs:
          azureSubscription: 'ACR Push Test' # service connection
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          'inlineScript': |
            az acr login --name $(REGISTRY)
      - powershell: |
          $date = Get-Date -Format "yyyyMMdd"
          Write-Host "##vso[task.setvariable variable=currentDate]$date"

      - script: |
          docker run --privileged --rm tonistiigi/binfmt --install all
        displayName: 'Enable multi-platform builds'
      
      - script: |
          docker buildx create --use --name mybuilder
        displayName: 'Set up Docker BuildX'
      
      - script: |
          docker buildx inspect --bootstrap
        displayName: 'Ensure BuildX is working'

      - powershell: |
          $version = $Env:BUILD_SOURCEBRANCH.replace("refs/tags/", "")
          Write-Output "##vso[task.setvariable variable=version]$version"
        displayName: 'Get truncated run number'
 
      # Version information is not available in .csproj projects
      # - bash: |
      #     echo "##vso[task.setvariable variable=version]$(version)"
      #   displayName: 'Set version variable
          
      - bash: |
          echo "Build Number: $(Build.BuildNumber)"
          # Extract the last 3 characters for the run number
          runnumber=$(echo "$(Build.BuildNumber)" | grep -o '[0-9]\+$')
          echo "Extracted Run Number: $runnumber"
          
          # If extraction fails, set a default
          if [ -z "$runnumber" ]; then
            echo "Extraction failed, using default value"
            runnumber=$(date +"%S%N" | cut -c1-3)
            echo "Generated fallback run number: $runnumber"
          fi
          
          # Set the variable for later steps
          echo "##vso[task.setvariable variable=RUNNUMBER]$runnumber"
          echo "##vso[task.setvariable variable=RUNNUMBER;isOutput=true]$runnumber"
        displayName: 'Get truncated run number'
        name: getrunnumber
 
      - bash: |
          echo "Building docker images"
          # Format the date to be compatible with Docker tags
          formatted_date=$(date +"%Y%m%d%H%M%S")
          docker buildx build \
            --platform linux/amd64 \
            --push \
            -t "$(REGISTRY)/$(IMAGE_NAME):latest" \
            -t "$(REGISTRY)/$(IMAGE_NAME):$formatted_date.$RUNNUMBER" \
            "$(Build.SourcesDirectory)"
        displayName: 'Build and push docker images'