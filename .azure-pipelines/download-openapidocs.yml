# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Generates a release build artifact (nuget) from HEAD of master for auth module.
name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
pool:
  vmImage: "windows-latest"

variables:
  BRANCH: 'weeklyOpenApiDocsDownload'
  GITHUB_TOKEN: $(System.AccessToken)

schedules:
    - cron: "0 12 * * 5" # Run Every Friday at Midnight UTC Time
      displayName: "Weekly OpenApiDocs Download and PR"
      branches: 
        include: 
        - gn/generateOpenApiDocs
        - dev
      always: true

steps:

  - checkout: self
    persistCredentials: true
    clean: true
  - task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2
    displayName: 'Run CredScan'
    inputs:
      debugMode: false

  - task: PowerShell@2
    displayName: "Compute Branch"
    inputs:
      targetType: inline
      script: |
        $branch = "{0}.{1}" -f "weeklyOpenApiDocsDownload", (Get-Date -Format yyyyMMdd)
        Write-Host "##vso[task.setvariable variable=BRANCH;]$branch"
  - task: PowerShell@2
    displayName: "Configure User"
    inputs:
      targetType: 'inline'
      script: |
        git config --global user.email "mgpssdk@microsoft.com"
        git config --global user.name "GitHub Worklows"

  - task: PowerShell@2
    displayName: "Show Directory"
    inputs:
      targetType: 'inline'
      script: |
        Write-Host $(System.DefaultWorkingDirectory)
        ls  $(System.DefaultWorkingDirectory)
        ls  $(System.DefaultWorkingDirectory)/tools
    
  - task: PowerShell@2
    displayName: Download v1.0 OpenApiDocs
    inputs:
      filePath: '$(System.DefaultWorkingDirectory)/tools/UpdateOpenApi.ps1'
      pwsh: true

  - task: PowerShell@2
    displayName: Download beta OpenApiDocs
    inputs:
      filePath: '$(System.DefaultWorkingDirectory)/tools/UpdateOpenApi.ps1'
      arguments: '-BetaGraphVersion'
      pwsh: true

  - task: Bash@3
    displayName : "Create PR $(BRANCH)"
    inputs:
      targetType: 'inline'
      script: |
          git status
          git branch $(BRANCH)
          git checkout $(BRANCH)
          git status
  - task: Bash@3
    displayName : "Commit Downloaded Files"
    inputs:
      targetType: 'inline'
      script: |
        git status
        git add .
        git commit -m 'Weekly OpenApiDocs Download'
        git status
        git push --set-upstream origin $(BRANCH)
        git status

  -  task: Bash@3
     displayName: "Create Pull Request"
     inputs:
        targetType: 'inline'
        script: |
          curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
          bin/hub pull-request -b "dev" -h "$(BRANCH)" -m "Weekly OpenApiDocs Download" -m "Weekly OpenAPiDocs Download" -r "finsharp" -a "finsharp" -l "generated"