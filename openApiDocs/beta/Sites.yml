openapi: 3.0.1
info:
  title: Sites
  version: v1.0-beta
servers:
  - url: https://graph.microsoft.com/beta/
    description: Core
paths:
  '/groups/{group-id}/sites':
    get:
      tags:
        - groups.site
      summary: Get sites from groups
      operationId: groups_ListSites
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - deleted
                - deleted desc
                - displayName
                - displayName desc
                - root
                - root desc
                - settings
                - settings desc
                - sharepointIds
                - sharepointIds desc
                - siteCollection
                - siteCollection desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - deleted
                - displayName
                - root
                - settings
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.siteCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sites for groups
      operationId: groups_CreateSites
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.site'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}':
    get:
      tags:
        - groups.site
      summary: Get sites from groups
      operationId: groups_GetSites
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - deleted
                - displayName
                - root
                - settings
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
          links:
            createdByUser:
              operationId: groups.Sites.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            lastModifiedByUser:
              operationId: groups.Sites.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            analytics:
              operationId: groups.Sites.GetAnalytics
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            columns:
              operationId: groups.Sites.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            contentTypes:
              operationId: groups.Sites.ListContentTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            drive:
              operationId: groups.Sites.GetDrive
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            drives:
              operationId: groups.Sites.ListDrives
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            externalColumns:
              operationId: groups.Sites.ListExternalColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            items:
              operationId: groups.Sites.ListItems
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            lists:
              operationId: groups.Sites.ListLists
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            operations:
              operationId: groups.Sites.ListOperations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            pages:
              operationId: groups.Sites.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            permissions:
              operationId: groups.Sites.ListPermissions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            sites:
              operationId: groups.Sites.ListSites
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            termStore:
              operationId: groups.Sites.GetTermStore
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            onenote:
              operationId: groups.Sites.GetOnenote
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            getActivitiesByInterval:
              operationId: groups.group.sites.site.getActivitiesGraphBPreInterval
            getApplicableContentTypesForList:
              operationId: groups.group.sites.site.getApplicableContentTypesGraphFPreList
            getByPath:
              operationId: groups.group.sites.site.getGraphBPrePath
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sites in groups
      operationId: groups_UpdateSites
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.site'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/analytics':
    get:
      tags:
        - groups.site
      summary: Get analytics from groups
      operationId: groups.sites_GetAnalytics
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
          links:
            allTime:
              operationId: groups.sites.Analytics.GetAllTime
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            itemActivityStats:
              operationId: groups.sites.Analytics.ListItemActivityStats
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            lastSevenDays:
              operationId: groups.sites.Analytics.GetLastSevenDays
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/columns':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      operationId: groups.sites_ListColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to columns for groups
      operationId: groups.sites_CreateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      operationId: groups.sites_GetColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.Columns.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property columns in groups
      operationId: groups.sites_UpdateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property columns for groups
      operationId: groups.sites_DeleteColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - groups.site
      summary: Get sourceColumn from groups
      operationId: groups.sites.columns_GetSourceColumn
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.columns.SourceColumn.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes':
    get:
      tags:
        - groups.site
      summary: Get contentTypes from groups
      operationId: groups.sites_ListContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to contentTypes for groups
      operationId: groups.sites_CreateContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}':
    get:
      tags:
        - groups.site
      summary: Get contentTypes from groups
      operationId: groups.sites_GetContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: groups.sites.ContentTypes.GetBase
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: groups.sites.ContentTypes.ListBaseTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: groups.sites.ContentTypes.ListColumnLinks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: groups.sites.ContentTypes.ListColumnPositions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: groups.sites.ContentTypes.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            associateWithHubSites:
              operationId: groups.group.sites.site.contentTypes.contentType.associateGraphWPreHubSites
            copyToDefaultContentLocation:
              operationId: groups.group.sites.site.contentTypes.contentType.copyToDefaultContentLocation
            isPublished:
              operationId: groups.group.sites.site.contentTypes.contentType.isPublished
            publish:
              operationId: groups.group.sites.site.contentTypes.contentType.publish
            unpublish:
              operationId: groups.group.sites.site.contentTypes.contentType.unpublish
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property contentTypes in groups
      operationId: groups.sites_UpdateContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property contentTypes for groups
      operationId: groups.sites_DeleteContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/base':
    get:
      tags:
        - groups.site
      summary: Get base from groups
      operationId: groups.sites.contentTypes_GetBase
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: groups.sites.contentTypes.Base.GetBase
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: groups.sites.contentTypes.Base.ListBaseTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: groups.sites.contentTypes.Base.ListColumnLinks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: groups.sites.contentTypes.Base.ListColumnPositions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: groups.sites.contentTypes.Base.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/baseTypes':
    get:
      tags:
        - groups.site
      summary: Get baseTypes from groups
      operationId: groups.sites.contentTypes_ListBaseTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/baseTypes/{contentType-id1}':
    get:
      tags:
        - groups.site
      summary: Get baseTypes from groups
      operationId: groups.sites.contentTypes_GetBaseTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: contentType-id1
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: groups.sites.contentTypes.BaseTypes.GetBase
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            baseTypes:
              operationId: groups.sites.contentTypes.BaseTypes.ListBaseTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnLinks:
              operationId: groups.sites.contentTypes.BaseTypes.ListColumnLinks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnPositions:
              operationId: groups.sites.contentTypes.BaseTypes.ListColumnPositions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columns:
              operationId: groups.sites.contentTypes.BaseTypes.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columnLinks':
    get:
      tags:
        - groups.site
      summary: Get columnLinks from groups
      operationId: groups.sites.contentTypes_ListColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - name
                - name desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnLinkCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to columnLinks for groups
      operationId: groups.sites.contentTypes_CreateColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columnLinks/{columnLink-id}':
    get:
      tags:
        - groups.site
      summary: Get columnLinks from groups
      operationId: groups.sites.contentTypes_GetColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property columnLinks in groups
      operationId: groups.sites.contentTypes_UpdateColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property columnLinks for groups
      operationId: groups.sites.contentTypes_DeleteColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columnPositions':
    get:
      tags:
        - groups.site
      summary: Get columnPositions from groups
      operationId: groups.sites.contentTypes_ListColumnPositions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columnPositions/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get columnPositions from groups
      operationId: groups.sites.contentTypes_GetColumnPositions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.contentTypes.ColumnPositions.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columns':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      operationId: groups.sites.contentTypes_ListColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to columns for groups
      operationId: groups.sites.contentTypes_CreateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      operationId: groups.sites.contentTypes_GetColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.contentTypes.Columns.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property columns in groups
      operationId: groups.sites.contentTypes_UpdateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property columns for groups
      operationId: groups.sites.contentTypes_DeleteColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - groups.site
      summary: Get sourceColumn from groups
      operationId: groups.sites.contentTypes.columns_GetSourceColumn
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.contentTypes.columns.SourceColumn.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/drive':
    get:
      tags:
        - groups.site
      summary: Get drive from groups
      operationId: groups.sites_GetDrive
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.drive'
          links:
            createdByUser:
              operationId: groups.sites.Drive.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            lastModifiedByUser:
              operationId: groups.sites.Drive.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            activities:
              operationId: groups.sites.Drive.ListActivities
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            bundles:
              operationId: groups.sites.Drive.ListBundles
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            following:
              operationId: groups.sites.Drive.ListFollowing
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            items:
              operationId: groups.sites.Drive.ListItems
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            list:
              operationId: groups.sites.Drive.GetList
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            root:
              operationId: groups.sites.Drive.GetRoot
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            special:
              operationId: groups.sites.Drive.ListSpecial
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/drives':
    get:
      tags:
        - groups.site
      summary: Get drives from groups
      operationId: groups.sites_ListDrives
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - driveType
                - driveType desc
                - owner
                - owner desc
                - quota
                - quota desc
                - sharePointIds
                - sharePointIds desc
                - system
                - system desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.driveCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/drives/{drive-id}':
    get:
      tags:
        - groups.site
      summary: Get drives from groups
      operationId: groups.sites_GetDrives
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: drive-id
          in: path
          description: 'key: id of drive'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: drive
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.drive'
          links:
            createdByUser:
              operationId: groups.sites.Drives.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            lastModifiedByUser:
              operationId: groups.sites.Drives.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            activities:
              operationId: groups.sites.Drives.ListActivities
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            bundles:
              operationId: groups.sites.Drives.ListBundles
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            following:
              operationId: groups.sites.Drives.ListFollowing
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            items:
              operationId: groups.sites.Drives.ListItems
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            list:
              operationId: groups.sites.Drives.GetList
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            root:
              operationId: groups.sites.Drives.GetRoot
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            special:
              operationId: groups.sites.Drives.ListSpecial
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/externalColumns':
    get:
      tags:
        - groups.site
      summary: Get externalColumns from groups
      operationId: groups.sites_ListExternalColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/externalColumns/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get externalColumns from groups
      operationId: groups.sites_GetExternalColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.ExternalColumns.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/items':
    get:
      tags:
        - groups.site
      summary: Get items from groups
      operationId: groups.sites_ListItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - createdByUser
                - lastModifiedByUser
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.baseItemCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/items/{baseItem-id}':
    get:
      tags:
        - groups.site
      summary: Get items from groups
      operationId: groups.sites_GetItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: baseItem-id
          in: path
          description: 'key: id of baseItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: baseItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - createdByUser
                - lastModifiedByUser
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.baseItem'
          links:
            createdByUser:
              operationId: groups.sites.Items.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                baseItem-id: $request.path.baseItem-id
            lastModifiedByUser:
              operationId: groups.sites.Items.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                baseItem-id: $request.path.baseItem-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists':
    get:
      tags:
        - groups.site
      summary: Get lists from groups
      operationId: groups.sites_ListLists
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - displayName
                - displayName desc
                - list
                - list desc
                - sharepointIds
                - sharepointIds desc
                - system
                - system desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - list
                - sharepointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - activities
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.listCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to lists for groups
      operationId: groups.sites_CreateLists
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.list'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.list'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}':
    get:
      tags:
        - groups.site
      summary: Get lists from groups
      operationId: groups.sites_GetLists
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - list
                - sharepointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - activities
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.list'
          links:
            createdByUser:
              operationId: groups.sites.Lists.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            lastModifiedByUser:
              operationId: groups.sites.Lists.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            activities:
              operationId: groups.sites.Lists.ListActivities
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            columns:
              operationId: groups.sites.Lists.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            contentTypes:
              operationId: groups.sites.Lists.ListContentTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            drive:
              operationId: groups.sites.Lists.GetDrive
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            items:
              operationId: groups.sites.Lists.ListItems
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            operations:
              operationId: groups.sites.Lists.ListOperations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            subscriptions:
              operationId: groups.sites.Lists.ListSubscriptions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property lists in groups
      operationId: groups.sites_UpdateLists
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.list'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property lists for groups
      operationId: groups.sites_DeleteLists
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/activities':
    get:
      tags:
        - groups.site
      summary: Get activities from groups
      operationId: groups.sites.lists_ListActivities
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - action
                - action desc
                - actor
                - actor desc
                - times
                - times desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - action
                - actor
                - times
                - driveItem
                - listItem
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - driveItem
                - listItem
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.itemActivityOLDCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to activities for groups
      operationId: groups.sites.lists_CreateActivities
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/columns':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      operationId: groups.sites.lists_ListColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to columns for groups
      operationId: groups.sites.lists_CreateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      operationId: groups.sites.lists_GetColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.lists.Columns.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property columns in groups
      operationId: groups.sites.lists_UpdateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property columns for groups
      operationId: groups.sites.lists_DeleteColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - groups.site
      summary: Get sourceColumn from groups
      operationId: groups.sites.lists.columns_GetSourceColumn
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.lists.columns.SourceColumn.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes':
    get:
      tags:
        - groups.site
      summary: Get contentTypes from groups
      operationId: groups.sites.lists_ListContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to contentTypes for groups
      operationId: groups.sites.lists_CreateContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}':
    get:
      tags:
        - groups.site
      summary: Get contentTypes from groups
      operationId: groups.sites.lists_GetContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: groups.sites.lists.ContentTypes.GetBase
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: groups.sites.lists.ContentTypes.ListBaseTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: groups.sites.lists.ContentTypes.ListColumnLinks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: groups.sites.lists.ContentTypes.ListColumnPositions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: groups.sites.lists.ContentTypes.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            associateWithHubSites:
              operationId: groups.group.sites.site.lists.list.contentTypes.contentType.associateGraphWPreHubSites
            copyToDefaultContentLocation:
              operationId: groups.group.sites.site.lists.list.contentTypes.contentType.copyToDefaultContentLocation
            isPublished:
              operationId: groups.group.sites.site.lists.list.contentTypes.contentType.isPublished
            publish:
              operationId: groups.group.sites.site.lists.list.contentTypes.contentType.publish
            unpublish:
              operationId: groups.group.sites.site.lists.list.contentTypes.contentType.unpublish
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property contentTypes in groups
      operationId: groups.sites.lists_UpdateContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property contentTypes for groups
      operationId: groups.sites.lists_DeleteContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/base':
    get:
      tags:
        - groups.site
      summary: Get base from groups
      operationId: groups.sites.lists.contentTypes_GetBase
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: groups.sites.lists.contentTypes.Base.GetBase
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: groups.sites.lists.contentTypes.Base.ListBaseTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: groups.sites.lists.contentTypes.Base.ListColumnLinks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: groups.sites.lists.contentTypes.Base.ListColumnPositions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: groups.sites.lists.contentTypes.Base.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/baseTypes':
    get:
      tags:
        - groups.site
      summary: Get baseTypes from groups
      operationId: groups.sites.lists.contentTypes_ListBaseTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/baseTypes/{contentType-id1}':
    get:
      tags:
        - groups.site
      summary: Get baseTypes from groups
      operationId: groups.sites.lists.contentTypes_GetBaseTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: contentType-id1
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: groups.sites.lists.contentTypes.BaseTypes.GetBase
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            baseTypes:
              operationId: groups.sites.lists.contentTypes.BaseTypes.ListBaseTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnLinks:
              operationId: groups.sites.lists.contentTypes.BaseTypes.ListColumnLinks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnPositions:
              operationId: groups.sites.lists.contentTypes.BaseTypes.ListColumnPositions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columns:
              operationId: groups.sites.lists.contentTypes.BaseTypes.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnLinks':
    get:
      tags:
        - groups.site
      summary: Get columnLinks from groups
      operationId: groups.sites.lists.contentTypes_ListColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - name
                - name desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnLinkCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to columnLinks for groups
      operationId: groups.sites.lists.contentTypes_CreateColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnLinks/{columnLink-id}':
    get:
      tags:
        - groups.site
      summary: Get columnLinks from groups
      operationId: groups.sites.lists.contentTypes_GetColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property columnLinks in groups
      operationId: groups.sites.lists.contentTypes_UpdateColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property columnLinks for groups
      operationId: groups.sites.lists.contentTypes_DeleteColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnPositions':
    get:
      tags:
        - groups.site
      summary: Get columnPositions from groups
      operationId: groups.sites.lists.contentTypes_ListColumnPositions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnPositions/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get columnPositions from groups
      operationId: groups.sites.lists.contentTypes_GetColumnPositions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.lists.contentTypes.ColumnPositions.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columns':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      operationId: groups.sites.lists.contentTypes_ListColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to columns for groups
      operationId: groups.sites.lists.contentTypes_CreateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      operationId: groups.sites.lists.contentTypes_GetColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.lists.contentTypes.Columns.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property columns in groups
      operationId: groups.sites.lists.contentTypes_UpdateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property columns for groups
      operationId: groups.sites.lists.contentTypes_DeleteColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - groups.site
      summary: Get sourceColumn from groups
      operationId: groups.sites.lists.contentTypes.columns_GetSourceColumn
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.lists.contentTypes.columns.SourceColumn.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/drive':
    get:
      tags:
        - groups.site
      summary: Get drive from groups
      operationId: groups.sites.lists_GetDrive
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.drive'
          links:
            createdByUser:
              operationId: groups.sites.lists.Drive.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            lastModifiedByUser:
              operationId: groups.sites.lists.Drive.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            activities:
              operationId: groups.sites.lists.Drive.ListActivities
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            bundles:
              operationId: groups.sites.lists.Drive.ListBundles
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            following:
              operationId: groups.sites.lists.Drive.ListFollowing
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            items:
              operationId: groups.sites.lists.Drive.ListItems
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            list:
              operationId: groups.sites.lists.Drive.GetList
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            root:
              operationId: groups.sites.lists.Drive.GetRoot
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            special:
              operationId: groups.sites.lists.Drive.ListSpecial
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items':
    get:
      tags:
        - groups.site
      summary: Get items from groups
      operationId: groups.sites.lists_ListItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - contentType
                - contentType desc
                - deleted
                - deleted desc
                - sharepointIds
                - sharepointIds desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - deleted
                - sharepointIds
                - createdByUser
                - lastModifiedByUser
                - activities
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.listItemCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to items for groups
      operationId: groups.sites.lists_CreateItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItem'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItem'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}':
    get:
      tags:
        - groups.site
      summary: Get items from groups
      operationId: groups.sites.lists_GetItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - deleted
                - sharepointIds
                - createdByUser
                - lastModifiedByUser
                - activities
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItem'
          links:
            createdByUser:
              operationId: groups.sites.lists.Items.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            lastModifiedByUser:
              operationId: groups.sites.lists.Items.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            activities:
              operationId: groups.sites.lists.Items.ListActivities
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            analytics:
              operationId: groups.sites.lists.Items.GetAnalytics
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            documentSetVersions:
              operationId: groups.sites.lists.Items.ListDocumentSetVersions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            driveItem:
              operationId: groups.sites.lists.Items.GetDriveItem
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            fields:
              operationId: groups.sites.lists.Items.GetFields
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            versions:
              operationId: groups.sites.lists.Items.ListVersions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            createLink:
              operationId: groups.group.sites.site.lists.list.items.listItem.createLink
            getActivitiesByInterval:
              operationId: groups.group.sites.site.lists.list.items.listItem.getActivitiesGraphBPreInterval
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property items in groups
      operationId: groups.sites.lists_UpdateItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItem'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property items for groups
      operationId: groups.sites.lists_DeleteItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/activities':
    get:
      tags:
        - groups.site
      summary: Get activities from groups
      operationId: groups.sites.lists.items_ListActivities
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - action
                - action desc
                - actor
                - actor desc
                - times
                - times desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - action
                - actor
                - times
                - driveItem
                - listItem
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - driveItem
                - listItem
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.itemActivityOLDCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to activities for groups
      operationId: groups.sites.lists.items_CreateActivities
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/activities/{itemActivityOLD-id}':
    get:
      tags:
        - groups.site
      summary: Get activities from groups
      operationId: groups.sites.lists.items_GetActivities
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - action
                - actor
                - times
                - driveItem
                - listItem
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - driveItem
                - listItem
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
          links:
            driveItem:
              operationId: groups.sites.lists.items.Activities.GetDriveItem
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            listItem:
              operationId: groups.sites.lists.items.Activities.GetListItem
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property activities in groups
      operationId: groups.sites.lists.items_UpdateActivities
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property activities for groups
      operationId: groups.sites.lists.items_DeleteActivities
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/activities/{itemActivityOLD-id}/driveItem':
    get:
      tags:
        - groups.site
      summary: Get driveItem from groups
      operationId: groups.sites.lists.items.activities_GetDriveItem
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - audio
                - bundle
                - content
                - cTag
                - deleted
                - file
                - fileSystemInfo
                - folder
                - image
                - location
                - malware
                - media
                - package
                - pendingOperations
                - photo
                - publication
                - remoteItem
                - root
                - searchResult
                - shared
                - sharepointIds
                - size
                - source
                - specialFolder
                - video
                - webDavUrl
                - createdByUser
                - lastModifiedByUser
                - workbook
                - activities
                - analytics
                - children
                - listItem
                - permissions
                - subscriptions
                - thumbnails
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - workbook
                - activities
                - analytics
                - children
                - listItem
                - permissions
                - subscriptions
                - thumbnails
                - versions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
          links:
            createdByUser:
              operationId: groups.sites.lists.items.activities.DriveItem.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            lastModifiedByUser:
              operationId: groups.sites.lists.items.activities.DriveItem.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            workbook:
              operationId: groups.sites.lists.items.activities.DriveItem.GetWorkbook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            activities:
              operationId: groups.sites.lists.items.activities.DriveItem.ListActivities
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            analytics:
              operationId: groups.sites.lists.items.activities.DriveItem.GetAnalytics
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            children:
              operationId: groups.sites.lists.items.activities.DriveItem.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            listItem:
              operationId: groups.sites.lists.items.activities.DriveItem.GetListItem
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            permissions:
              operationId: groups.sites.lists.items.activities.DriveItem.ListPermissions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            subscriptions:
              operationId: groups.sites.lists.items.activities.DriveItem.ListSubscriptions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            thumbnails:
              operationId: groups.sites.lists.items.activities.DriveItem.ListThumbnails
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            versions:
              operationId: groups.sites.lists.items.activities.DriveItem.ListVersions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/activities/{itemActivityOLD-id}/driveItem/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property driveItem from groups
      operationId: groups.sites.lists.items.activities_GetDriveItemContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property driveItem in groups
      operationId: groups.sites.lists.items.activities_SetDriveItemContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/activities/{itemActivityOLD-id}/listItem':
    get:
      tags:
        - groups.site
      summary: Get listItem from groups
      operationId: groups.sites.lists.items.activities_GetListItem
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - deleted
                - sharepointIds
                - createdByUser
                - lastModifiedByUser
                - activities
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItem'
          links:
            createdByUser:
              operationId: groups.sites.lists.items.activities.ListItem.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            lastModifiedByUser:
              operationId: groups.sites.lists.items.activities.ListItem.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            activities:
              operationId: groups.sites.lists.items.activities.ListItem.ListActivities
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            analytics:
              operationId: groups.sites.lists.items.activities.ListItem.GetAnalytics
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            documentSetVersions:
              operationId: groups.sites.lists.items.activities.ListItem.ListDocumentSetVersions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            driveItem:
              operationId: groups.sites.lists.items.activities.ListItem.GetDriveItem
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            fields:
              operationId: groups.sites.lists.items.activities.ListItem.GetFields
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            versions:
              operationId: groups.sites.lists.items.activities.ListItem.ListVersions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/analytics':
    get:
      tags:
        - groups.site
      summary: Get analytics from groups
      operationId: groups.sites.lists.items_GetAnalytics
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
          links:
            allTime:
              operationId: groups.sites.lists.items.Analytics.GetAllTime
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            itemActivityStats:
              operationId: groups.sites.lists.items.Analytics.ListItemActivityStats
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            lastSevenDays:
              operationId: groups.sites.lists.items.Analytics.GetLastSevenDays
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/documentSetVersions':
    get:
      tags:
        - groups.site
      summary: Get documentSetVersions from groups
      operationId: groups.sites.lists.items_ListDocumentSetVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - publication
                - publication desc
                - comment
                - comment desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - items
                - items desc
                - shouldCaptureMinorVersion
                - shouldCaptureMinorVersion desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - comment
                - createdBy
                - createdDateTime
                - items
                - shouldCaptureMinorVersion
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.documentSetVersionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to documentSetVersions for groups
      operationId: groups.sites.lists.items_CreateDocumentSetVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}':
    get:
      tags:
        - groups.site
      summary: Get documentSetVersions from groups
      operationId: groups.sites.lists.items_GetDocumentSetVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - comment
                - createdBy
                - createdDateTime
                - items
                - shouldCaptureMinorVersion
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
          links:
            fields:
              operationId: groups.sites.lists.items.DocumentSetVersions.GetFields
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                documentSetVersion-id: $request.path.documentSetVersion-id
            restore:
              operationId: groups.group.sites.site.lists.list.items.listItem.documentSetVersions.documentSetVersion.restore
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property documentSetVersions in groups
      operationId: groups.sites.lists.items_UpdateDocumentSetVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property documentSetVersions for groups
      operationId: groups.sites.lists.items_DeleteDocumentSetVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/driveItem':
    get:
      tags:
        - groups.site
      summary: Get driveItem from groups
      operationId: groups.sites.lists.items_GetDriveItem
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - audio
                - bundle
                - content
                - cTag
                - deleted
                - file
                - fileSystemInfo
                - folder
                - image
                - location
                - malware
                - media
                - package
                - pendingOperations
                - photo
                - publication
                - remoteItem
                - root
                - searchResult
                - shared
                - sharepointIds
                - size
                - source
                - specialFolder
                - video
                - webDavUrl
                - createdByUser
                - lastModifiedByUser
                - workbook
                - activities
                - analytics
                - children
                - listItem
                - permissions
                - subscriptions
                - thumbnails
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - workbook
                - activities
                - analytics
                - children
                - listItem
                - permissions
                - subscriptions
                - thumbnails
                - versions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
          links:
            createdByUser:
              operationId: groups.sites.lists.items.DriveItem.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            lastModifiedByUser:
              operationId: groups.sites.lists.items.DriveItem.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            workbook:
              operationId: groups.sites.lists.items.DriveItem.GetWorkbook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            activities:
              operationId: groups.sites.lists.items.DriveItem.ListActivities
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            analytics:
              operationId: groups.sites.lists.items.DriveItem.GetAnalytics
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            children:
              operationId: groups.sites.lists.items.DriveItem.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            listItem:
              operationId: groups.sites.lists.items.DriveItem.GetListItem
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            permissions:
              operationId: groups.sites.lists.items.DriveItem.ListPermissions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            subscriptions:
              operationId: groups.sites.lists.items.DriveItem.ListSubscriptions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            thumbnails:
              operationId: groups.sites.lists.items.DriveItem.ListThumbnails
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            versions:
              operationId: groups.sites.lists.items.DriveItem.ListVersions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/driveItem/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property driveItem from groups
      operationId: groups.sites.lists.items_GetDriveItemContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property driveItem in groups
      operationId: groups.sites.lists.items_SetDriveItemContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/fields':
    get:
      tags:
        - groups.site
      summary: Get fields from groups
      operationId: groups.sites.lists.items_GetFields
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property fields in groups
      operationId: groups.sites.lists.items_UpdateFields
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property fields for groups
      operationId: groups.sites.lists.items_DeleteFields
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions':
    get:
      tags:
        - groups.site
      summary: Get versions from groups
      operationId: groups.sites.lists.items_ListVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - publication
                - publication desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.listItemVersionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to versions for groups
      operationId: groups.sites.lists.items_CreateVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions/{listItemVersion-id}':
    get:
      tags:
        - groups.site
      summary: Get versions from groups
      operationId: groups.sites.lists.items_GetVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItemVersion'
          links:
            fields:
              operationId: groups.sites.lists.items.Versions.GetFields
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                listItemVersion-id: $request.path.listItemVersion-id
            restoreVersion:
              operationId: groups.group.sites.site.lists.list.items.listItem.versions.listItemVersion.restoreVersion
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property versions in groups
      operationId: groups.sites.lists.items_UpdateVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property versions for groups
      operationId: groups.sites.lists.items_DeleteVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions/{listItemVersion-id}/fields':
    get:
      tags:
        - groups.site
      summary: Get fields from groups
      operationId: groups.sites.lists.items.versions_GetFields
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property fields in groups
      operationId: groups.sites.lists.items.versions_UpdateFields
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property fields for groups
      operationId: groups.sites.lists.items.versions_DeleteFields
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/operations':
    get:
      tags:
        - groups.site
      summary: Get operations from groups
      operationId: groups.sites.lists_ListOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - lastActionDateTime
                - lastActionDateTime desc
                - resourceLocation
                - resourceLocation desc
                - status
                - status desc
                - statusDetail
                - statusDetail desc
                - error
                - error desc
                - percentageComplete
                - percentageComplete desc
                - resourceId
                - resourceId desc
                - type
                - type desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - resourceLocation
                - status
                - statusDetail
                - error
                - percentageComplete
                - resourceId
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.richLongRunningOperationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to operations for groups
      operationId: groups.sites.lists_CreateOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/operations/{richLongRunningOperation-id}':
    get:
      tags:
        - groups.site
      summary: Get operations from groups
      operationId: groups.sites.lists_GetOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - resourceLocation
                - status
                - statusDetail
                - error
                - percentageComplete
                - resourceId
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property operations in groups
      operationId: groups.sites.lists_UpdateOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property operations for groups
      operationId: groups.sites.lists_DeleteOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/subscriptions':
    get:
      tags:
        - groups.site
      summary: Get subscriptions from groups
      operationId: groups.sites.lists_ListSubscriptions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - applicationId
                - applicationId desc
                - changeType
                - changeType desc
                - clientState
                - clientState desc
                - creatorId
                - creatorId desc
                - encryptionCertificate
                - encryptionCertificate desc
                - encryptionCertificateId
                - encryptionCertificateId desc
                - expirationDateTime
                - expirationDateTime desc
                - includeResourceData
                - includeResourceData desc
                - latestSupportedTlsVersion
                - latestSupportedTlsVersion desc
                - lifecycleNotificationUrl
                - lifecycleNotificationUrl desc
                - notificationContentType
                - notificationContentType desc
                - notificationQueryOptions
                - notificationQueryOptions desc
                - notificationUrl
                - notificationUrl desc
                - notificationUrlAppId
                - notificationUrlAppId desc
                - resource
                - resource desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - applicationId
                - changeType
                - clientState
                - creatorId
                - encryptionCertificate
                - encryptionCertificateId
                - expirationDateTime
                - includeResourceData
                - latestSupportedTlsVersion
                - lifecycleNotificationUrl
                - notificationContentType
                - notificationQueryOptions
                - notificationUrl
                - notificationUrlAppId
                - resource
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.subscriptionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to subscriptions for groups
      operationId: groups.sites.lists_CreateSubscriptions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.subscription'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.subscription'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/subscriptions/{subscription-id}':
    get:
      tags:
        - groups.site
      summary: Get subscriptions from groups
      operationId: groups.sites.lists_GetSubscriptions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - applicationId
                - changeType
                - clientState
                - creatorId
                - encryptionCertificate
                - encryptionCertificateId
                - expirationDateTime
                - includeResourceData
                - latestSupportedTlsVersion
                - lifecycleNotificationUrl
                - notificationContentType
                - notificationQueryOptions
                - notificationUrl
                - notificationUrlAppId
                - resource
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.subscription'
          links:
            reauthorize:
              operationId: groups.group.sites.site.lists.list.subscriptions.subscription.reauthorize
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property subscriptions in groups
      operationId: groups.sites.lists_UpdateSubscriptions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.subscription'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property subscriptions for groups
      operationId: groups.sites.lists_DeleteSubscriptions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote':
    get:
      tags:
        - groups.site
      summary: Get onenote from groups
      operationId: groups.sites_GetOnenote
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - notebooks
                - operations
                - pages
                - resources
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - notebooks
                - operations
                - pages
                - resources
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenote'
          links:
            notebooks:
              operationId: groups.sites.Onenote.ListNotebooks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            operations:
              operationId: groups.sites.Onenote.ListOperations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            pages:
              operationId: groups.sites.Onenote.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            resources:
              operationId: groups.sites.Onenote.ListResources
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            sectionGroups:
              operationId: groups.sites.Onenote.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            sections:
              operationId: groups.sites.Onenote.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property onenote in groups
      operationId: groups.sites_UpdateOnenote
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenote'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property onenote for groups
      operationId: groups.sites_DeleteOnenote
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks':
    get:
      tags:
        - groups.site
      summary: Get notebooks from groups
      operationId: groups.sites.onenote_ListNotebooks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - isDefault
                - isDefault desc
                - isShared
                - isShared desc
                - links
                - links desc
                - sectionGroupsUrl
                - sectionGroupsUrl desc
                - sectionsUrl
                - sectionsUrl desc
                - userRole
                - userRole desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.notebookCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to notebooks for groups
      operationId: groups.sites.onenote_CreateNotebooks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.notebook'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}':
    get:
      tags:
        - groups.site
      summary: Get notebooks from groups
      operationId: groups.sites.onenote_GetNotebooks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.Notebooks.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
            sections:
              operationId: groups.sites.onenote.Notebooks.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
            copyNotebook:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.copyNotebook
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property notebooks in groups
      operationId: groups.sites.onenote_UpdateNotebooks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.notebook'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property notebooks for groups
      operationId: groups.sites.onenote_DeleteNotebooks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      operationId: groups.sites.onenote.notebooks_ListSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - sectionGroupsUrl
                - sectionGroupsUrl desc
                - sectionsUrl
                - sectionsUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.sectionGroupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sectionGroups for groups
      operationId: groups.sites.onenote.notebooks_CreateSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      operationId: groups.sites.onenote.notebooks_GetSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.SectionGroups.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.SectionGroups.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.SectionGroups.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            sections:
              operationId: groups.sites.onenote.notebooks.SectionGroups.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sectionGroups in groups
      operationId: groups.sites.onenote.notebooks_UpdateSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sectionGroups for groups
      operationId: groups.sites.onenote.notebooks_DeleteSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sectionGroups.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            sections:
              operationId: groups.sites.onenote.notebooks.sectionGroups.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/parentSectionGroup':
    get:
      tags:
        - groups.site
      summary: Get parentSectionGroup from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups_GetParentSectionGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sectionGroups.ParentSectionGroup.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sectionGroups.ParentSectionGroup.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sectionGroups.ParentSectionGroup.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            sections:
              operationId: groups.sites.onenote.notebooks.sectionGroups.ParentSectionGroup.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sectionGroups':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups_ListSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - sectionGroupsUrl
                - sectionGroupsUrl desc
                - sectionsUrl
                - sectionsUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.sectionGroupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sectionGroups/{sectionGroup-id1}':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups_GetSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: sectionGroup-id1
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sectionGroups.SectionGroups.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sectionGroups.SectionGroups.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sectionGroups.SectionGroups.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
            sections:
              operationId: groups.sites.onenote.notebooks.sectionGroups.SectionGroups.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups_ListSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - isDefault
                - isDefault desc
                - links
                - links desc
                - pagesUrl
                - pagesUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenoteSectionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sections for groups
      operationId: groups.sites.onenote.notebooks.sectionGroups_CreateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups_GetSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.notebooks.sectionGroups.Sections.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sectionGroups.Sections.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sectionGroups.Sections.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            copyToNotebook:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sectionGroups.sectionGroup.sections.onenoteSection.copyToNotebook
            copyToSectionGroup:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sectionGroups.sectionGroup.sections.onenoteSection.copyToSectionGroup
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sections in groups
      operationId: groups.sites.onenote.notebooks.sectionGroups_UpdateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sections for groups
      operationId: groups.sites.onenote.notebooks.sectionGroups_DeleteSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_ListPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - content
                - content desc
                - contentUrl
                - contentUrl desc
                - createdByAppId
                - createdByAppId desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - level
                - level desc
                - links
                - links desc
                - order
                - order desc
                - title
                - title desc
                - userTags
                - userTags desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenotePageCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to pages for groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_CreatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_GetPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.Pages.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSection:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.Pages.GetParentSection
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            copyToSection:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sectionGroups.sectionGroup.sections.onenoteSection.pages.onenotePage.copyToSection
            onenotePatchContent:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sectionGroups.sectionGroup.sections.onenoteSection.pages.onenotePage.onenotePatchContent
            preview:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sectionGroups.sectionGroup.sections.onenoteSection.pages.onenotePage.preview
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property pages in groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_UpdatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property pages for groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_DeletePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property pages from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_GetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property pages in groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_SetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            sections:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentSection':
    get:
      tags:
        - groups.site
      summary: Get parentSection from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages_GetParentSection
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages.ParentSection.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages.ParentSection.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages.ParentSection.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/parentSectionGroup':
    get:
      tags:
        - groups.site
      summary: Get parentSectionGroup from groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_GetParentSectionGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.ParentSectionGroup.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.ParentSectionGroup.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.ParentSectionGroup.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.ParentSectionGroup.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      operationId: groups.sites.onenote.notebooks_ListSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - isDefault
                - isDefault desc
                - links
                - links desc
                - pagesUrl
                - pagesUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenoteSectionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sections for groups
      operationId: groups.sites.onenote.notebooks_CreateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      operationId: groups.sites.onenote.notebooks_GetSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.notebooks.Sections.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.Sections.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.Sections.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            copyToNotebook:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sections.onenoteSection.copyToNotebook
            copyToSectionGroup:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sections.onenoteSection.copyToSectionGroup
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sections in groups
      operationId: groups.sites.onenote.notebooks_UpdateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sections for groups
      operationId: groups.sites.onenote.notebooks_DeleteSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      operationId: groups.sites.onenote.notebooks.sections_ListPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - content
                - content desc
                - contentUrl
                - contentUrl desc
                - createdByAppId
                - createdByAppId desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - level
                - level desc
                - links
                - links desc
                - order
                - order desc
                - title
                - title desc
                - userTags
                - userTags desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenotePageCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to pages for groups
      operationId: groups.sites.onenote.notebooks.sections_CreatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      operationId: groups.sites.onenote.notebooks.sections_GetPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sections.Pages.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSection:
              operationId: groups.sites.onenote.notebooks.sections.Pages.GetParentSection
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            copyToSection:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sections.onenoteSection.pages.onenotePage.copyToSection
            onenotePatchContent:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sections.onenoteSection.pages.onenotePage.onenotePatchContent
            preview:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sections.onenoteSection.pages.onenotePage.preview
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property pages in groups
      operationId: groups.sites.onenote.notebooks.sections_UpdatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property pages for groups
      operationId: groups.sites.onenote.notebooks.sections_DeletePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property pages from groups
      operationId: groups.sites.onenote.notebooks.sections_GetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property pages in groups
      operationId: groups.sites.onenote.notebooks.sections_SetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      operationId: groups.sites.onenote.notebooks.sections.pages_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sections.pages.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            sections:
              operationId: groups.sites.onenote.notebooks.sections.pages.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentSection':
    get:
      tags:
        - groups.site
      summary: Get parentSection from groups
      operationId: groups.sites.onenote.notebooks.sections.pages_GetParentSection
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.notebooks.sections.pages.ParentSection.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sections.pages.ParentSection.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sections.pages.ParentSection.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      operationId: groups.sites.onenote.notebooks.sections_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sections.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.notebooks.sections.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/parentSectionGroup':
    get:
      tags:
        - groups.site
      summary: Get parentSectionGroup from groups
      operationId: groups.sites.onenote.notebooks.sections_GetParentSectionGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sections.ParentSectionGroup.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sections.ParentSectionGroup.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sections.ParentSectionGroup.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.notebooks.sections.ParentSectionGroup.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/operations':
    get:
      tags:
        - groups.site
      summary: Get operations from groups
      operationId: groups.sites.onenote_ListOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - lastActionDateTime
                - lastActionDateTime desc
                - status
                - status desc
                - error
                - error desc
                - percentComplete
                - percentComplete desc
                - resourceId
                - resourceId desc
                - resourceLocation
                - resourceLocation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - status
                - error
                - percentComplete
                - resourceId
                - resourceLocation
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenoteOperationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to operations for groups
      operationId: groups.sites.onenote_CreateOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/operations/{onenoteOperation-id}':
    get:
      tags:
        - groups.site
      summary: Get operations from groups
      operationId: groups.sites.onenote_GetOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteOperation-id
          in: path
          description: 'key: id of onenoteOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteOperation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - status
                - error
                - percentComplete
                - resourceId
                - resourceLocation
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property operations in groups
      operationId: groups.sites.onenote_UpdateOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteOperation-id
          in: path
          description: 'key: id of onenoteOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteOperation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property operations for groups
      operationId: groups.sites.onenote_DeleteOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteOperation-id
          in: path
          description: 'key: id of onenoteOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteOperation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/pages':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      operationId: groups.sites.onenote_ListPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - content
                - content desc
                - contentUrl
                - contentUrl desc
                - createdByAppId
                - createdByAppId desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - level
                - level desc
                - links
                - links desc
                - order
                - order desc
                - title
                - title desc
                - userTags
                - userTags desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenotePageCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to pages for groups
      operationId: groups.sites.onenote_CreatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/pages/{onenotePage-id}':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      operationId: groups.sites.onenote_GetPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.Pages.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
            parentSection:
              operationId: groups.sites.onenote.Pages.GetParentSection
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
            copyToSection:
              operationId: groups.group.sites.site.onenote.pages.onenotePage.copyToSection
            onenotePatchContent:
              operationId: groups.group.sites.site.onenote.pages.onenotePage.onenotePatchContent
            preview:
              operationId: groups.group.sites.site.onenote.pages.onenotePage.preview
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property pages in groups
      operationId: groups.sites.onenote_UpdatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property pages for groups
      operationId: groups.sites.onenote_DeletePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/pages/{onenotePage-id}/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property pages from groups
      operationId: groups.sites.onenote_GetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property pages in groups
      operationId: groups.sites.onenote_SetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/pages/{onenotePage-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      operationId: groups.sites.onenote.pages_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.pages.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
            sections:
              operationId: groups.sites.onenote.pages.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/pages/{onenotePage-id}/parentSection':
    get:
      tags:
        - groups.site
      summary: Get parentSection from groups
      operationId: groups.sites.onenote.pages_GetParentSection
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.pages.ParentSection.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
            parentNotebook:
              operationId: groups.sites.onenote.pages.ParentSection.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
            parentSectionGroup:
              operationId: groups.sites.onenote.pages.ParentSection.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/resources':
    get:
      tags:
        - groups.site
      summary: Get resources from groups
      operationId: groups.sites.onenote_ListResources
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - content
                - content desc
                - contentUrl
                - contentUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - content
                - contentUrl
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenoteResourceCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to resources for groups
      operationId: groups.sites.onenote_CreateResources
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteResource'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteResource'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/resources/{onenoteResource-id}':
    get:
      tags:
        - groups.site
      summary: Get resources from groups
      operationId: groups.sites.onenote_GetResources
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteResource-id
          in: path
          description: 'key: id of onenoteResource'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteResource
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - content
                - contentUrl
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteResource'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property resources in groups
      operationId: groups.sites.onenote_UpdateResources
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteResource-id
          in: path
          description: 'key: id of onenoteResource'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteResource
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteResource'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property resources for groups
      operationId: groups.sites.onenote_DeleteResources
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteResource-id
          in: path
          description: 'key: id of onenoteResource'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteResource
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/resources/{onenoteResource-id}/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property resources from groups
      operationId: groups.sites.onenote_GetResourcesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteResource-id
          in: path
          description: 'key: id of onenoteResource'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteResource
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property resources in groups
      operationId: groups.sites.onenote_SetResourcesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteResource-id
          in: path
          description: 'key: id of onenoteResource'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteResource
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      operationId: groups.sites.onenote_ListSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - sectionGroupsUrl
                - sectionGroupsUrl desc
                - sectionsUrl
                - sectionsUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.sectionGroupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sectionGroups for groups
      operationId: groups.sites.onenote_CreateSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      operationId: groups.sites.onenote_GetSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.SectionGroups.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            parentSectionGroup:
              operationId: groups.sites.onenote.SectionGroups.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            sectionGroups:
              operationId: groups.sites.onenote.SectionGroups.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            sections:
              operationId: groups.sites.onenote.SectionGroups.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sectionGroups in groups
      operationId: groups.sites.onenote_UpdateSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sectionGroups for groups
      operationId: groups.sites.onenote_DeleteSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      operationId: groups.sites.onenote.sectionGroups_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.sectionGroups.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            sections:
              operationId: groups.sites.onenote.sectionGroups.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/parentSectionGroup':
    get:
      tags:
        - groups.site
      summary: Get parentSectionGroup from groups
      operationId: groups.sites.onenote.sectionGroups_GetParentSectionGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.sectionGroups.ParentSectionGroup.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            parentSectionGroup:
              operationId: groups.sites.onenote.sectionGroups.ParentSectionGroup.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            sectionGroups:
              operationId: groups.sites.onenote.sectionGroups.ParentSectionGroup.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            sections:
              operationId: groups.sites.onenote.sectionGroups.ParentSectionGroup.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sectionGroups':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      operationId: groups.sites.onenote.sectionGroups_ListSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - sectionGroupsUrl
                - sectionGroupsUrl desc
                - sectionsUrl
                - sectionsUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.sectionGroupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sectionGroups/{sectionGroup-id1}':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      operationId: groups.sites.onenote.sectionGroups_GetSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: sectionGroup-id1
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.sectionGroups.SectionGroups.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
            parentSectionGroup:
              operationId: groups.sites.onenote.sectionGroups.SectionGroups.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
            sectionGroups:
              operationId: groups.sites.onenote.sectionGroups.SectionGroups.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
            sections:
              operationId: groups.sites.onenote.sectionGroups.SectionGroups.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      operationId: groups.sites.onenote.sectionGroups_ListSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - isDefault
                - isDefault desc
                - links
                - links desc
                - pagesUrl
                - pagesUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenoteSectionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sections for groups
      operationId: groups.sites.onenote.sectionGroups_CreateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      operationId: groups.sites.onenote.sectionGroups_GetSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.sectionGroups.Sections.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentNotebook:
              operationId: groups.sites.onenote.sectionGroups.Sections.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.sectionGroups.Sections.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            copyToNotebook:
              operationId: groups.group.sites.site.onenote.sectionGroups.sectionGroup.sections.onenoteSection.copyToNotebook
            copyToSectionGroup:
              operationId: groups.group.sites.site.onenote.sectionGroups.sectionGroup.sections.onenoteSection.copyToSectionGroup
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sections in groups
      operationId: groups.sites.onenote.sectionGroups_UpdateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sections for groups
      operationId: groups.sites.onenote.sectionGroups_DeleteSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      operationId: groups.sites.onenote.sectionGroups.sections_ListPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - content
                - content desc
                - contentUrl
                - contentUrl desc
                - createdByAppId
                - createdByAppId desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - level
                - level desc
                - links
                - links desc
                - order
                - order desc
                - title
                - title desc
                - userTags
                - userTags desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenotePageCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to pages for groups
      operationId: groups.sites.onenote.sectionGroups.sections_CreatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      operationId: groups.sites.onenote.sectionGroups.sections_GetPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.sectionGroups.sections.Pages.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSection:
              operationId: groups.sites.onenote.sectionGroups.sections.Pages.GetParentSection
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            copyToSection:
              operationId: groups.group.sites.site.onenote.sectionGroups.sectionGroup.sections.onenoteSection.pages.onenotePage.copyToSection
            onenotePatchContent:
              operationId: groups.group.sites.site.onenote.sectionGroups.sectionGroup.sections.onenoteSection.pages.onenotePage.onenotePatchContent
            preview:
              operationId: groups.group.sites.site.onenote.sectionGroups.sectionGroup.sections.onenoteSection.pages.onenotePage.preview
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property pages in groups
      operationId: groups.sites.onenote.sectionGroups.sections_UpdatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property pages for groups
      operationId: groups.sites.onenote.sectionGroups.sections_DeletePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property pages from groups
      operationId: groups.sites.onenote.sectionGroups.sections_GetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property pages in groups
      operationId: groups.sites.onenote.sectionGroups.sections_SetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      operationId: groups.sites.onenote.sectionGroups.sections.pages_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.sectionGroups.sections.pages.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            sections:
              operationId: groups.sites.onenote.sectionGroups.sections.pages.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentSection':
    get:
      tags:
        - groups.site
      summary: Get parentSection from groups
      operationId: groups.sites.onenote.sectionGroups.sections.pages_GetParentSection
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.sectionGroups.sections.pages.ParentSection.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentNotebook:
              operationId: groups.sites.onenote.sectionGroups.sections.pages.ParentSection.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSectionGroup:
              operationId: groups.sites.onenote.sectionGroups.sections.pages.ParentSection.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      operationId: groups.sites.onenote.sectionGroups.sections_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.sectionGroups.sections.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.sectionGroups.sections.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/parentSectionGroup':
    get:
      tags:
        - groups.site
      summary: Get parentSectionGroup from groups
      operationId: groups.sites.onenote.sectionGroups.sections_GetParentSectionGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.sectionGroups.sections.ParentSectionGroup.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.sectionGroups.sections.ParentSectionGroup.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            sectionGroups:
              operationId: groups.sites.onenote.sectionGroups.sections.ParentSectionGroup.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.sectionGroups.sections.ParentSectionGroup.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      operationId: groups.sites.onenote_ListSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - isDefault
                - isDefault desc
                - links
                - links desc
                - pagesUrl
                - pagesUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenoteSectionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sections for groups
      operationId: groups.sites.onenote_CreateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      operationId: groups.sites.onenote_GetSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.Sections.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentNotebook:
              operationId: groups.sites.onenote.Sections.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.Sections.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            copyToNotebook:
              operationId: groups.group.sites.site.onenote.sections.onenoteSection.copyToNotebook
            copyToSectionGroup:
              operationId: groups.group.sites.site.onenote.sections.onenoteSection.copyToSectionGroup
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sections in groups
      operationId: groups.sites.onenote_UpdateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sections for groups
      operationId: groups.sites.onenote_DeleteSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      operationId: groups.sites.onenote.sections_ListPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - content
                - content desc
                - contentUrl
                - contentUrl desc
                - createdByAppId
                - createdByAppId desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - level
                - level desc
                - links
                - links desc
                - order
                - order desc
                - title
                - title desc
                - userTags
                - userTags desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenotePageCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to pages for groups
      operationId: groups.sites.onenote.sections_CreatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      operationId: groups.sites.onenote.sections_GetPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.sections.Pages.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSection:
              operationId: groups.sites.onenote.sections.Pages.GetParentSection
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            copyToSection:
              operationId: groups.group.sites.site.onenote.sections.onenoteSection.pages.onenotePage.copyToSection
            onenotePatchContent:
              operationId: groups.group.sites.site.onenote.sections.onenoteSection.pages.onenotePage.onenotePatchContent
            preview:
              operationId: groups.group.sites.site.onenote.sections.onenoteSection.pages.onenotePage.preview
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property pages in groups
      operationId: groups.sites.onenote.sections_UpdatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property pages for groups
      operationId: groups.sites.onenote.sections_DeletePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property pages from groups
      operationId: groups.sites.onenote.sections_GetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property pages in groups
      operationId: groups.sites.onenote.sections_SetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      operationId: groups.sites.onenote.sections.pages_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.sections.pages.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            sections:
              operationId: groups.sites.onenote.sections.pages.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentSection':
    get:
      tags:
        - groups.site
      summary: Get parentSection from groups
      operationId: groups.sites.onenote.sections.pages_GetParentSection
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.sections.pages.ParentSection.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentNotebook:
              operationId: groups.sites.onenote.sections.pages.ParentSection.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSectionGroup:
              operationId: groups.sites.onenote.sections.pages.ParentSection.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      operationId: groups.sites.onenote.sections_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.sections.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.sections.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/parentSectionGroup':
    get:
      tags:
        - groups.site
      summary: Get parentSectionGroup from groups
      operationId: groups.sites.onenote.sections_GetParentSectionGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.sections.ParentSectionGroup.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.sections.ParentSectionGroup.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            sectionGroups:
              operationId: groups.sites.onenote.sections.ParentSectionGroup.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.sections.ParentSectionGroup.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/operations':
    get:
      tags:
        - groups.site
      summary: Get operations from groups
      operationId: groups.sites_ListOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - lastActionDateTime
                - lastActionDateTime desc
                - resourceLocation
                - resourceLocation desc
                - status
                - status desc
                - statusDetail
                - statusDetail desc
                - error
                - error desc
                - percentageComplete
                - percentageComplete desc
                - resourceId
                - resourceId desc
                - type
                - type desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - resourceLocation
                - status
                - statusDetail
                - error
                - percentageComplete
                - resourceId
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.richLongRunningOperationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to operations for groups
      operationId: groups.sites_CreateOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/operations/{richLongRunningOperation-id}':
    get:
      tags:
        - groups.site
      summary: Get operations from groups
      operationId: groups.sites_GetOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - resourceLocation
                - status
                - statusDetail
                - error
                - percentageComplete
                - resourceId
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property operations in groups
      operationId: groups.sites_UpdateOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property operations for groups
      operationId: groups.sites_DeleteOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/pages':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      operationId: groups.sites_ListPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - contentType
                - contentType desc
                - pageLayoutType
                - pageLayoutType desc
                - publishingState
                - publishingState desc
                - title
                - title desc
                - webParts
                - webParts desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - pageLayoutType
                - publishingState
                - title
                - webParts
                - createdByUser
                - lastModifiedByUser
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.sitePageCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to pages for groups
      operationId: groups.sites_CreatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.sitePage'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sitePage'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/pages/{sitePage-id}':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      operationId: groups.sites_GetPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sitePage-id
          in: path
          description: 'key: id of sitePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sitePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - pageLayoutType
                - publishingState
                - title
                - webParts
                - createdByUser
                - lastModifiedByUser
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sitePage'
          links:
            createdByUser:
              operationId: groups.sites.Pages.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sitePage-id: $request.path.sitePage-id
            lastModifiedByUser:
              operationId: groups.sites.Pages.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sitePage-id: $request.path.sitePage-id
            publish:
              operationId: groups.group.sites.site.pages.sitePage.publish
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property pages in groups
      operationId: groups.sites_UpdatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sitePage-id
          in: path
          description: 'key: id of sitePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sitePage
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.sitePage'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property pages for groups
      operationId: groups.sites_DeletePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sitePage-id
          in: path
          description: 'key: id of sitePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sitePage
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/permissions':
    get:
      tags:
        - groups.site
      summary: Get permissions from groups
      operationId: groups.sites_ListPermissions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - expirationDateTime
                - expirationDateTime desc
                - grantedTo
                - grantedTo desc
                - grantedToIdentities
                - grantedToIdentities desc
                - grantedToIdentitiesV2
                - grantedToIdentitiesV2 desc
                - grantedToV2
                - grantedToV2 desc
                - hasPassword
                - hasPassword desc
                - inheritedFrom
                - inheritedFrom desc
                - invitation
                - invitation desc
                - link
                - link desc
                - roles
                - roles desc
                - shareId
                - shareId desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - expirationDateTime
                - grantedTo
                - grantedToIdentities
                - grantedToIdentitiesV2
                - grantedToV2
                - hasPassword
                - inheritedFrom
                - invitation
                - link
                - roles
                - shareId
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.permissionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to permissions for groups
      operationId: groups.sites_CreatePermissions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.permission'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.permission'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/permissions/{permission-id}':
    get:
      tags:
        - groups.site
      summary: Get permissions from groups
      operationId: groups.sites_GetPermissions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - expirationDateTime
                - grantedTo
                - grantedToIdentities
                - grantedToIdentitiesV2
                - grantedToV2
                - hasPassword
                - inheritedFrom
                - invitation
                - link
                - roles
                - shareId
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.permission'
          links:
            grant:
              operationId: groups.group.sites.site.permissions.permission.grant
            revokeGrants:
              operationId: groups.group.sites.site.permissions.permission.revokeGrants
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property permissions in groups
      operationId: groups.sites_UpdatePermissions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.permission'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property permissions for groups
      operationId: groups.sites_DeletePermissions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/sites':
    get:
      tags:
        - groups.site
      summary: Get sites from groups
      operationId: groups.sites_ListSites
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - deleted
                - deleted desc
                - displayName
                - displayName desc
                - root
                - root desc
                - settings
                - settings desc
                - sharepointIds
                - sharepointIds desc
                - siteCollection
                - siteCollection desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - deleted
                - displayName
                - root
                - settings
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.siteCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/sites/{site-id1}':
    get:
      tags:
        - groups.site
      summary: Get sites from groups
      operationId: groups.sites_GetSites
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: site-id1
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - deleted
                - displayName
                - root
                - settings
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
          links:
            createdByUser:
              operationId: groups.sites.Sites.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            lastModifiedByUser:
              operationId: groups.sites.Sites.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            analytics:
              operationId: groups.sites.Sites.GetAnalytics
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            columns:
              operationId: groups.sites.Sites.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            contentTypes:
              operationId: groups.sites.Sites.ListContentTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            drive:
              operationId: groups.sites.Sites.GetDrive
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            drives:
              operationId: groups.sites.Sites.ListDrives
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            externalColumns:
              operationId: groups.sites.Sites.ListExternalColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            items:
              operationId: groups.sites.Sites.ListItems
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            lists:
              operationId: groups.sites.Sites.ListLists
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            operations:
              operationId: groups.sites.Sites.ListOperations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            pages:
              operationId: groups.sites.Sites.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            permissions:
              operationId: groups.sites.Sites.ListPermissions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            sites:
              operationId: groups.sites.Sites.ListSites
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            termStore:
              operationId: groups.sites.Sites.GetTermStore
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            onenote:
              operationId: groups.sites.Sites.GetOnenote
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore':
    get:
      tags:
        - groups.site
      summary: Get termStore from groups
      operationId: groups.sites_GetTermStore
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - defaultLanguageTag
                - languageTags
                - groups
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - groups
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.store'
          links:
            groups:
              operationId: groups.sites.TermStore.ListGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            sets:
              operationId: groups.sites.TermStore.ListSets
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property termStore in groups
      operationId: groups.sites_UpdateTermStore
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.store'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property termStore for groups
      operationId: groups.sites_DeleteTermStore
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups':
    get:
      tags:
        - groups.site
      summary: Get groups from groups
      operationId: groups.sites.termStore_ListGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - displayName
                - displayName desc
                - parentSiteId
                - parentSiteId desc
                - scope
                - scope desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.groupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to groups for groups
      operationId: groups.sites.termStore_CreateGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}':
    get:
      tags:
        - groups.site
      summary: Get groups from groups
      operationId: groups.sites.termStore_GetGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: groups.sites.termStore.Groups.ListSets
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property groups in groups
      operationId: groups.sites.termStore_UpdateGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property groups for groups
      operationId: groups.sites.termStore_DeleteGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      operationId: groups.sites.termStore.groups_ListSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sets for groups
      operationId: groups.sites.termStore.groups_CreateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      operationId: groups.sites.termStore.groups_GetSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.Sets.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
            parentGroup:
              operationId: groups.sites.termStore.groups.Sets.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
            relations:
              operationId: groups.sites.termStore.groups.Sets.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
            terms:
              operationId: groups.sites.termStore.groups.Sets.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sets in groups
      operationId: groups.sites.termStore.groups_UpdateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sets for groups
      operationId: groups.sites.termStore.groups_DeleteSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.groups.sets_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.groups.sets_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.groups.sets_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.groups.sets.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStore.groups.sets.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.groups.sets_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.groups.sets_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.groups.sets.children_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.groups.sets.children_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.groups.sets.children_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.groups.sets.children.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStore.groups.sets.children.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.groups.sets.children_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.groups.sets.children_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.groups.sets.children.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.groups.sets.children.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.groups.sets.children.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.groups.sets.children.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.children.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.groups.sets.children.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.groups.sets.children.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.groups.sets.children.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.groups.sets.children.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.groups.sets.children.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.groups.sets.children.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.groups.sets.children.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.children.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.groups.sets.children.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStore.groups.sets.children.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.groups.sets.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.groups.sets.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.groups.sets.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.groups.sets.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.groups.sets.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.groups.sets.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.groups.sets.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.groups.sets.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.groups.sets.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.groups.sets.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.groups.sets.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.groups.sets.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStore.groups.sets.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/parentGroup':
    get:
      tags:
        - groups.site
      summary: Get parentGroup from groups
      operationId: groups.sites.termStore.groups.sets_GetParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: groups.sites.termStore.groups.sets.ParentGroup.ListSets
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property parentGroup in groups
      operationId: groups.sites.termStore.groups.sets_UpdateParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property parentGroup for groups
      operationId: groups.sites.termStore.groups.sets_DeleteParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.groups.sets_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.groups.sets_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.groups.sets_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.groups.sets.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.groups.sets.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.groups.sets_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.groups.sets_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.groups.sets.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.groups.sets.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.groups.sets.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.groups.sets.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      operationId: groups.sites.termStore.groups.sets_ListTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to terms for groups
      operationId: groups.sites.termStore.groups.sets_CreateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      operationId: groups.sites.termStore.groups.sets_GetTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.Terms.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.groups.sets.Terms.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStore.groups.sets.Terms.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property terms in groups
      operationId: groups.sites.termStore.groups.sets_UpdateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property terms for groups
      operationId: groups.sites.termStore.groups.sets_DeleteTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.groups.sets.terms_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.groups.sets.terms_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.groups.sets.terms_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStore.groups.sets.terms.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.groups.sets.terms_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.groups.sets.terms_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.groups.sets.terms.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.groups.sets.terms.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.groups.sets.terms.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.groups.sets.terms.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.terms.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.groups.sets.terms.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.groups.sets.terms.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.groups.sets.terms.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.groups.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.groups.sets.terms.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.groups.sets.terms.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.groups.sets.terms.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.terms.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStore.groups.sets.terms.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.groups.sets.terms_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.groups.sets.terms_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.groups.sets.terms_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.groups.sets.terms.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.terms.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.groups.sets.terms.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.groups.sets.terms_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.groups.sets.terms_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.groups.sets.terms.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.terms.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.groups.sets.terms.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.terms.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.groups.sets.terms.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.groups.sets.terms.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.terms.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.groups.sets.terms_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.terms.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStore.groups.sets.terms.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      operationId: groups.sites.termStore_ListSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sets for groups
      operationId: groups.sites.termStore_CreateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      operationId: groups.sites.termStore_GetSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.Sets.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
            parentGroup:
              operationId: groups.sites.termStore.Sets.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
            relations:
              operationId: groups.sites.termStore.Sets.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
            terms:
              operationId: groups.sites.termStore.Sets.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sets in groups
      operationId: groups.sites.termStore_UpdateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sets for groups
      operationId: groups.sites.termStore_DeleteSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.sets_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.sets_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.sets_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStore.sets.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.sets_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.sets_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.sets.children_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.sets.children_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.sets.children_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.children.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStore.sets.children.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.sets.children_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.sets.children_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.children.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.children.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.children.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.children.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.children.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.children.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.children.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.children.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.sets.children.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.children.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.children.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.children.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.children.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.children.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.sets.children.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.children.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.children.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStore.sets.children.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.children.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStore.sets.children.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.sets.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.sets.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStore.sets.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStore.sets.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup':
    get:
      tags:
        - groups.site
      summary: Get parentGroup from groups
      operationId: groups.sites.termStore.sets_GetParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: groups.sites.termStore.sets.ParentGroup.ListSets
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property parentGroup in groups
      operationId: groups.sites.termStore.sets_UpdateParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property parentGroup for groups
      operationId: groups.sites.termStore.sets_DeleteParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      operationId: groups.sites.termStore.sets.parentGroup_ListSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sets for groups
      operationId: groups.sites.termStore.sets.parentGroup_CreateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      operationId: groups.sites.termStore.sets.parentGroup_GetSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.Sets.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.Sets.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.Sets.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.Sets.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sets in groups
      operationId: groups.sites.termStore.sets.parentGroup_UpdateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sets for groups
      operationId: groups.sites.termStore.sets.parentGroup_DeleteSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_ListTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to terms for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_CreateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_GetTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Terms.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Terms.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Terms.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property terms in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_UpdateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property terms for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_DeleteTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.sets.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.sets.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      operationId: groups.sites.termStore.sets_ListTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to terms for groups
      operationId: groups.sites.termStore.sets_CreateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      operationId: groups.sites.termStore.sets_GetTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.Terms.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.Terms.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStore.sets.Terms.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property terms in groups
      operationId: groups.sites.termStore.sets_UpdateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property terms for groups
      operationId: groups.sites.termStore.sets_DeleteTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.sets.terms_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.sets.terms_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      operationId: groups.sites.termStore.sets.terms_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.terms.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStore.sets.terms.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.sets.terms_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.sets.terms_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.terms.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.terms.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.terms.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.terms.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.terms.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.terms.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.terms.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.terms.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.terms.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.terms.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.terms.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.sets.terms.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.terms.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStore.sets.terms.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.terms.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStore.sets.terms.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.terms_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.terms_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      operationId: groups.sites.termStore.sets.terms_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.terms.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.terms.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.terms.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.terms_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.terms_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      operationId: groups.sites.termStore.sets.terms.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.terms.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.terms.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.terms.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.terms.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.terms.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.terms.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      operationId: groups.sites.termStore.sets.terms.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.terms.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.terms.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      operationId: groups.sites.termStore.sets.terms_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStore.sets.terms.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.terms.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStore.sets.terms.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /sites:
    get:
      tags:
        - sites.site
      summary: Search for sites
      operationId: sites.site_ListSite
      parameters:
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - deleted
                - deleted desc
                - displayName
                - displayName desc
                - root
                - root desc
                - settings
                - settings desc
                - sharepointIds
                - sharepointIds desc
                - siteCollection
                - siteCollection desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - deleted
                - displayName
                - root
                - settings
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.siteCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}':
    get:
      tags:
        - sites.site
      summary: Get a site resource
      operationId: sites.site_GetSite
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - deleted
                - displayName
                - root
                - settings
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
      responses:
        '200':
          description: Retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
          links:
            createdByUser:
              operationId: sites.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
            lastModifiedByUser:
              operationId: sites.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
            analytics:
              operationId: sites.GetAnalytics
              parameters:
                site-id: $request.path.site-id
            columns:
              operationId: sites.ListColumns
              parameters:
                site-id: $request.path.site-id
            contentTypes:
              operationId: sites.ListContentTypes
              parameters:
                site-id: $request.path.site-id
            drive:
              operationId: sites.GetDrive
              parameters:
                site-id: $request.path.site-id
            drives:
              operationId: sites.ListDrives
              parameters:
                site-id: $request.path.site-id
            externalColumns:
              operationId: sites.ListExternalColumns
              parameters:
                site-id: $request.path.site-id
            items:
              operationId: sites.ListItems
              parameters:
                site-id: $request.path.site-id
            lists:
              operationId: sites.ListLists
              parameters:
                site-id: $request.path.site-id
            operations:
              operationId: sites.ListOperations
              parameters:
                site-id: $request.path.site-id
            pages:
              operationId: sites.ListPages
              parameters:
                site-id: $request.path.site-id
            permissions:
              operationId: sites.ListPermissions
              parameters:
                site-id: $request.path.site-id
            sites:
              operationId: sites.ListSites
              parameters:
                site-id: $request.path.site-id
            termStore:
              operationId: sites.GetTermStore
              parameters:
                site-id: $request.path.site-id
            onenote:
              operationId: sites.GetOnenote
              parameters:
                site-id: $request.path.site-id
            getActivitiesByInterval:
              operationId: sites.site.getActivitiesGraphBPreInterval
            getApplicableContentTypesForList:
              operationId: sites.site.getApplicableContentTypesGraphFPreList
            getByPath:
              operationId: sites.site.getGraphBPrePath
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.site
      summary: Update entity in sites
      operationId: sites.site_UpdateSite
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.site'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/analytics':
    get:
      tags:
        - sites.itemAnalytics
      summary: Get analytics from sites
      operationId: sites_GetAnalytics
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
          links:
            allTime:
              operationId: sites.Analytics.GetAllTime
              parameters:
                site-id: $request.path.site-id
            itemActivityStats:
              operationId: sites.Analytics.ListItemActivityStats
              parameters:
                site-id: $request.path.site-id
            lastSevenDays:
              operationId: sites.Analytics.GetLastSevenDays
              parameters:
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/columns':
    get:
      tags:
        - sites.columnDefinition
      summary: Get columns from sites
      operationId: sites_ListColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.columnDefinition
      summary: Create new navigation property to columns for sites
      operationId: sites_CreateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - sites.columnDefinition
      summary: Get columns from sites
      operationId: sites_GetColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.Columns.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.columnDefinition
      summary: Update the navigation property columns in sites
      operationId: sites_UpdateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.columnDefinition
      summary: Delete navigation property columns for sites
      operationId: sites_DeleteColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - sites.columnDefinition
      summary: Get sourceColumn from sites
      operationId: sites.columns_GetSourceColumn
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.columns.SourceColumn.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes':
    get:
      tags:
        - sites.contentType
      summary: Get contentTypes from sites
      operationId: sites_ListContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.contentType
      summary: Create new navigation property to contentTypes for sites
      operationId: sites_CreateContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}':
    get:
      tags:
        - sites.contentType
      summary: Get contentTypes from sites
      operationId: sites_GetContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: sites.ContentTypes.GetBase
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: sites.ContentTypes.ListBaseTypes
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: sites.ContentTypes.ListColumnLinks
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: sites.ContentTypes.ListColumnPositions
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: sites.ContentTypes.ListColumns
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            associateWithHubSites:
              operationId: sites.site.contentTypes.contentType.associateGraphWPreHubSites
            copyToDefaultContentLocation:
              operationId: sites.site.contentTypes.contentType.copyToDefaultContentLocation
            isPublished:
              operationId: sites.site.contentTypes.contentType.isPublished
            publish:
              operationId: sites.site.contentTypes.contentType.publish
            unpublish:
              operationId: sites.site.contentTypes.contentType.unpublish
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.contentType
      summary: Update the navigation property contentTypes in sites
      operationId: sites_UpdateContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.contentType
      summary: Delete navigation property contentTypes for sites
      operationId: sites_DeleteContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/base':
    get:
      tags:
        - sites.contentType
      summary: Get base from sites
      operationId: sites.contentTypes_GetBase
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: sites.contentTypes.Base.GetBase
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: sites.contentTypes.Base.ListBaseTypes
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: sites.contentTypes.Base.ListColumnLinks
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: sites.contentTypes.Base.ListColumnPositions
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: sites.contentTypes.Base.ListColumns
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/baseTypes':
    get:
      tags:
        - sites.contentType
      summary: Get baseTypes from sites
      operationId: sites.contentTypes_ListBaseTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/baseTypes/{contentType-id1}':
    get:
      tags:
        - sites.contentType
      summary: Get baseTypes from sites
      operationId: sites.contentTypes_GetBaseTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: contentType-id1
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: sites.contentTypes.BaseTypes.GetBase
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            baseTypes:
              operationId: sites.contentTypes.BaseTypes.ListBaseTypes
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnLinks:
              operationId: sites.contentTypes.BaseTypes.ListColumnLinks
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnPositions:
              operationId: sites.contentTypes.BaseTypes.ListColumnPositions
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columns:
              operationId: sites.contentTypes.BaseTypes.ListColumns
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columnLinks':
    get:
      tags:
        - sites.contentType
      summary: Get columnLinks from sites
      operationId: sites.contentTypes_ListColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - name
                - name desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnLinkCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.contentType
      summary: Create new navigation property to columnLinks for sites
      operationId: sites.contentTypes_CreateColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columnLinks/{columnLink-id}':
    get:
      tags:
        - sites.contentType
      summary: Get columnLinks from sites
      operationId: sites.contentTypes_GetColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.contentType
      summary: Update the navigation property columnLinks in sites
      operationId: sites.contentTypes_UpdateColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.contentType
      summary: Delete navigation property columnLinks for sites
      operationId: sites.contentTypes_DeleteColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columnPositions':
    get:
      tags:
        - sites.contentType
      summary: Get columnPositions from sites
      operationId: sites.contentTypes_ListColumnPositions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columnPositions/{columnDefinition-id}':
    get:
      tags:
        - sites.contentType
      summary: Get columnPositions from sites
      operationId: sites.contentTypes_GetColumnPositions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.contentTypes.ColumnPositions.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columns':
    get:
      tags:
        - sites.contentType
      summary: Get columns from sites
      operationId: sites.contentTypes_ListColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.contentType
      summary: Create new navigation property to columns for sites
      operationId: sites.contentTypes_CreateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - sites.contentType
      summary: Get columns from sites
      operationId: sites.contentTypes_GetColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.contentTypes.Columns.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.contentType
      summary: Update the navigation property columns in sites
      operationId: sites.contentTypes_UpdateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.contentType
      summary: Delete navigation property columns for sites
      operationId: sites.contentTypes_DeleteColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - sites.contentType
      summary: Get sourceColumn from sites
      operationId: sites.contentTypes.columns_GetSourceColumn
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.contentTypes.columns.SourceColumn.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/microsoft.graph.associateWithHubSites':
    post:
      tags:
        - sites.Actions
      summary: Invoke action associateWithHubSites
      operationId: sites.contentTypes_associateGraphWPreHubSites
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                hubSiteUrls:
                  type: array
                  items:
                    type: string
                propagateToExistingLists:
                  type: boolean
                  default: false
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/contentTypes/{contentType-id}/microsoft.graph.copyToDefaultContentLocation':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToDefaultContentLocation
      operationId: sites.contentTypes_copyToDefaultContentLocation
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceFile:
                  $ref: '#/components/schemas/microsoft.graph.itemReference'
                destinationFileName:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/contentTypes/{contentType-id}/microsoft.graph.isPublished()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function isPublished
      operationId: sites.contentTypes_isPublished
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: boolean
                    default: false
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/contentTypes/{contentType-id}/microsoft.graph.publish':
    post:
      tags:
        - sites.Actions
      summary: Invoke action publish
      operationId: sites.contentTypes_publish
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/contentTypes/{contentType-id}/microsoft.graph.unpublish':
    post:
      tags:
        - sites.Actions
      summary: Invoke action unpublish
      operationId: sites.contentTypes_unpublish
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/contentTypes/microsoft.graph.addCopy':
    post:
      tags:
        - sites.Actions
      summary: Invoke action addCopy
      operationId: sites.contentTypes_addCopy
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                contentType:
                  type: string
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/contentTypes/microsoft.graph.addCopyFromContentTypeHub':
    post:
      tags:
        - sites.Actions
      summary: Invoke action addCopyFromContentTypeHub
      operationId: sites.contentTypes_addCopyFromContentTypeHub
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                contentTypeId:
                  type: string
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/contentTypes/microsoft.graph.getCompatibleHubContentTypes()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getCompatibleHubContentTypes
      operationId: sites.contentTypes_getCompatibleHubContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of contentType
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.contentType'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/drive':
    get:
      tags:
        - sites.drive
      summary: Get drive from sites
      operationId: sites_GetDrive
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.drive'
          links:
            createdByUser:
              operationId: sites.Drive.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
            lastModifiedByUser:
              operationId: sites.Drive.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
            activities:
              operationId: sites.Drive.ListActivities
              parameters:
                site-id: $request.path.site-id
            bundles:
              operationId: sites.Drive.ListBundles
              parameters:
                site-id: $request.path.site-id
            following:
              operationId: sites.Drive.ListFollowing
              parameters:
                site-id: $request.path.site-id
            items:
              operationId: sites.Drive.ListItems
              parameters:
                site-id: $request.path.site-id
            list:
              operationId: sites.Drive.GetList
              parameters:
                site-id: $request.path.site-id
            root:
              operationId: sites.Drive.GetRoot
              parameters:
                site-id: $request.path.site-id
            special:
              operationId: sites.Drive.ListSpecial
              parameters:
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/drives':
    get:
      tags:
        - sites.drive
      summary: Get drives from sites
      operationId: sites_ListDrives
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - driveType
                - driveType desc
                - owner
                - owner desc
                - quota
                - quota desc
                - sharePointIds
                - sharePointIds desc
                - system
                - system desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.driveCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/drives/{drive-id}':
    get:
      tags:
        - sites.drive
      summary: Get drives from sites
      operationId: sites_GetDrives
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: drive-id
          in: path
          description: 'key: id of drive'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: drive
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.drive'
          links:
            createdByUser:
              operationId: sites.Drives.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            lastModifiedByUser:
              operationId: sites.Drives.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            activities:
              operationId: sites.Drives.ListActivities
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            bundles:
              operationId: sites.Drives.ListBundles
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            following:
              operationId: sites.Drives.ListFollowing
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            items:
              operationId: sites.Drives.ListItems
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            list:
              operationId: sites.Drives.GetList
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            root:
              operationId: sites.Drives.GetRoot
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            special:
              operationId: sites.Drives.ListSpecial
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/externalColumns':
    get:
      tags:
        - sites.columnDefinition
      summary: Get externalColumns from sites
      operationId: sites_ListExternalColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/externalColumns/{columnDefinition-id}':
    get:
      tags:
        - sites.columnDefinition
      summary: Get externalColumns from sites
      operationId: sites_GetExternalColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.ExternalColumns.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists':
    get:
      tags:
        - sites.list
      summary: Get lists from sites
      operationId: sites_ListLists
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - displayName
                - displayName desc
                - list
                - list desc
                - sharepointIds
                - sharepointIds desc
                - system
                - system desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - list
                - sharepointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - activities
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.listCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to lists for sites
      operationId: sites_CreateLists
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.list'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.list'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}':
    get:
      tags:
        - sites.list
      summary: Get lists from sites
      operationId: sites_GetLists
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - list
                - sharepointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - activities
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.list'
          links:
            createdByUser:
              operationId: sites.Lists.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            lastModifiedByUser:
              operationId: sites.Lists.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            activities:
              operationId: sites.Lists.ListActivities
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            columns:
              operationId: sites.Lists.ListColumns
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            contentTypes:
              operationId: sites.Lists.ListContentTypes
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            drive:
              operationId: sites.Lists.GetDrive
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            items:
              operationId: sites.Lists.ListItems
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            operations:
              operationId: sites.Lists.ListOperations
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            subscriptions:
              operationId: sites.Lists.ListSubscriptions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property lists in sites
      operationId: sites_UpdateLists
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.list'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property lists for sites
      operationId: sites_DeleteLists
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/activities':
    get:
      tags:
        - sites.list
      summary: Get activities from sites
      operationId: sites.lists_ListActivities
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - action
                - action desc
                - actor
                - actor desc
                - times
                - times desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - action
                - actor
                - times
                - driveItem
                - listItem
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - driveItem
                - listItem
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.itemActivityOLDCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to activities for sites
      operationId: sites.lists_CreateActivities
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/columns':
    get:
      tags:
        - sites.list
      summary: Get columns from sites
      operationId: sites.lists_ListColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to columns for sites
      operationId: sites.lists_CreateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - sites.list
      summary: Get columns from sites
      operationId: sites.lists_GetColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.lists.Columns.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property columns in sites
      operationId: sites.lists_UpdateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property columns for sites
      operationId: sites.lists_DeleteColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - sites.list
      summary: Get sourceColumn from sites
      operationId: sites.lists.columns_GetSourceColumn
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.lists.columns.SourceColumn.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes':
    get:
      tags:
        - sites.list
      summary: Get contentTypes from sites
      operationId: sites.lists_ListContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to contentTypes for sites
      operationId: sites.lists_CreateContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}':
    get:
      tags:
        - sites.list
      summary: Get contentTypes from sites
      operationId: sites.lists_GetContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: sites.lists.ContentTypes.GetBase
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: sites.lists.ContentTypes.ListBaseTypes
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: sites.lists.ContentTypes.ListColumnLinks
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: sites.lists.ContentTypes.ListColumnPositions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: sites.lists.ContentTypes.ListColumns
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            associateWithHubSites:
              operationId: sites.site.lists.list.contentTypes.contentType.associateGraphWPreHubSites
            copyToDefaultContentLocation:
              operationId: sites.site.lists.list.contentTypes.contentType.copyToDefaultContentLocation
            isPublished:
              operationId: sites.site.lists.list.contentTypes.contentType.isPublished
            publish:
              operationId: sites.site.lists.list.contentTypes.contentType.publish
            unpublish:
              operationId: sites.site.lists.list.contentTypes.contentType.unpublish
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property contentTypes in sites
      operationId: sites.lists_UpdateContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property contentTypes for sites
      operationId: sites.lists_DeleteContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/base':
    get:
      tags:
        - sites.list
      summary: Get base from sites
      operationId: sites.lists.contentTypes_GetBase
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: sites.lists.contentTypes.Base.GetBase
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: sites.lists.contentTypes.Base.ListBaseTypes
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: sites.lists.contentTypes.Base.ListColumnLinks
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: sites.lists.contentTypes.Base.ListColumnPositions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: sites.lists.contentTypes.Base.ListColumns
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/baseTypes':
    get:
      tags:
        - sites.list
      summary: Get baseTypes from sites
      operationId: sites.lists.contentTypes_ListBaseTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/baseTypes/{contentType-id1}':
    get:
      tags:
        - sites.list
      summary: Get baseTypes from sites
      operationId: sites.lists.contentTypes_GetBaseTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: contentType-id1
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: sites.lists.contentTypes.BaseTypes.GetBase
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            baseTypes:
              operationId: sites.lists.contentTypes.BaseTypes.ListBaseTypes
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnLinks:
              operationId: sites.lists.contentTypes.BaseTypes.ListColumnLinks
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnPositions:
              operationId: sites.lists.contentTypes.BaseTypes.ListColumnPositions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columns:
              operationId: sites.lists.contentTypes.BaseTypes.ListColumns
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnLinks':
    get:
      tags:
        - sites.list
      summary: Get columnLinks from sites
      operationId: sites.lists.contentTypes_ListColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - name
                - name desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnLinkCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to columnLinks for sites
      operationId: sites.lists.contentTypes_CreateColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnLinks/{columnLink-id}':
    get:
      tags:
        - sites.list
      summary: Get columnLinks from sites
      operationId: sites.lists.contentTypes_GetColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property columnLinks in sites
      operationId: sites.lists.contentTypes_UpdateColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property columnLinks for sites
      operationId: sites.lists.contentTypes_DeleteColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnPositions':
    get:
      tags:
        - sites.list
      summary: Get columnPositions from sites
      operationId: sites.lists.contentTypes_ListColumnPositions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnPositions/{columnDefinition-id}':
    get:
      tags:
        - sites.list
      summary: Get columnPositions from sites
      operationId: sites.lists.contentTypes_GetColumnPositions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.lists.contentTypes.ColumnPositions.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columns':
    get:
      tags:
        - sites.list
      summary: Get columns from sites
      operationId: sites.lists.contentTypes_ListColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to columns for sites
      operationId: sites.lists.contentTypes_CreateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - sites.list
      summary: Get columns from sites
      operationId: sites.lists.contentTypes_GetColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.lists.contentTypes.Columns.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property columns in sites
      operationId: sites.lists.contentTypes_UpdateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property columns for sites
      operationId: sites.lists.contentTypes_DeleteColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - sites.list
      summary: Get sourceColumn from sites
      operationId: sites.lists.contentTypes.columns_GetSourceColumn
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.lists.contentTypes.columns.SourceColumn.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/microsoft.graph.associateWithHubSites':
    post:
      tags:
        - sites.Actions
      summary: Invoke action associateWithHubSites
      operationId: sites.lists.contentTypes_associateGraphWPreHubSites
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                hubSiteUrls:
                  type: array
                  items:
                    type: string
                propagateToExistingLists:
                  type: boolean
                  default: false
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/microsoft.graph.copyToDefaultContentLocation':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToDefaultContentLocation
      operationId: sites.lists.contentTypes_copyToDefaultContentLocation
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceFile:
                  $ref: '#/components/schemas/microsoft.graph.itemReference'
                destinationFileName:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/microsoft.graph.isPublished()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function isPublished
      operationId: sites.lists.contentTypes_isPublished
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: boolean
                    default: false
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/microsoft.graph.publish':
    post:
      tags:
        - sites.Actions
      summary: Invoke action publish
      operationId: sites.lists.contentTypes_publish
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/microsoft.graph.unpublish':
    post:
      tags:
        - sites.Actions
      summary: Invoke action unpublish
      operationId: sites.lists.contentTypes_unpublish
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/contentTypes/microsoft.graph.addCopy':
    post:
      tags:
        - sites.Actions
      summary: Invoke action addCopy
      operationId: sites.lists.contentTypes_addCopy
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                contentType:
                  type: string
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/contentTypes/microsoft.graph.addCopyFromContentTypeHub':
    post:
      tags:
        - sites.Actions
      summary: Invoke action addCopyFromContentTypeHub
      operationId: sites.lists.contentTypes_addCopyFromContentTypeHub
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                contentTypeId:
                  type: string
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/contentTypes/microsoft.graph.getCompatibleHubContentTypes()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getCompatibleHubContentTypes
      operationId: sites.lists.contentTypes_getCompatibleHubContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of contentType
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.contentType'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/lists/{list-id}/drive':
    get:
      tags:
        - sites.list
      summary: Get drive from sites
      operationId: sites.lists_GetDrive
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.drive'
          links:
            createdByUser:
              operationId: sites.lists.Drive.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            lastModifiedByUser:
              operationId: sites.lists.Drive.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            activities:
              operationId: sites.lists.Drive.ListActivities
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            bundles:
              operationId: sites.lists.Drive.ListBundles
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            following:
              operationId: sites.lists.Drive.ListFollowing
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            items:
              operationId: sites.lists.Drive.ListItems
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            list:
              operationId: sites.lists.Drive.GetList
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            root:
              operationId: sites.lists.Drive.GetRoot
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            special:
              operationId: sites.lists.Drive.ListSpecial
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items':
    get:
      tags:
        - sites.list
      summary: Get items from sites
      operationId: sites.lists_ListItems
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - contentType
                - contentType desc
                - deleted
                - deleted desc
                - sharepointIds
                - sharepointIds desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - deleted
                - sharepointIds
                - createdByUser
                - lastModifiedByUser
                - activities
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.listItemCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to items for sites
      operationId: sites.lists_CreateItems
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItem'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItem'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}':
    get:
      tags:
        - sites.list
      summary: Get items from sites
      operationId: sites.lists_GetItems
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - deleted
                - sharepointIds
                - createdByUser
                - lastModifiedByUser
                - activities
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItem'
          links:
            createdByUser:
              operationId: sites.lists.Items.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            lastModifiedByUser:
              operationId: sites.lists.Items.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            activities:
              operationId: sites.lists.Items.ListActivities
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            analytics:
              operationId: sites.lists.Items.GetAnalytics
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            documentSetVersions:
              operationId: sites.lists.Items.ListDocumentSetVersions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            driveItem:
              operationId: sites.lists.Items.GetDriveItem
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            fields:
              operationId: sites.lists.Items.GetFields
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            versions:
              operationId: sites.lists.Items.ListVersions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            createLink:
              operationId: sites.site.lists.list.items.listItem.createLink
            getActivitiesByInterval:
              operationId: sites.site.lists.list.items.listItem.getActivitiesGraphBPreInterval
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property items in sites
      operationId: sites.lists_UpdateItems
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItem'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property items for sites
      operationId: sites.lists_DeleteItems
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/activities':
    get:
      tags:
        - sites.list
      summary: Get activities from sites
      operationId: sites.lists.items_ListActivities
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - action
                - action desc
                - actor
                - actor desc
                - times
                - times desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - action
                - actor
                - times
                - driveItem
                - listItem
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - driveItem
                - listItem
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.itemActivityOLDCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to activities for sites
      operationId: sites.lists.items_CreateActivities
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/activities/{itemActivityOLD-id}':
    get:
      tags:
        - sites.list
      summary: Get activities from sites
      operationId: sites.lists.items_GetActivities
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - action
                - actor
                - times
                - driveItem
                - listItem
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - driveItem
                - listItem
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
          links:
            driveItem:
              operationId: sites.lists.items.Activities.GetDriveItem
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            listItem:
              operationId: sites.lists.items.Activities.GetListItem
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property activities in sites
      operationId: sites.lists.items_UpdateActivities
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property activities for sites
      operationId: sites.lists.items_DeleteActivities
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/activities/{itemActivityOLD-id}/driveItem':
    get:
      tags:
        - sites.list
      summary: Get driveItem from sites
      operationId: sites.lists.items.activities_GetDriveItem
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - audio
                - bundle
                - content
                - cTag
                - deleted
                - file
                - fileSystemInfo
                - folder
                - image
                - location
                - malware
                - media
                - package
                - pendingOperations
                - photo
                - publication
                - remoteItem
                - root
                - searchResult
                - shared
                - sharepointIds
                - size
                - source
                - specialFolder
                - video
                - webDavUrl
                - createdByUser
                - lastModifiedByUser
                - workbook
                - activities
                - analytics
                - children
                - listItem
                - permissions
                - subscriptions
                - thumbnails
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - workbook
                - activities
                - analytics
                - children
                - listItem
                - permissions
                - subscriptions
                - thumbnails
                - versions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
          links:
            createdByUser:
              operationId: sites.lists.items.activities.DriveItem.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            lastModifiedByUser:
              operationId: sites.lists.items.activities.DriveItem.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            workbook:
              operationId: sites.lists.items.activities.DriveItem.GetWorkbook
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            activities:
              operationId: sites.lists.items.activities.DriveItem.ListActivities
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            analytics:
              operationId: sites.lists.items.activities.DriveItem.GetAnalytics
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            children:
              operationId: sites.lists.items.activities.DriveItem.ListChildren
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            listItem:
              operationId: sites.lists.items.activities.DriveItem.GetListItem
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            permissions:
              operationId: sites.lists.items.activities.DriveItem.ListPermissions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            subscriptions:
              operationId: sites.lists.items.activities.DriveItem.ListSubscriptions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            thumbnails:
              operationId: sites.lists.items.activities.DriveItem.ListThumbnails
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            versions:
              operationId: sites.lists.items.activities.DriveItem.ListVersions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/activities/{itemActivityOLD-id}/driveItem/content':
    get:
      tags:
        - sites.list
      summary: Get content for the navigation property driveItem from sites
      operationId: sites.lists.items.activities_GetDriveItemContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - sites.list
      summary: Update content for the navigation property driveItem in sites
      operationId: sites.lists.items.activities_SetDriveItemContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/activities/{itemActivityOLD-id}/listItem':
    get:
      tags:
        - sites.list
      summary: Get listItem from sites
      operationId: sites.lists.items.activities_GetListItem
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: itemActivityOLD-id
          in: path
          description: 'key: id of itemActivityOLD'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: itemActivityOLD
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - deleted
                - sharepointIds
                - createdByUser
                - lastModifiedByUser
                - activities
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - activities
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItem'
          links:
            createdByUser:
              operationId: sites.lists.items.activities.ListItem.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            lastModifiedByUser:
              operationId: sites.lists.items.activities.ListItem.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            activities:
              operationId: sites.lists.items.activities.ListItem.ListActivities
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            analytics:
              operationId: sites.lists.items.activities.ListItem.GetAnalytics
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            documentSetVersions:
              operationId: sites.lists.items.activities.ListItem.ListDocumentSetVersions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            driveItem:
              operationId: sites.lists.items.activities.ListItem.GetDriveItem
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            fields:
              operationId: sites.lists.items.activities.ListItem.GetFields
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
            versions:
              operationId: sites.lists.items.activities.ListItem.ListVersions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                itemActivityOLD-id: $request.path.itemActivityOLD-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/analytics':
    get:
      tags:
        - sites.list
      summary: Get analytics from sites
      operationId: sites.lists.items_GetAnalytics
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
          links:
            allTime:
              operationId: sites.lists.items.Analytics.GetAllTime
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            itemActivityStats:
              operationId: sites.lists.items.Analytics.ListItemActivityStats
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            lastSevenDays:
              operationId: sites.lists.items.Analytics.GetLastSevenDays
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/documentSetVersions':
    get:
      tags:
        - sites.list
      summary: Get documentSetVersions from sites
      operationId: sites.lists.items_ListDocumentSetVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - publication
                - publication desc
                - comment
                - comment desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - items
                - items desc
                - shouldCaptureMinorVersion
                - shouldCaptureMinorVersion desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - comment
                - createdBy
                - createdDateTime
                - items
                - shouldCaptureMinorVersion
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.documentSetVersionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to documentSetVersions for sites
      operationId: sites.lists.items_CreateDocumentSetVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}':
    get:
      tags:
        - sites.list
      summary: Get documentSetVersions from sites
      operationId: sites.lists.items_GetDocumentSetVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - comment
                - createdBy
                - createdDateTime
                - items
                - shouldCaptureMinorVersion
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
          links:
            fields:
              operationId: sites.lists.items.DocumentSetVersions.GetFields
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                documentSetVersion-id: $request.path.documentSetVersion-id
            restore:
              operationId: sites.site.lists.list.items.listItem.documentSetVersions.documentSetVersion.restore
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property documentSetVersions in sites
      operationId: sites.lists.items_UpdateDocumentSetVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property documentSetVersions for sites
      operationId: sites.lists.items_DeleteDocumentSetVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}/microsoft.graph.restore':
    post:
      tags:
        - sites.Actions
      summary: Invoke action restore
      operationId: sites.lists.items.documentSetVersions_restore
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/driveItem':
    get:
      tags:
        - sites.list
      summary: Get driveItem from sites
      operationId: sites.lists.items_GetDriveItem
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - audio
                - bundle
                - content
                - cTag
                - deleted
                - file
                - fileSystemInfo
                - folder
                - image
                - location
                - malware
                - media
                - package
                - pendingOperations
                - photo
                - publication
                - remoteItem
                - root
                - searchResult
                - shared
                - sharepointIds
                - size
                - source
                - specialFolder
                - video
                - webDavUrl
                - createdByUser
                - lastModifiedByUser
                - workbook
                - activities
                - analytics
                - children
                - listItem
                - permissions
                - subscriptions
                - thumbnails
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - workbook
                - activities
                - analytics
                - children
                - listItem
                - permissions
                - subscriptions
                - thumbnails
                - versions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
          links:
            createdByUser:
              operationId: sites.lists.items.DriveItem.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            lastModifiedByUser:
              operationId: sites.lists.items.DriveItem.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            workbook:
              operationId: sites.lists.items.DriveItem.GetWorkbook
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            activities:
              operationId: sites.lists.items.DriveItem.ListActivities
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            analytics:
              operationId: sites.lists.items.DriveItem.GetAnalytics
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            children:
              operationId: sites.lists.items.DriveItem.ListChildren
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            listItem:
              operationId: sites.lists.items.DriveItem.GetListItem
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            permissions:
              operationId: sites.lists.items.DriveItem.ListPermissions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            subscriptions:
              operationId: sites.lists.items.DriveItem.ListSubscriptions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            thumbnails:
              operationId: sites.lists.items.DriveItem.ListThumbnails
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            versions:
              operationId: sites.lists.items.DriveItem.ListVersions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/driveItem/content':
    get:
      tags:
        - sites.list
      summary: Get content for the navigation property driveItem from sites
      operationId: sites.lists.items_GetDriveItemContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - sites.list
      summary: Update content for the navigation property driveItem in sites
      operationId: sites.lists.items_SetDriveItemContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/fields':
    get:
      tags:
        - sites.list
      summary: Get fields from sites
      operationId: sites.lists.items_GetFields
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property fields in sites
      operationId: sites.lists.items_UpdateFields
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property fields for sites
      operationId: sites.lists.items_DeleteFields
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/microsoft.graph.createLink':
    post:
      tags:
        - sites.Actions
      summary: Invoke action createLink
      operationId: sites.lists.items_createLink
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  nullable: true
                scope:
                  type: string
                  nullable: true
                expirationDateTime:
                  pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
                  type: string
                  format: date-time
                  nullable: true
                password:
                  type: string
                  nullable: true
                recipients:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.driveRecipient'
                retainInheritedPermissions:
                  type: boolean
                  default: false
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.permission'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/microsoft.graph.getActivitiesByInterval(startDateTime=''{startDateTime}'',endDateTime=''{endDateTime}'',interval=''{interval}'')':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getActivitiesByInterval
      operationId: sites.lists.items_getActivitiesGraphBPreInterval
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: startDateTime
          in: path
          description: 'Usage: startDateTime=''{startDateTime}'''
          required: true
          schema:
            type: string
            nullable: true
        - name: endDateTime
          in: path
          description: 'Usage: endDateTime=''{endDateTime}'''
          required: true
          schema:
            type: string
            nullable: true
        - name: interval
          in: path
          description: 'Usage: interval=''{interval}'''
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of listItem
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.itemActivityStat'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions':
    get:
      tags:
        - sites.list
      summary: Get versions from sites
      operationId: sites.lists.items_ListVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - publication
                - publication desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.listItemVersionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to versions for sites
      operationId: sites.lists.items_CreateVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions/{listItemVersion-id}':
    get:
      tags:
        - sites.list
      summary: Get versions from sites
      operationId: sites.lists.items_GetVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItemVersion'
          links:
            fields:
              operationId: sites.lists.items.Versions.GetFields
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                listItemVersion-id: $request.path.listItemVersion-id
            restoreVersion:
              operationId: sites.site.lists.list.items.listItem.versions.listItemVersion.restoreVersion
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property versions in sites
      operationId: sites.lists.items_UpdateVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property versions for sites
      operationId: sites.lists.items_DeleteVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions/{listItemVersion-id}/fields':
    get:
      tags:
        - sites.list
      summary: Get fields from sites
      operationId: sites.lists.items.versions_GetFields
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property fields in sites
      operationId: sites.lists.items.versions_UpdateFields
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property fields for sites
      operationId: sites.lists.items.versions_DeleteFields
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions/{listItemVersion-id}/microsoft.graph.restoreVersion':
    post:
      tags:
        - sites.Actions
      summary: Invoke action restoreVersion
      operationId: sites.lists.items.versions_restoreVersion
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/items/microsoft.graph.delta()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function delta
      operationId: sites.lists.items_delta
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of listItem
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.listItem'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/lists/{list-id}/items/microsoft.graph.delta(token=''{token}'')':
    get:
      tags:
        - sites.Functions
      summary: Invoke function delta
      operationId: sites.lists.items_delta
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: token
          in: path
          description: 'Usage: token=''{token}'''
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of listItem
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.listItem'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/lists/{list-id}/operations':
    get:
      tags:
        - sites.list
      summary: Get operations from sites
      operationId: sites.lists_ListOperations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - lastActionDateTime
                - lastActionDateTime desc
                - resourceLocation
                - resourceLocation desc
                - status
                - status desc
                - statusDetail
                - statusDetail desc
                - error
                - error desc
                - percentageComplete
                - percentageComplete desc
                - resourceId
                - resourceId desc
                - type
                - type desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - resourceLocation
                - status
                - statusDetail
                - error
                - percentageComplete
                - resourceId
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.richLongRunningOperationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to operations for sites
      operationId: sites.lists_CreateOperations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/operations/{richLongRunningOperation-id}':
    get:
      tags:
        - sites.list
      summary: Get operations from sites
      operationId: sites.lists_GetOperations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - resourceLocation
                - status
                - statusDetail
                - error
                - percentageComplete
                - resourceId
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property operations in sites
      operationId: sites.lists_UpdateOperations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property operations for sites
      operationId: sites.lists_DeleteOperations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/subscriptions':
    get:
      tags:
        - sites.list
      summary: Get subscriptions from sites
      operationId: sites.lists_ListSubscriptions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - applicationId
                - applicationId desc
                - changeType
                - changeType desc
                - clientState
                - clientState desc
                - creatorId
                - creatorId desc
                - encryptionCertificate
                - encryptionCertificate desc
                - encryptionCertificateId
                - encryptionCertificateId desc
                - expirationDateTime
                - expirationDateTime desc
                - includeResourceData
                - includeResourceData desc
                - latestSupportedTlsVersion
                - latestSupportedTlsVersion desc
                - lifecycleNotificationUrl
                - lifecycleNotificationUrl desc
                - notificationContentType
                - notificationContentType desc
                - notificationQueryOptions
                - notificationQueryOptions desc
                - notificationUrl
                - notificationUrl desc
                - notificationUrlAppId
                - notificationUrlAppId desc
                - resource
                - resource desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - applicationId
                - changeType
                - clientState
                - creatorId
                - encryptionCertificate
                - encryptionCertificateId
                - expirationDateTime
                - includeResourceData
                - latestSupportedTlsVersion
                - lifecycleNotificationUrl
                - notificationContentType
                - notificationQueryOptions
                - notificationUrl
                - notificationUrlAppId
                - resource
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.subscriptionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to subscriptions for sites
      operationId: sites.lists_CreateSubscriptions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.subscription'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.subscription'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/subscriptions/{subscription-id}':
    get:
      tags:
        - sites.list
      summary: Get subscriptions from sites
      operationId: sites.lists_GetSubscriptions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - applicationId
                - changeType
                - clientState
                - creatorId
                - encryptionCertificate
                - encryptionCertificateId
                - expirationDateTime
                - includeResourceData
                - latestSupportedTlsVersion
                - lifecycleNotificationUrl
                - notificationContentType
                - notificationQueryOptions
                - notificationUrl
                - notificationUrlAppId
                - resource
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.subscription'
          links:
            reauthorize:
              operationId: sites.site.lists.list.subscriptions.subscription.reauthorize
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property subscriptions in sites
      operationId: sites.lists_UpdateSubscriptions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.subscription'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property subscriptions for sites
      operationId: sites.lists_DeleteSubscriptions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/subscriptions/{subscription-id}/microsoft.graph.reauthorize':
    post:
      tags:
        - sites.Actions
      summary: Invoke action reauthorize
      operationId: sites.lists.subscriptions_reauthorize
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/microsoft.graph.getActivitiesByInterval(startDateTime=''{startDateTime}'',endDateTime=''{endDateTime}'',interval=''{interval}'')':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getActivitiesByInterval
      operationId: sites_getActivitiesGraphBPreInterval
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: startDateTime
          in: path
          description: 'Usage: startDateTime=''{startDateTime}'''
          required: true
          schema:
            type: string
            nullable: true
        - name: endDateTime
          in: path
          description: 'Usage: endDateTime=''{endDateTime}'''
          required: true
          schema:
            type: string
            nullable: true
        - name: interval
          in: path
          description: 'Usage: interval=''{interval}'''
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of site
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.itemActivityStat'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/microsoft.graph.getApplicableContentTypesForList(listId=''{listId}'')':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getApplicableContentTypesForList
      operationId: sites_getApplicableContentTypesGraphFPreList
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: listId
          in: path
          description: 'Usage: listId=''{listId}'''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of site
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.contentType'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/microsoft.graph.getByPath(path=''{path}'')':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getByPath
      operationId: sites_getGraphBPrePath
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: path
          in: path
          description: 'Usage: path=''{path}'''
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/microsoft.graph.copyNotebook':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyNotebook
      operationId: sites.onenote.notebooks_copyNotebook
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                notebookFolder:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/microsoft.graph.copyToNotebook':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToNotebook
      operationId: sites.onenote.notebooks.sectionGroups.sections_copyToNotebook
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/microsoft.graph.copyToSectionGroup':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSectionGroup
      operationId: sites.onenote.notebooks.sectionGroups.sections_copyToSectionGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.copyToSection':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSection
      operationId: sites.onenote.notebooks.sectionGroups.sections.pages_copyToSection
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.onenotePatchContent':
    post:
      tags:
        - sites.Actions
      summary: Invoke action onenotePatchContent
      operationId: sites.onenote.notebooks.sectionGroups.sections.pages_onenotePatchContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                commands:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.onenotePatchContentCommand'
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.preview()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function preview
      operationId: sites.onenote.notebooks.sectionGroups.sections.pages_preview
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePagePreview'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/microsoft.graph.copyToNotebook':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToNotebook
      operationId: sites.onenote.notebooks.sections_copyToNotebook
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/microsoft.graph.copyToSectionGroup':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSectionGroup
      operationId: sites.onenote.notebooks.sections_copyToSectionGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.copyToSection':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSection
      operationId: sites.onenote.notebooks.sections.pages_copyToSection
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.onenotePatchContent':
    post:
      tags:
        - sites.Actions
      summary: Invoke action onenotePatchContent
      operationId: sites.onenote.notebooks.sections.pages_onenotePatchContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                commands:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.onenotePatchContentCommand'
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.preview()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function preview
      operationId: sites.onenote.notebooks.sections.pages_preview
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePagePreview'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/onenote/notebooks/microsoft.graph.getNotebookFromWebUrl':
    post:
      tags:
        - sites.Actions
      summary: Invoke action getNotebookFromWebUrl
      operationId: sites.onenote.notebooks_getNotebookFromWebUrl
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                webUrl:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.CopyNotebookModel'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/microsoft.graph.getRecentNotebooks(includePersonalNotebooks={includePersonalNotebooks})':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getRecentNotebooks
      operationId: sites.onenote.notebooks_getRecentNotebooks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: includePersonalNotebooks
          in: path
          description: 'Usage: includePersonalNotebooks={includePersonalNotebooks}'
          required: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of notebook
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.recentNotebook'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/onenote/pages/{onenotePage-id}/microsoft.graph.copyToSection':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSection
      operationId: sites.onenote.pages_copyToSection
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/pages/{onenotePage-id}/microsoft.graph.onenotePatchContent':
    post:
      tags:
        - sites.Actions
      summary: Invoke action onenotePatchContent
      operationId: sites.onenote.pages_onenotePatchContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                commands:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.onenotePatchContentCommand'
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/pages/{onenotePage-id}/microsoft.graph.preview()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function preview
      operationId: sites.onenote.pages_preview
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePagePreview'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/microsoft.graph.copyToNotebook':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToNotebook
      operationId: sites.onenote.sectionGroups.sections_copyToNotebook
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/microsoft.graph.copyToSectionGroup':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSectionGroup
      operationId: sites.onenote.sectionGroups.sections_copyToSectionGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.copyToSection':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSection
      operationId: sites.onenote.sectionGroups.sections.pages_copyToSection
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.onenotePatchContent':
    post:
      tags:
        - sites.Actions
      summary: Invoke action onenotePatchContent
      operationId: sites.onenote.sectionGroups.sections.pages_onenotePatchContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                commands:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.onenotePatchContentCommand'
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.preview()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function preview
      operationId: sites.onenote.sectionGroups.sections.pages_preview
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePagePreview'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/onenote/sections/{onenoteSection-id}/microsoft.graph.copyToNotebook':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToNotebook
      operationId: sites.onenote.sections_copyToNotebook
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sections/{onenoteSection-id}/microsoft.graph.copyToSectionGroup':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSectionGroup
      operationId: sites.onenote.sections_copyToSectionGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.copyToSection':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSection
      operationId: sites.onenote.sections.pages_copyToSection
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.onenotePatchContent':
    post:
      tags:
        - sites.Actions
      summary: Invoke action onenotePatchContent
      operationId: sites.onenote.sections.pages_onenotePatchContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                commands:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.onenotePatchContentCommand'
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.preview()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function preview
      operationId: sites.onenote.sections.pages_preview
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePagePreview'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/pages':
    get:
      tags:
        - sites.sitePage
      summary: Get pages from sites
      operationId: sites_ListPages
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - contentType
                - contentType desc
                - pageLayoutType
                - pageLayoutType desc
                - publishingState
                - publishingState desc
                - title
                - title desc
                - webParts
                - webParts desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - pageLayoutType
                - publishingState
                - title
                - webParts
                - createdByUser
                - lastModifiedByUser
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.sitePageCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.sitePage
      summary: Create new navigation property to pages for sites
      operationId: sites_CreatePages
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.sitePage'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sitePage'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/pages/{sitePage-id}':
    get:
      tags:
        - sites.sitePage
      summary: Get pages from sites
      operationId: sites_GetPages
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sitePage-id
          in: path
          description: 'key: id of sitePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sitePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - pageLayoutType
                - publishingState
                - title
                - webParts
                - createdByUser
                - lastModifiedByUser
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sitePage'
          links:
            createdByUser:
              operationId: sites.Pages.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                sitePage-id: $request.path.sitePage-id
            lastModifiedByUser:
              operationId: sites.Pages.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                sitePage-id: $request.path.sitePage-id
            publish:
              operationId: sites.site.pages.sitePage.publish
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.sitePage
      summary: Update the navigation property pages in sites
      operationId: sites_UpdatePages
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sitePage-id
          in: path
          description: 'key: id of sitePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sitePage
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.sitePage'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.sitePage
      summary: Delete navigation property pages for sites
      operationId: sites_DeletePages
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sitePage-id
          in: path
          description: 'key: id of sitePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sitePage
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/pages/{sitePage-id}/microsoft.graph.publish':
    post:
      tags:
        - sites.Actions
      summary: Invoke action publish
      operationId: sites.pages_publish
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sitePage-id
          in: path
          description: 'key: id of sitePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sitePage
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/permissions':
    get:
      tags:
        - sites.permission
      summary: Get permissions from sites
      operationId: sites_ListPermissions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - expirationDateTime
                - expirationDateTime desc
                - grantedTo
                - grantedTo desc
                - grantedToIdentities
                - grantedToIdentities desc
                - grantedToIdentitiesV2
                - grantedToIdentitiesV2 desc
                - grantedToV2
                - grantedToV2 desc
                - hasPassword
                - hasPassword desc
                - inheritedFrom
                - inheritedFrom desc
                - invitation
                - invitation desc
                - link
                - link desc
                - roles
                - roles desc
                - shareId
                - shareId desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - expirationDateTime
                - grantedTo
                - grantedToIdentities
                - grantedToIdentitiesV2
                - grantedToV2
                - hasPassword
                - inheritedFrom
                - invitation
                - link
                - roles
                - shareId
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.permissionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.permission
      summary: Create new navigation property to permissions for sites
      operationId: sites_CreatePermissions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.permission'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.permission'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/permissions/{permission-id}':
    get:
      tags:
        - sites.permission
      summary: Get permissions from sites
      operationId: sites_GetPermissions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - expirationDateTime
                - grantedTo
                - grantedToIdentities
                - grantedToIdentitiesV2
                - grantedToV2
                - hasPassword
                - inheritedFrom
                - invitation
                - link
                - roles
                - shareId
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.permission'
          links:
            grant:
              operationId: sites.site.permissions.permission.grant
            revokeGrants:
              operationId: sites.site.permissions.permission.revokeGrants
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.permission
      summary: Update the navigation property permissions in sites
      operationId: sites_UpdatePermissions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.permission'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.permission
      summary: Delete navigation property permissions for sites
      operationId: sites_DeletePermissions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/permissions/{permission-id}/microsoft.graph.grant':
    post:
      tags:
        - sites.Actions
      summary: Invoke action grant
      operationId: sites.permissions_grant
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                roles:
                  type: array
                  items:
                    type: string
                    nullable: true
                recipients:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.driveRecipient'
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of permission
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.permission'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/permissions/{permission-id}/microsoft.graph.revokeGrants':
    post:
      tags:
        - sites.Actions
      summary: Invoke action revokeGrants
      operationId: sites.permissions_revokeGrants
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                grantees:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.driveRecipient'
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.permission'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/sites':
    get:
      tags:
        - sites.site
      summary: Get sites from sites
      operationId: sites_ListSites
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - deleted
                - deleted desc
                - displayName
                - displayName desc
                - root
                - root desc
                - settings
                - settings desc
                - sharepointIds
                - sharepointIds desc
                - siteCollection
                - siteCollection desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - deleted
                - displayName
                - root
                - settings
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.siteCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/sites/{site-id1}':
    get:
      tags:
        - sites.site
      summary: Get sites from sites
      operationId: sites_GetSites
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: site-id1
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - deleted
                - displayName
                - root
                - settings
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
          links:
            createdByUser:
              operationId: sites.Sites.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            lastModifiedByUser:
              operationId: sites.Sites.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            analytics:
              operationId: sites.Sites.GetAnalytics
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            columns:
              operationId: sites.Sites.ListColumns
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            contentTypes:
              operationId: sites.Sites.ListContentTypes
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            drive:
              operationId: sites.Sites.GetDrive
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            drives:
              operationId: sites.Sites.ListDrives
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            externalColumns:
              operationId: sites.Sites.ListExternalColumns
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            items:
              operationId: sites.Sites.ListItems
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            lists:
              operationId: sites.Sites.ListLists
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            operations:
              operationId: sites.Sites.ListOperations
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            pages:
              operationId: sites.Sites.ListPages
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            permissions:
              operationId: sites.Sites.ListPermissions
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            sites:
              operationId: sites.Sites.ListSites
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            termStore:
              operationId: sites.Sites.GetTermStore
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            onenote:
              operationId: sites.Sites.GetOnenote
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore':
    get:
      tags:
        - sites.store
      summary: Get termStore from sites
      operationId: sites_GetTermStore
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - defaultLanguageTag
                - languageTags
                - groups
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - groups
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.store'
          links:
            groups:
              operationId: sites.TermStore.ListGroups
              parameters:
                site-id: $request.path.site-id
            sets:
              operationId: sites.TermStore.ListSets
              parameters:
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property termStore in sites
      operationId: sites_UpdateTermStore
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.store'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property termStore for sites
      operationId: sites_DeleteTermStore
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups':
    get:
      tags:
        - sites.store
      summary: Get groups from sites
      operationId: sites.termStore_ListGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - displayName
                - displayName desc
                - parentSiteId
                - parentSiteId desc
                - scope
                - scope desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.groupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to groups for sites
      operationId: sites.termStore_CreateGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}':
    get:
      tags:
        - sites.store
      summary: Get groups from sites
      operationId: sites.termStore_GetGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: sites.termStore.Groups.ListSets
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property groups in sites
      operationId: sites.termStore_UpdateGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property groups for sites
      operationId: sites.termStore_DeleteGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      operationId: sites.termStore.groups_ListSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to sets for sites
      operationId: sites.termStore.groups_CreateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      operationId: sites.termStore.groups_GetSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.Sets.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
            parentGroup:
              operationId: sites.termStore.groups.Sets.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
            relations:
              operationId: sites.termStore.groups.Sets.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
            terms:
              operationId: sites.termStore.groups.Sets.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property sets in sites
      operationId: sites.termStore.groups_UpdateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property sets for sites
      operationId: sites.termStore.groups_DeleteSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.groups.sets_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.groups.sets_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.groups.sets_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.groups.sets.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: sites.termStore.groups.sets.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.groups.sets_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.groups.sets_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.groups.sets.children_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.groups.sets.children_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.groups.sets.children_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.groups.sets.children.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStore.groups.sets.children.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.groups.sets.children_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.groups.sets.children_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.groups.sets.children.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.groups.sets.children.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.groups.sets.children.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.groups.sets.children.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.children.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.groups.sets.children.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.groups.sets.children.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.groups.sets.children.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.groups.sets.children.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.children.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.groups.sets.children.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.groups.sets.children.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.children.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.groups.sets.children.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.groups.sets.children.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.children.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.groups.sets.children.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStore.groups.sets.children.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.groups.sets.children.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStore.groups.sets.children.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.groups.sets.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.groups.sets.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.groups.sets.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.groups.sets.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.groups.sets.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.groups.sets.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.groups.sets.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.groups.sets.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.groups.sets.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.groups.sets.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.groups.sets.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.groups.sets.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.groups.sets.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStore.groups.sets.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.groups.sets.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStore.groups.sets.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/parentGroup':
    get:
      tags:
        - sites.store
      summary: Get parentGroup from sites
      operationId: sites.termStore.groups.sets_GetParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: sites.termStore.groups.sets.ParentGroup.ListSets
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property parentGroup in sites
      operationId: sites.termStore.groups.sets_UpdateParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property parentGroup for sites
      operationId: sites.termStore.groups.sets_DeleteParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.groups.sets_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.groups.sets_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.groups.sets_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.groups.sets.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.groups.sets.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.groups.sets_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.groups.sets_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.groups.sets.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.groups.sets.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.groups.sets.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.groups.sets.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.groups.sets.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      operationId: sites.termStore.groups.sets_ListTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to terms for sites
      operationId: sites.termStore.groups.sets_CreateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      operationId: sites.termStore.groups.sets_GetTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.Terms.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.groups.sets.Terms.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: sites.termStore.groups.sets.Terms.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property terms in sites
      operationId: sites.termStore.groups.sets_UpdateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property terms for sites
      operationId: sites.termStore.groups.sets_DeleteTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.groups.sets.terms_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.groups.sets.terms_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.groups.sets.terms_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.groups.sets.terms.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStore.groups.sets.terms.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.groups.sets.terms_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.groups.sets.terms_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.groups.sets.terms.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.groups.sets.terms.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.groups.sets.terms.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.groups.sets.terms.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.terms.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.groups.sets.terms.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.groups.sets.terms.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.groups.sets.terms.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.groups.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.groups.sets.terms.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.groups.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.terms.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.groups.sets.terms.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.groups.sets.terms.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.groups.sets.terms.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStore.groups.sets.terms.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.groups.sets.terms.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStore.groups.sets.terms.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.groups.sets.terms_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.groups.sets.terms_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.groups.sets.terms_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.groups.sets.terms.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.terms.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.groups.sets.terms.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.groups.sets.terms_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.groups.sets.terms_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.groups.sets.terms.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.terms.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.terms.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.groups.sets.terms.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.groups.sets.terms.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.terms.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.groups.sets.terms.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.groups.sets.terms.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.terms.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.terms.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.groups.sets.terms_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStore.groups.sets.terms.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.groups.sets.terms.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStore.groups.sets.terms.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      operationId: sites.termStore_ListSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to sets for sites
      operationId: sites.termStore_CreateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      operationId: sites.termStore_GetSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.Sets.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
            parentGroup:
              operationId: sites.termStore.Sets.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
            relations:
              operationId: sites.termStore.Sets.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
            terms:
              operationId: sites.termStore.Sets.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property sets in sites
      operationId: sites.termStore_UpdateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property sets for sites
      operationId: sites.termStore_DeleteSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.sets_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.sets_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.sets_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: sites.termStore.sets.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.sets_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.sets_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.sets.children_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.sets.children_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.sets.children_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.children.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.children.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStore.sets.children.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.sets.children_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.sets.children_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.children.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.children.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.children.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.children.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.children.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.children.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.children.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.children.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.sets.children.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.children.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.children.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.children.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.children.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.children.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.children.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.sets.children.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.children.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.children.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.children.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStore.sets.children.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.children.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStore.sets.children.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.sets.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.sets.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStore.sets.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStore.sets.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup':
    get:
      tags:
        - sites.store
      summary: Get parentGroup from sites
      operationId: sites.termStore.sets_GetParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: sites.termStore.sets.ParentGroup.ListSets
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property parentGroup in sites
      operationId: sites.termStore.sets_UpdateParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property parentGroup for sites
      operationId: sites.termStore.sets_DeleteParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      operationId: sites.termStore.sets.parentGroup_ListSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to sets for sites
      operationId: sites.termStore.sets.parentGroup_CreateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      operationId: sites.termStore.sets.parentGroup_GetSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.Sets.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.Sets.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            relations:
              operationId: sites.termStore.sets.parentGroup.Sets.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            terms:
              operationId: sites.termStore.sets.parentGroup.Sets.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property sets in sites
      operationId: sites.termStore.sets.parentGroup_UpdateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property sets for sites
      operationId: sites.termStore.sets.parentGroup_DeleteSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.sets.parentGroup.sets_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.sets.parentGroup.sets_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.sets.parentGroup.sets_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.sets.parentGroup.sets_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.sets.parentGroup.sets_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.sets.parentGroup.sets.children_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.sets.parentGroup.sets.children_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.sets.parentGroup.sets.children_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.sets.parentGroup.sets.children_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.sets.parentGroup.sets.children_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.parentGroup.sets.children.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.children.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.parentGroup.sets.children.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.parentGroup.sets.children.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.children.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.sets.parentGroup.sets.children.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.parentGroup.sets.children.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.sets.parentGroup.sets.children.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.parentGroup.sets.children.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.parentGroup.sets.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.parentGroup.sets.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.parentGroup.sets.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.parentGroup.sets.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.parentGroup.sets.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.sets.parentGroup.sets.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.parentGroup.sets.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.sets.parentGroup.sets.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.parentGroup.sets.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.parentGroup.sets_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.parentGroup.sets_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.parentGroup.sets_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.parentGroup.sets.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.parentGroup.sets.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.parentGroup.sets_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.parentGroup.sets_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.sets.parentGroup.sets.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.parentGroup.sets.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.sets.parentGroup.sets.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      operationId: sites.termStore.sets.parentGroup.sets_ListTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to terms for sites
      operationId: sites.termStore.sets.parentGroup.sets_CreateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      operationId: sites.termStore.sets.parentGroup.sets_GetTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.Terms.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.Terms.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.Terms.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property terms in sites
      operationId: sites.termStore.sets.parentGroup.sets_UpdateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property terms for sites
      operationId: sites.termStore.sets.parentGroup.sets_DeleteTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.sets.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.sets.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      operationId: sites.termStore.sets_ListTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to terms for sites
      operationId: sites.termStore.sets_CreateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      operationId: sites.termStore.sets_GetTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.Terms.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.Terms.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: sites.termStore.sets.Terms.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property terms in sites
      operationId: sites.termStore.sets_UpdateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property terms for sites
      operationId: sites.termStore.sets_DeleteTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.sets.terms_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.sets.terms_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      operationId: sites.termStore.sets.terms_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.terms.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.terms.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStore.sets.terms.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.sets.terms_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.sets.terms_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.terms.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.terms.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.terms.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.terms.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.terms.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.terms.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.terms.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.terms.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.terms.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.terms.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.terms.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.terms.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.sets.terms.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.terms.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.terms.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStore.sets.terms.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.terms.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStore.sets.terms.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.terms_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.terms_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      operationId: sites.termStore.sets.terms_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.terms.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.terms.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.terms.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.terms_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.terms_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      operationId: sites.termStore.sets.terms.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.terms.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.terms.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.terms.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.terms.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.terms.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.terms.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.terms.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.terms.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      operationId: sites.termStore.sets.terms.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.terms.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.terms.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.terms.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      operationId: sites.termStore.sets.terms_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.terms.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStore.sets.terms.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.terms.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStore.sets.terms.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /sites/microsoft.graph.add:
    post:
      tags:
        - sites.Actions
      summary: Invoke action add
      operationId: sites_add
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.site'
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of site
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.site'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  /sites/microsoft.graph.delta():
    get:
      tags:
        - sites.Functions
      summary: Invoke function delta
      operationId: sites_delta
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of site
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.site'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  /sites/microsoft.graph.remove:
    post:
      tags:
        - sites.Actions
      summary: Invoke action remove
      operationId: sites_remove
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.site'
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of site
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.site'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/users/{user-id}/followedSites':
    get:
      tags:
        - users.site
      summary: Get followedSites from users
      operationId: users_ListFollowedSites
      parameters:
        - name: user-id
          in: path
          description: 'key: id of user'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: user
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - deleted
                - deleted desc
                - displayName
                - displayName desc
                - root
                - root desc
                - settings
                - settings desc
                - sharepointIds
                - sharepointIds desc
                - siteCollection
                - siteCollection desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - deleted
                - displayName
                - root
                - settings
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.siteCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/users/{user-id}/followedSites/{site-id}':
    get:
      tags:
        - users.site
      summary: Get followedSites from users
      operationId: users_GetFollowedSites
      parameters:
        - name: user-id
          in: path
          description: 'key: id of user'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: user
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - deleted
                - displayName
                - root
                - settings
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - pages
                - permissions
                - sites
                - termStore
                - onenote
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
          links:
            createdByUser:
              operationId: users.FollowedSites.GetCreatedGraphBPreUser
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            lastModifiedByUser:
              operationId: users.FollowedSites.GetLastModifiedGraphBPreUser
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            analytics:
              operationId: users.FollowedSites.GetAnalytics
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            columns:
              operationId: users.FollowedSites.ListColumns
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            contentTypes:
              operationId: users.FollowedSites.ListContentTypes
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            drive:
              operationId: users.FollowedSites.GetDrive
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            drives:
              operationId: users.FollowedSites.ListDrives
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            externalColumns:
              operationId: users.FollowedSites.ListExternalColumns
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            items:
              operationId: users.FollowedSites.ListItems
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            lists:
              operationId: users.FollowedSites.ListLists
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            operations:
              operationId: users.FollowedSites.ListOperations
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            pages:
              operationId: users.FollowedSites.ListPages
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            permissions:
              operationId: users.FollowedSites.ListPermissions
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            sites:
              operationId: users.FollowedSites.ListSites
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            termStore:
              operationId: users.FollowedSites.GetTermStore
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            onenote:
              operationId: users.FollowedSites.GetOnenote
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
components:
  schemas:
    microsoft.graph.site:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItem'
        - title: site
          type: object
          properties:
            deleted:
              $ref: '#/components/schemas/microsoft.graph.deleted'
            displayName:
              type: string
              description: The full title for the site. Read-only.
              nullable: true
            root:
              $ref: '#/components/schemas/microsoft.graph.root'
            settings:
              $ref: '#/components/schemas/microsoft.graph.siteSettings'
            sharepointIds:
              $ref: '#/components/schemas/microsoft.graph.sharepointIds'
            siteCollection:
              $ref: '#/components/schemas/microsoft.graph.siteCollection'
            analytics:
              $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
            columns:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
              description: The collection of column definitions reusable across lists under this site.
            contentTypes:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.contentType'
              description: The collection of content types defined for this site.
            drive:
              $ref: '#/components/schemas/microsoft.graph.drive'
            drives:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.drive'
              description: The collection of drives (document libraries) under this site.
            externalColumns:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
              description: The collection of column definitions available in the site that are referenced from the sites in the parent hierarchy of the current site.
            items:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.baseItem'
              description: Used to address any item contained in this site. This collection cannot be enumerated.
            lists:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.list'
              description: The collection of lists under this site.
            operations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
              description: The collection of long running operations for the site.
            pages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sitePage'
              description: The collection of pages in the SitePages list in this site.
            permissions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.permission'
              description: The permissions associated with the site. Nullable.
            sites:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.site'
              description: The collection of the sub-sites under this site.
            termStore:
              $ref: '#/components/schemas/microsoft.graph.termStore.store'
            onenote:
              $ref: '#/components/schemas/microsoft.graph.onenote'
          additionalProperties:
            type: object
    microsoft.graph.itemAnalytics:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: itemAnalytics
          type: object
          properties:
            allTime:
              $ref: '#/components/schemas/microsoft.graph.itemActivityStat'
            itemActivityStats:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemActivityStat'
            lastSevenDays:
              $ref: '#/components/schemas/microsoft.graph.itemActivityStat'
          additionalProperties:
            type: object
    microsoft.graph.columnDefinition:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: columnDefinition
          type: object
          properties:
            boolean:
              $ref: '#/components/schemas/microsoft.graph.booleanColumn'
            calculated:
              $ref: '#/components/schemas/microsoft.graph.calculatedColumn'
            choice:
              $ref: '#/components/schemas/microsoft.graph.choiceColumn'
            columnGroup:
              type: string
              description: 'For site columns, the name of the group this column belongs to. Helps organize related columns.'
              nullable: true
            contentApprovalStatus:
              $ref: '#/components/schemas/microsoft.graph.contentApprovalStatusColumn'
            currency:
              $ref: '#/components/schemas/microsoft.graph.currencyColumn'
            dateTime:
              $ref: '#/components/schemas/microsoft.graph.dateTimeColumn'
            defaultValue:
              $ref: '#/components/schemas/microsoft.graph.defaultColumnValue'
            description:
              type: string
              description: The user-facing description of the column.
              nullable: true
            displayName:
              type: string
              description: The user-facing name of the column.
              nullable: true
            enforceUniqueValues:
              type: boolean
              description: 'If true, no two list items may have the same value for this column.'
              nullable: true
            geolocation:
              $ref: '#/components/schemas/microsoft.graph.geolocationColumn'
            hidden:
              type: boolean
              description: Specifies whether the column is displayed in the user interface.
              nullable: true
            hyperlinkOrPicture:
              $ref: '#/components/schemas/microsoft.graph.hyperlinkOrPictureColumn'
            indexed:
              type: boolean
              description: Specifies whether the column values can used for sorting and searching.
              nullable: true
            isDeletable:
              type: boolean
              description: Indicates whether this column can be deleted.
              nullable: true
            isReorderable:
              type: boolean
              description: Indicates whether values in the column can be reordered. Read-only.
              nullable: true
            isSealed:
              type: boolean
              description: Specifies whether the column can be changed.
              nullable: true
            lookup:
              $ref: '#/components/schemas/microsoft.graph.lookupColumn'
            name:
              type: string
              description: 'The API-facing name of the column as it appears in the [fields][] on a [listItem][]. For the user-facing name, see displayName.'
              nullable: true
            number:
              $ref: '#/components/schemas/microsoft.graph.numberColumn'
            personOrGroup:
              $ref: '#/components/schemas/microsoft.graph.personOrGroupColumn'
            propagateChanges:
              type: boolean
              description: 'If true, changes to this column will be propagated to lists that implement the column.'
              nullable: true
            readOnly:
              type: boolean
              description: Specifies whether the column values can be modified.
              nullable: true
            required:
              type: boolean
              description: Specifies whether the column value isn't optional.
              nullable: true
            sourceContentType:
              $ref: '#/components/schemas/microsoft.graph.contentTypeInfo'
            term:
              $ref: '#/components/schemas/microsoft.graph.termColumn'
            text:
              $ref: '#/components/schemas/microsoft.graph.textColumn'
            thumbnail:
              $ref: '#/components/schemas/microsoft.graph.thumbnailColumn'
            type:
              $ref: '#/components/schemas/microsoft.graph.columnTypes'
            validation:
              $ref: '#/components/schemas/microsoft.graph.columnValidation'
            sourceColumn:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          additionalProperties:
            type: object
    microsoft.graph.contentType:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: contentType
          type: object
          properties:
            associatedHubsUrls:
              type: array
              items:
                type: string
                nullable: true
              description: List of canonical URLs for hub sites with which this content type is associated to. This will contain all hubsites where this content type is queued to be enforced or is already enforced. Enforcing a content type means that the content type will be applied to the lists in the enforced sites.
            description:
              type: string
              description: The descriptive text for the item.
              nullable: true
            documentSet:
              $ref: '#/components/schemas/microsoft.graph.documentSet'
            documentTemplate:
              $ref: '#/components/schemas/microsoft.graph.documentSetContent'
            group:
              type: string
              description: The name of the group this content type belongs to. Helps organize related content types.
              nullable: true
            hidden:
              type: boolean
              description: Indicates whether the content type is hidden in the list's 'New' menu.
              nullable: true
            inheritedFrom:
              $ref: '#/components/schemas/microsoft.graph.itemReference'
            isBuiltIn:
              type: boolean
              description: Specifies if a content type is a built-in content type.
              nullable: true
            name:
              type: string
              description: The name of the content type.
              nullable: true
            order:
              $ref: '#/components/schemas/microsoft.graph.contentTypeOrder'
            parentId:
              type: string
              description: The unique identifier of the content type.
              nullable: true
            propagateChanges:
              type: boolean
              description: 'If true, any changes made to the content type will be pushed to inherited content types and lists that implement the content type.'
              nullable: true
            readOnly:
              type: boolean
              description: 'If true, the content type cannot be modified unless this value is first set to false.'
              nullable: true
            sealed:
              type: boolean
              description: 'If true, the content type cannot be modified by users or through push-down operations. Only site collection administrators can seal or unseal content types.'
              nullable: true
            base:
              $ref: '#/components/schemas/microsoft.graph.contentType'
            baseTypes:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.contentType'
              description: The collection of content types that are ancestors of this content type.
            columnLinks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
              description: The collection of columns that are required by this content type
            columnPositions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
              description: Column order information in a content type.
            columns:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
              description: The collection of column definitions for this contentType.
          additionalProperties:
            type: object
    microsoft.graph.columnLink:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: columnLink
          type: object
          properties:
            name:
              type: string
              description: The name of the column  in this content type.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.drive:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItem'
        - title: drive
          type: object
          properties:
            driveType:
              type: string
              description: Describes the type of drive represented by this resource. OneDrive personal drives will return personal. OneDrive for Business will return business. SharePoint document libraries will return documentLibrary. Read-only.
              nullable: true
            owner:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            quota:
              $ref: '#/components/schemas/microsoft.graph.quota'
            sharePointIds:
              $ref: '#/components/schemas/microsoft.graph.sharepointIds'
            system:
              $ref: '#/components/schemas/microsoft.graph.systemFacet'
            activities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
              description: The list of recent activities that took place under this drive.
            bundles:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
              description: 'Collection of [bundles][bundle] (albums and multi-select-shared sets of items). Only in personal OneDrive.'
            following:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
              description: The list of items the user is following. Only in OneDrive for Business.
            items:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
              description: All items contained in the drive. Read-only. Nullable.
            list:
              $ref: '#/components/schemas/microsoft.graph.list'
            root:
              $ref: '#/components/schemas/microsoft.graph.driveItem'
            special:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
              description: Collection of common folders available in OneDrive. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.baseItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: baseItem
          type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time of item creation. Read-only.
              format: date-time
            description:
              type: string
              description: Provides a user-visible description of the item. Optional.
              nullable: true
            eTag:
              type: string
              description: ETag for the item. Read-only.
              nullable: true
            lastModifiedBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time the item was last modified. Read-only.
              format: date-time
            name:
              type: string
              description: The name of the item. Read-write.
              nullable: true
            parentReference:
              $ref: '#/components/schemas/microsoft.graph.itemReference'
            webUrl:
              type: string
              description: URL that displays the resource in the browser. Read-only.
              nullable: true
            createdByUser:
              $ref: '#/components/schemas/microsoft.graph.user'
            lastModifiedByUser:
              $ref: '#/components/schemas/microsoft.graph.user'
          additionalProperties:
            type: object
    microsoft.graph.list:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItem'
        - title: list
          type: object
          properties:
            displayName:
              type: string
              description: The displayable title of the list.
              nullable: true
            list:
              $ref: '#/components/schemas/microsoft.graph.listInfo'
            sharepointIds:
              $ref: '#/components/schemas/microsoft.graph.sharepointIds'
            system:
              $ref: '#/components/schemas/microsoft.graph.systemFacet'
            activities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
              description: The recent activities that took place within this list.
            columns:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
              description: The collection of field definitions for this list.
            contentTypes:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.contentType'
              description: The collection of content types present in this list.
            drive:
              $ref: '#/components/schemas/microsoft.graph.drive'
            items:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.listItem'
              description: All items contained in the list.
            operations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
              description: The collection of long running operations for the list.
            subscriptions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.subscription'
              description: The set of subscriptions on the list.
          additionalProperties:
            type: object
    microsoft.graph.itemActivityOLD:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: itemActivityOLD
          type: object
          properties:
            action:
              $ref: '#/components/schemas/microsoft.graph.itemActionSet'
            actor:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            times:
              $ref: '#/components/schemas/microsoft.graph.itemActivityTimeSet'
            driveItem:
              $ref: '#/components/schemas/microsoft.graph.driveItem'
            listItem:
              $ref: '#/components/schemas/microsoft.graph.listItem'
          additionalProperties:
            type: object
    microsoft.graph.listItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItem'
        - title: listItem
          type: object
          properties:
            contentType:
              $ref: '#/components/schemas/microsoft.graph.contentTypeInfo'
            deleted:
              $ref: '#/components/schemas/microsoft.graph.deleted'
            sharepointIds:
              $ref: '#/components/schemas/microsoft.graph.sharepointIds'
            activities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
              description: The list of recent activities that took place on this item.
            analytics:
              $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
            documentSetVersions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
              description: Version information for a document set version created by a user.
            driveItem:
              $ref: '#/components/schemas/microsoft.graph.driveItem'
            fields:
              $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
            versions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.listItemVersion'
              description: The list of previous versions of the list item.
          additionalProperties:
            type: object
    microsoft.graph.driveItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItem'
        - title: driveItem
          type: object
          properties:
            audio:
              $ref: '#/components/schemas/microsoft.graph.audio'
            bundle:
              $ref: '#/components/schemas/microsoft.graph.bundle'
            content:
              type: string
              description: 'The content stream, if the item represents a file.'
              format: base64url
              nullable: true
            cTag:
              type: string
              description: An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.
              nullable: true
            deleted:
              $ref: '#/components/schemas/microsoft.graph.deleted'
            file:
              $ref: '#/components/schemas/microsoft.graph.file'
            fileSystemInfo:
              $ref: '#/components/schemas/microsoft.graph.fileSystemInfo'
            folder:
              $ref: '#/components/schemas/microsoft.graph.folder'
            image:
              $ref: '#/components/schemas/microsoft.graph.image'
            location:
              $ref: '#/components/schemas/microsoft.graph.geoCoordinates'
            malware:
              $ref: '#/components/schemas/microsoft.graph.malware'
            media:
              $ref: '#/components/schemas/microsoft.graph.media'
            package:
              $ref: '#/components/schemas/microsoft.graph.package'
            pendingOperations:
              $ref: '#/components/schemas/microsoft.graph.pendingOperations'
            photo:
              $ref: '#/components/schemas/microsoft.graph.photo'
            publication:
              $ref: '#/components/schemas/microsoft.graph.publicationFacet'
            remoteItem:
              $ref: '#/components/schemas/microsoft.graph.remoteItem'
            root:
              $ref: '#/components/schemas/microsoft.graph.root'
            searchResult:
              $ref: '#/components/schemas/microsoft.graph.searchResult'
            shared:
              $ref: '#/components/schemas/microsoft.graph.shared'
            sharepointIds:
              $ref: '#/components/schemas/microsoft.graph.sharepointIds'
            size:
              type: integer
              description: Size of the item in bytes. Read-only.
              format: int64
              nullable: true
            source:
              $ref: '#/components/schemas/microsoft.graph.driveItemSource'
            specialFolder:
              $ref: '#/components/schemas/microsoft.graph.specialFolder'
            video:
              $ref: '#/components/schemas/microsoft.graph.video'
            webDavUrl:
              type: string
              description: WebDAV compatible URL for the item.
              nullable: true
            workbook:
              $ref: '#/components/schemas/microsoft.graph.workbook'
            activities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
              description: The list of recent activities that took place on this item.
            analytics:
              $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
            children:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
              description: Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
            listItem:
              $ref: '#/components/schemas/microsoft.graph.listItem'
            permissions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.permission'
              description: The set of permissions for the item. Read-only. Nullable.
            subscriptions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.subscription'
              description: The set of subscriptions on the item. Only supported on the root of a drive.
            thumbnails:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.thumbnailSet'
              description: 'Collection containing [ThumbnailSet][] objects associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable.'
            versions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.driveItemVersion'
              description: 'The list of previous versions of the item. For more info, see [getting previous versions][]. Read-only. Nullable.'
          additionalProperties:
            type: object
    microsoft.graph.documentSetVersion:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        - title: documentSetVersion
          type: object
          properties:
            comment:
              type: string
              description: Comment about the captured version.
              nullable: true
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time when this version was created.
              format: date-time
              nullable: true
            items:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.documentSetVersionItem'
              description: Items within the document set that are captured as part of this version.
            shouldCaptureMinorVersion:
              type: boolean
              description: 'If true, minor versions of items are also captured; otherwise, only major versions will be captured. Default value is false.'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.fieldValueSet:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: fieldValueSet
          type: object
          additionalProperties:
            type: object
    microsoft.graph.listItemVersion:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItemVersion'
        - title: listItemVersion
          type: object
          properties:
            fields:
              $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
          additionalProperties:
            type: object
    microsoft.graph.richLongRunningOperation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.longRunningOperation'
        - title: richLongRunningOperation
          type: object
          properties:
            error:
              $ref: '#/components/schemas/microsoft.graph.publicError'
            percentageComplete:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: A value between 0 and 100 that indicates the progress of the operation.
              format: int32
              nullable: true
            resourceId:
              type: string
              description: A unique identifier for the result.
              nullable: true
            type:
              type: string
              description: Type of the operation.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.subscription:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: subscription
          type: object
          properties:
            applicationId:
              type: string
              description: Optional. Identifier of the application used to create the subscription. Read-only.
              nullable: true
            changeType:
              type: string
              description: 'Required. Indicates the type of change in the subscribed resource that will raise a change notification. The supported values are: created, updated, deleted. Multiple values can be combined using a comma-separated list. Note:  Drive root item and list change notifications support only the updated changeType. User and group change notifications support updated and deleted changeType.'
            clientState:
              type: string
              description: Optional. Specifies the value of the clientState property sent by the service in each change notification. The maximum length is 255 characters. The client can check that the change notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each change notification.
              nullable: true
            creatorId:
              type: string
              description: 'Optional. Identifier of the user or service principal that created the subscription. If the app used delegated permissions to create the subscription, this field contains the ID of the signed-in user the app called on behalf of. If the app used application permissions, this field contains the ID of the service principal corresponding to the app. Read-only.'
              nullable: true
            encryptionCertificate:
              type: string
              description: Optional. A base64-encoded representation of a certificate with a public key used to encrypt resource data in change notifications. Optional but required when includeResourceData is true.
              nullable: true
            encryptionCertificateId:
              type: string
              description: Optional. A custom app-provided identifier to help identify the certificate needed to decrypt resource data. Required when includeResourceData is true.
              nullable: true
            expirationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Required. Specifies the date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to. For the maximum supported subscription length of time, see the table below.'
              format: date-time
            includeResourceData:
              type: boolean
              description: 'Optional. When set to true, change notifications include resource data (such as content of a chat message).'
              nullable: true
            latestSupportedTlsVersion:
              type: string
              description: 'Optional. Specifies the latest version of Transport Layer Security (TLS) that the notification endpoint, specified by notificationUrl, supports. The possible values are: v1_0, v1_1, v1_2, v1_3. For subscribers whose notification endpoint supports a version lower than the currently recommended version (TLS 1.2), specifying this property by a set timeline allows them to temporarily use their deprecated version of TLS before completing their upgrade to TLS 1.2. For these subscribers, not setting this property per the timeline would result in subscription operations failing. For subscribers whose notification endpoint already supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the property to v1_2.'
              nullable: true
            lifecycleNotificationUrl:
              type: string
              description: 'Optional. The URL of the endpoint that receives lifecycle notifications, including subscriptionRemoved and missed notifications. This URL must make use of the HTTPS protocol.'
              nullable: true
            notificationContentType:
              type: string
              description: Optional. Desired content-type for Microsoft Graph change notifications for supported resource types. The default content-type is application/json.
              nullable: true
            notificationQueryOptions:
              type: string
              description: 'Optional.  OData query options for specifying the value for the targeting resource. Clients receive notifications when the resource reaches the state matching the query options provided here. With this new property in the subscription creation payload along with all existing properties, Webhooks will deliver notifications whenever a resource reaches the desired state mentioned in the notificationQueryOptions property. For example, when the print job is completed or when a print job resource isFetchable property value becomes true etc.'
              nullable: true
            notificationUrl:
              type: string
              description: Required. The URL of the endpoint that receives the change notifications. This URL must make use of the HTTPS protocol.
            notificationUrlAppId:
              type: string
              description: Optional. The app ID that the subscription service can use to generate the validation token. This allows the client to validate the authenticity of the notification received.
              nullable: true
            resource:
              type: string
              description: Required. Specifies the resource that will be monitored for changes. Do not include the base URL (https://graph.microsoft.com/beta/). See the possible resource path values for each supported resource.
          additionalProperties:
            type: object
    microsoft.graph.onenote:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: onenote
          type: object
          properties:
            notebooks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.notebook'
              description: The collection of OneNote notebooks that are owned by the user or group. Read-only. Nullable.
            operations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
              description: 'The status of OneNote operations. Getting an operations collection is not supported, but you can get the status of long-running operations if the Operation-Location header is returned in the response. Read-only. Nullable.'
            pages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
              description: The pages in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
            resources:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenoteResource'
              description: 'The image and other file resources in OneNote pages. Getting a resources collection is not supported, but you can get the binary content of a specific resource. Read-only. Nullable.'
            sectionGroups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
              description: The section groups in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
            sections:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
              description: The sections in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.notebook:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel'
        - title: notebook
          type: object
          properties:
            isDefault:
              type: boolean
              description: Indicates whether this is the user's default notebook. Read-only.
              nullable: true
            isShared:
              type: boolean
              description: 'Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner. Read-only.'
              nullable: true
            links:
              $ref: '#/components/schemas/microsoft.graph.notebookLinks'
            sectionGroupsUrl:
              type: string
              description: 'The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only.'
              nullable: true
            sectionsUrl:
              type: string
              description: 'The URL for the sections navigation property, which returns all the sections in the notebook. Read-only.'
              nullable: true
            userRole:
              $ref: '#/components/schemas/microsoft.graph.onenoteUserRole'
            sectionGroups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
              description: The section groups in the notebook. Read-only. Nullable.
            sections:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
              description: The sections in the notebook. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.sectionGroup:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel'
        - title: sectionGroup
          type: object
          properties:
            sectionGroupsUrl:
              type: string
              description: 'The URL for the sectionGroups navigation property, which returns all the section groups in the section group. Read-only.'
              nullable: true
            sectionsUrl:
              type: string
              description: 'The URL for the sections navigation property, which returns all the sections in the section group. Read-only.'
              nullable: true
            parentNotebook:
              $ref: '#/components/schemas/microsoft.graph.notebook'
            parentSectionGroup:
              $ref: '#/components/schemas/microsoft.graph.sectionGroup'
            sectionGroups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
              description: The section groups in the section. Read-only. Nullable.
            sections:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
              description: The sections in the section group. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.onenoteSection:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel'
        - title: onenoteSection
          type: object
          properties:
            isDefault:
              type: boolean
              description: Indicates whether this is the user's default section. Read-only.
              nullable: true
            links:
              $ref: '#/components/schemas/microsoft.graph.sectionLinks'
            pagesUrl:
              type: string
              description: The pages endpoint where you can get details for all the pages in the section. Read-only.
              nullable: true
            pages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
              description: The collection of pages in the section.  Read-only. Nullable.
            parentNotebook:
              $ref: '#/components/schemas/microsoft.graph.notebook'
            parentSectionGroup:
              $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          additionalProperties:
            type: object
    microsoft.graph.onenotePage:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntitySchemaObjectModel'
        - title: onenotePage
          type: object
          properties:
            content:
              type: string
              description: The page's HTML content.
              format: base64url
              nullable: true
            contentUrl:
              type: string
              description: The URL for the page's HTML content.  Read-only.
              nullable: true
            createdByAppId:
              type: string
              description: The unique identifier of the application that created the page. Read-only.
              nullable: true
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the page was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
              format: date-time
              nullable: true
            level:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The indentation level of the page. Read-only.
              format: int32
              nullable: true
            links:
              $ref: '#/components/schemas/microsoft.graph.pageLinks'
            order:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The order of the page within its parent section. Read-only.
              format: int32
              nullable: true
            title:
              type: string
              description: The title of the page.
              nullable: true
            userTags:
              type: array
              items:
                type: string
                nullable: true
            parentNotebook:
              $ref: '#/components/schemas/microsoft.graph.notebook'
            parentSection:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          additionalProperties:
            type: object
    microsoft.graph.onenoteOperation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.operation'
        - title: onenoteOperation
          type: object
          properties:
            error:
              $ref: '#/components/schemas/microsoft.graph.onenoteOperationError'
            percentComplete:
              type: string
              description: The operation percent complete if the operation is still in running status.
              nullable: true
            resourceId:
              type: string
              description: The resource id.
              nullable: true
            resourceLocation:
              type: string
              description: 'The resource URI for the object. For example, the resource URI for a copied page or section.'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.onenoteResource:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntityBaseModel'
        - title: onenoteResource
          type: object
          properties:
            content:
              type: string
              description: The content stream
              format: base64url
              nullable: true
            contentUrl:
              type: string
              description: The URL for downloading the content
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.sitePage:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItem'
        - title: sitePage
          type: object
          properties:
            contentType:
              $ref: '#/components/schemas/microsoft.graph.contentTypeInfo'
            pageLayoutType:
              type: string
              nullable: true
            publishingState:
              $ref: '#/components/schemas/microsoft.graph.publicationFacet'
            title:
              type: string
              nullable: true
            webParts:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.webPart'
          additionalProperties:
            type: object
    microsoft.graph.permission:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: permission
          type: object
          properties:
            expirationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: A format of yyyy-MM-ddTHH:mm:ssZ of DateTimeOffset indicates the expiration time of the permission. DateTime.MinValue indicates there is no expiration set for this permission. Optional.
              format: date-time
              nullable: true
            grantedTo:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            grantedToIdentities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.identitySet'
            grantedToIdentitiesV2:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sharePointIdentitySet'
              description: 'For link type permissions, the details of the users to whom permission was granted. Read-only.'
            grantedToV2:
              $ref: '#/components/schemas/microsoft.graph.sharePointIdentitySet'
            hasPassword:
              type: boolean
              description: Indicates whether the password is set for this permission. This property only appears in the response. Optional. Read-only. For OneDrive Personal only.
              nullable: true
            inheritedFrom:
              $ref: '#/components/schemas/microsoft.graph.itemReference'
            invitation:
              $ref: '#/components/schemas/microsoft.graph.sharingInvitation'
            link:
              $ref: '#/components/schemas/microsoft.graph.sharingLink'
            roles:
              type: array
              items:
                type: string
                nullable: true
              description: 'The type of permission, for example, read. See below for the full list of roles. Read-only.'
            shareId:
              type: string
              description: 'A unique token that can be used to access this shared item via the [shares API][]. Read-only.'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.termStore.store:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: store
          type: object
          properties:
            defaultLanguageTag:
              type: string
              description: Default language of the term store.
            languageTags:
              type: array
              items:
                type: string
              description: List of languages for the term store.
            groups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
              description: Collection of all groups available in the term store.
            sets:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
              description: Collection of all sets available in the term store.
          additionalProperties:
            type: object
    microsoft.graph.termStore.group:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: group
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time of the group creation. Read-only.
              format: date-time
              nullable: true
            description:
              type: string
              description: Description that gives details on the term usage.
              nullable: true
            displayName:
              type: string
              description: Name of the group.
              nullable: true
            parentSiteId:
              type: string
              description: ID of the parent site of this group.
              nullable: true
            scope:
              $ref: '#/components/schemas/microsoft.graph.termStore.termGroupScope'
            sets:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
              description: 'All sets under the group in a term [store].'
          additionalProperties:
            type: object
    microsoft.graph.termStore.set:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: set
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time of set creation. Read-only.
              format: date-time
              nullable: true
            description:
              type: string
              description: Description giving details on the term usage.
              nullable: true
            localizedNames:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.localizedName'
              description: Name of the set for each languageTag.
            properties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.keyValue'
              description: Custom properties for the set.
            children:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
              description: 'Children terms of set in term [store].'
            parentGroup:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
            relations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
              description: Indicates which terms have been pinned or reused directly under the set.
            terms:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
              description: All the terms under the set.
          additionalProperties:
            type: object
    microsoft.graph.termStore.term:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: term
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time of term creation. Read-only.
              format: date-time
              nullable: true
            descriptions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.localizedDescription'
              description: Description about term that is dependent on the languageTag.
            labels:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.localizedLabel'
              description: Label metadata for a term.
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Last date and time of term modification. Read-only.
              format: date-time
              nullable: true
            properties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.keyValue'
              description: Collection of properties on the term.
            children:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
              description: Children of current term.
            relations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
              description: To indicate which terms are related to the current term as either pinned or reused.
            set:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
          additionalProperties:
            type: object
    microsoft.graph.termStore.relation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: relation
          type: object
          properties:
            relationship:
              $ref: '#/components/schemas/microsoft.graph.termStore.relationType'
            fromTerm:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
            set:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
            toTerm:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
          additionalProperties:
            type: object
    microsoft.graph.itemReference:
      title: itemReference
      type: object
      properties:
        driveId:
          type: string
          description: Unique identifier of the drive instance that contains the item. Read-only.
          nullable: true
        driveType:
          type: string
          description: 'Identifies the type of drive. See [drive][] resource for values.'
          nullable: true
        id:
          type: string
          description: Unique identifier of the item in the drive. Read-only.
          nullable: true
        name:
          type: string
          description: The name of the item being referenced. Read-only.
          nullable: true
        path:
          type: string
          description: Path that can be used to navigate to the item. Read-only.
          nullable: true
        shareId:
          type: string
          description: 'A unique identifier for a shared resource that can be accessed via the [Shares][] API.'
          nullable: true
        sharepointIds:
          $ref: '#/components/schemas/microsoft.graph.sharepointIds'
        siteId:
          type: string
          description: 'For OneDrive for Business and SharePoint, this property represents the ID of the site that contains the parent document library of the driveItem resource. The value is the same as the id property of that [site][] resource. It is an opaque string that consists of three identifiers of the site. For OneDrive, this property is not populated.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.driveRecipient:
      title: driveRecipient
      type: object
      properties:
        alias:
          type: string
          description: 'The alias of the domain object, for cases where an email address is unavailable (e.g. security groups).'
          nullable: true
        email:
          type: string
          description: 'The email address for the recipient, if the recipient has an associated email address.'
          nullable: true
        objectId:
          type: string
          description: The unique identifier for the recipient in the directory.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.itemActivityStat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: itemActivityStat
          type: object
          properties:
            access:
              $ref: '#/components/schemas/microsoft.graph.itemActionStat'
            create:
              $ref: '#/components/schemas/microsoft.graph.itemActionStat'
            delete:
              $ref: '#/components/schemas/microsoft.graph.itemActionStat'
            edit:
              $ref: '#/components/schemas/microsoft.graph.itemActionStat'
            endDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: When the interval ends. Read-only.
              format: date-time
              nullable: true
            incompleteData:
              $ref: '#/components/schemas/microsoft.graph.incompleteData'
            isTrending:
              type: boolean
              description: Indicates whether the item is 'trending.' Read-only.
              nullable: true
            move:
              $ref: '#/components/schemas/microsoft.graph.itemActionStat'
            startDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: When the interval starts. Read-only.
              format: date-time
              nullable: true
            activities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemActivity'
              description: Exposes the itemActivities represented in this itemActivityStat resource.
          additionalProperties:
            type: object
    microsoft.graph.onenotePatchContentCommand:
      title: onenotePatchContentCommand
      type: object
      properties:
        action:
          $ref: '#/components/schemas/microsoft.graph.onenotePatchActionType'
        content:
          type: string
          description: 'A string of well-formed HTML to add to the page, and any image or file binary data. If the content contains binary data, the request must be sent using the multipart/form-data content type with a ''Commands'' part.'
          nullable: true
        position:
          $ref: '#/components/schemas/microsoft.graph.onenotePatchInsertPosition'
        target:
          type: string
          description: 'The element to update. Must be the #<data-id> or the generated {id} of the element, or the body or title keyword.'
      additionalProperties:
        type: object
    microsoft.graph.onenotePagePreview:
      title: onenotePagePreview
      type: object
      properties:
        links:
          $ref: '#/components/schemas/microsoft.graph.onenotePagePreviewLinks'
        previewText:
          type: string
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.CopyNotebookModel:
      title: CopyNotebookModel
      type: object
      properties:
        createdBy:
          type: string
          nullable: true
        createdByIdentity:
          $ref: '#/components/schemas/microsoft.graph.identitySet'
        createdTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        isShared:
          type: boolean
          nullable: true
        lastModifiedBy:
          type: string
          nullable: true
        lastModifiedByIdentity:
          $ref: '#/components/schemas/microsoft.graph.identitySet'
        lastModifiedTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/microsoft.graph.notebookLinks'
        name:
          type: string
          nullable: true
        sectionGroupsUrl:
          type: string
          nullable: true
        sectionsUrl:
          type: string
          nullable: true
        self:
          type: string
          nullable: true
        userRole:
          $ref: '#/components/schemas/microsoft.graph.onenoteUserRole'
      additionalProperties:
        type: object
    microsoft.graph.recentNotebook:
      title: recentNotebook
      type: object
      properties:
        displayName:
          type: string
          description: The name of the notebook.
          nullable: true
        lastAccessedTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/microsoft.graph.recentNotebookLinks'
        sourceService:
          $ref: '#/components/schemas/microsoft.graph.onenoteSourceService'
      additionalProperties:
        type: object
    microsoft.graph.deleted:
      title: deleted
      type: object
      properties:
        state:
          type: string
          description: Represents the state of the deleted item.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.root:
      title: root
      type: object
      additionalProperties:
        type: object
    microsoft.graph.siteSettings:
      title: siteSettings
      type: object
      properties:
        languageTag:
          type: string
          description: The language tag for the language used on this site.
          nullable: true
        timeZone:
          type: string
          description: Indicates the time offset for the time zone of the site from Coordinated Universal Time (UTC).
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.sharepointIds:
      title: sharepointIds
      type: object
      properties:
        listId:
          type: string
          description: The unique identifier (guid) for the item's list in SharePoint.
          nullable: true
        listItemId:
          type: string
          description: An integer identifier for the item within the containing list.
          nullable: true
        listItemUniqueId:
          type: string
          description: The unique identifier (guid) for the item within OneDrive for Business or a SharePoint site.
          nullable: true
        siteId:
          type: string
          description: The unique identifier (guid) for the item's site collection (SPSite).
          nullable: true
        siteUrl:
          type: string
          description: The SharePoint URL for the site that contains the item.
          nullable: true
        tenantId:
          type: string
          description: The unique identifier (guid) for the tenancy.
          nullable: true
        webId:
          type: string
          description: The unique identifier (guid) for the item's site (SPWeb).
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.siteCollection:
      title: siteCollection
      type: object
      properties:
        dataLocationCode:
          type: string
          description: The geographic region code for where this site collection resides. Read-only.
          nullable: true
        hostname:
          type: string
          description: The hostname for the site collection. Read-only.
          nullable: true
        root:
          $ref: '#/components/schemas/microsoft.graph.root'
      additionalProperties:
        type: object
    microsoft.graph.entity:
      title: entity
      type: object
      properties:
        id:
          type: string
          description: Read-only.
      additionalProperties:
        type: object
    microsoft.graph.booleanColumn:
      title: booleanColumn
      type: object
      additionalProperties:
        type: object
    microsoft.graph.calculatedColumn:
      title: calculatedColumn
      type: object
      properties:
        format:
          type: string
          description: 'For dateTime output types, the format of the value. Must be one of dateOnly or dateTime.'
          nullable: true
        formula:
          type: string
          description: The formula used to compute the value for this column.
          nullable: true
        outputType:
          type: string
          description: 'The output type used to format values in this column. Must be one of boolean, currency, dateTime, number, or text.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.choiceColumn:
      title: choiceColumn
      type: object
      properties:
        allowTextEntry:
          type: boolean
          description: 'If true, allows custom values that aren''t in the configured choices.'
          nullable: true
        choices:
          type: array
          items:
            type: string
            nullable: true
          description: The list of values available for this column.
        displayAs:
          type: string
          description: 'How the choices are to be presented in the UX. Must be one of checkBoxes, dropDownMenu, or radioButtons'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.contentApprovalStatusColumn:
      title: contentApprovalStatusColumn
      type: object
      additionalProperties:
        type: object
    microsoft.graph.currencyColumn:
      title: currencyColumn
      type: object
      properties:
        locale:
          type: string
          description: Specifies the locale from which to infer the currency symbol.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.dateTimeColumn:
      title: dateTimeColumn
      type: object
      properties:
        displayAs:
          type: string
          description: 'How the value should be presented in the UX. Must be one of default, friendly, or standard. See below for more details. If unspecified, treated as default.'
          nullable: true
        format:
          type: string
          description: Indicates whether the value should be presented as a date only or a date and time. Must be one of dateOnly or dateTime
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.defaultColumnValue:
      title: defaultColumnValue
      type: object
      properties:
        formula:
          type: string
          description: The formula used to compute the default value for this column.
          nullable: true
        value:
          type: string
          description: The direct value to use as the default value for this column.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.geolocationColumn:
      title: geolocationColumn
      type: object
      additionalProperties:
        type: object
    microsoft.graph.hyperlinkOrPictureColumn:
      title: hyperlinkOrPictureColumn
      type: object
      properties:
        isPicture:
          type: boolean
          description: Specifies whether the display format used for URL columns is an image or a hyperlink.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.lookupColumn:
      title: lookupColumn
      type: object
      properties:
        allowMultipleValues:
          type: boolean
          description: Indicates whether multiple values can be selected from the source.
          nullable: true
        allowUnlimitedLength:
          type: boolean
          description: Indicates whether values in the column should be able to exceed the standard limit of 255 characters.
          nullable: true
        columnName:
          type: string
          description: The name of the lookup source column.
          nullable: true
        listId:
          type: string
          description: The unique identifier of the lookup source list.
          nullable: true
        primaryLookupColumnId:
          type: string
          description: 'If specified, this column is a secondary lookup, pulling an additional field from the list item looked up by the primary lookup. Use the list item looked up by the primary as the source for the column named here.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.numberColumn:
      title: numberColumn
      type: object
      properties:
        decimalPlaces:
          type: string
          description: How many decimal places to display. See below for information about the possible values.
          nullable: true
        displayAs:
          type: string
          description: 'How the value should be presented in the UX. Must be one of number or percentage. If unspecified, treated as number.'
          nullable: true
        maximum:
          type: number
          description: The maximum permitted value.
          format: double
          nullable: true
        minimum:
          type: number
          description: The minimum permitted value.
          format: double
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.personOrGroupColumn:
      title: personOrGroupColumn
      type: object
      properties:
        allowMultipleSelection:
          type: boolean
          description: Indicates whether multiple values can be selected from the source.
          nullable: true
        chooseFromType:
          type: string
          description: 'Whether to allow selection of people only, or people and groups. Must be one of peopleAndGroups or peopleOnly.'
          nullable: true
        displayAs:
          type: string
          description: How to display the information about the person or group chosen. See below.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.contentTypeInfo:
      title: contentTypeInfo
      type: object
      properties:
        id:
          type: string
          description: The id of the content type.
          nullable: true
        name:
          type: string
          description: The name of the content type.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.termColumn:
      title: termColumn
      type: object
      properties:
        allowMultipleValues:
          type: boolean
          description: Specifies whether the column will allow more than one value
          nullable: true
        showFullyQualifiedName:
          type: boolean
          description: Specifies whether to display the entire term path or only the term label.
          nullable: true
        parentTerm:
          $ref: '#/components/schemas/microsoft.graph.termStore.term'
        termSet:
          $ref: '#/components/schemas/microsoft.graph.termStore.set'
      additionalProperties:
        type: object
    microsoft.graph.textColumn:
      title: textColumn
      type: object
      properties:
        allowMultipleLines:
          type: boolean
          description: Whether to allow multiple lines of text.
          nullable: true
        appendChangesToExistingText:
          type: boolean
          description: 'Whether updates to this column should replace existing text, or append to it.'
          nullable: true
        linesForEditing:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The size of the text box.
          format: int32
          nullable: true
        maxLength:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The maximum number of characters for the value.
          format: int32
          nullable: true
        textType:
          type: string
          description: The type of text being stored. Must be one of plain or richText
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.thumbnailColumn:
      title: thumbnailColumn
      type: object
      additionalProperties:
        type: object
    microsoft.graph.columnTypes:
      title: columnTypes
      enum:
        - note
        - text
        - choice
        - multichoice
        - number
        - currency
        - dateTime
        - lookup
        - boolean
        - user
        - url
        - calculated
        - location
        - geolocation
        - term
        - multiterm
        - thumbnail
        - approvalStatus
        - unknownFutureValue
      type: string
    microsoft.graph.columnValidation:
      title: columnValidation
      type: object
      properties:
        defaultLanguage:
          type: string
          description: Default BCP 47 language tag for the description.
          nullable: true
        descriptions:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.displayNameLocalization'
          description: Localized messages that explain what is needed for this column's value to be considered valid. User will be prompted with this message if validation fails.
        formula:
          type: string
          description: 'The formula to validate column value. For examples, see Examples of common formulas in lists'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.documentSet:
      title: documentSet
      type: object
      properties:
        allowedContentTypes:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.contentTypeInfo'
          description: Content types allowed in document set.
        defaultContents:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.documentSetContent'
          description: Default contents of document set.
        propagateWelcomePageChanges:
          type: boolean
          description: Indicates whether to add the name of the document set to each file name.
          nullable: true
        shouldPrefixNameToFile:
          type: boolean
          description: Add the name of the Document Set to each file name.
          nullable: true
        welcomePageUrl:
          type: string
          description: Welcome page absolute URL.
          nullable: true
        sharedColumns:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        welcomePageColumns:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.columnDefinition'
      additionalProperties:
        type: object
    microsoft.graph.documentSetContent:
      title: documentSetContent
      type: object
      properties:
        contentType:
          $ref: '#/components/schemas/microsoft.graph.contentTypeInfo'
        fileName:
          type: string
          description: Name of the file in resource folder that should be added as a default content or a template in the document set
          nullable: true
        folderName:
          type: string
          description: Folder name in which the file will be placed when a new document set is created in the library.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.contentTypeOrder:
      title: contentTypeOrder
      type: object
      properties:
        default:
          type: boolean
          description: Whether this is the default Content Type
          nullable: true
        position:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Specifies the position in which the Content Type appears in the selection UI.
          format: int32
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.identitySet:
      title: identitySet
      type: object
      properties:
        application:
          $ref: '#/components/schemas/microsoft.graph.identity'
        device:
          $ref: '#/components/schemas/microsoft.graph.identity'
        user:
          $ref: '#/components/schemas/microsoft.graph.identity'
      additionalProperties:
        type: object
    microsoft.graph.quota:
      title: quota
      type: object
      properties:
        deleted:
          type: integer
          description: 'Total space consumed by files in the recycle bin, in bytes. Read-only.'
          format: int64
          nullable: true
        remaining:
          type: integer
          description: 'Total space remaining before reaching the quota limit, in bytes. Read-only.'
          format: int64
          nullable: true
        state:
          type: string
          description: Enumeration value that indicates the state of the storage space. Read-only.
          nullable: true
        storagePlanInformation:
          $ref: '#/components/schemas/microsoft.graph.storagePlanInformation'
        total:
          type: integer
          description: 'Total allowed storage space, in bytes. Read-only.'
          format: int64
          nullable: true
        used:
          type: integer
          description: 'Total space used, in bytes. Read-only.'
          format: int64
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.systemFacet:
      title: systemFacet
      type: object
      additionalProperties:
        type: object
    microsoft.graph.user:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.directoryObject'
        - title: user
          type: object
          properties:
            signInActivity:
              $ref: '#/components/schemas/microsoft.graph.signInActivity'
            accountEnabled:
              type: boolean
              description: 'true if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter (eq, ne, not, and in).'
              nullable: true
            ageGroup:
              type: string
              description: 'Sets the age group of the user. Allowed values: null, Minor, NotAdult and Adult. Refer to the legal age group property definitions for further information. Supports $filter (eq, ne, not, and in).'
              nullable: true
            assignedLicenses:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.assignedLicense'
              description: 'The licenses that are assigned to the user, including inherited (group-based) licenses. Not nullable. Supports $filter (eq, not, and counting empty collections).'
            assignedPlans:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.assignedPlan'
              description: The plans that are assigned to the user. Read-only. Not nullable.Supports $filter (eq and not).
            businessPhones:
              type: array
              items:
                type: string
              description: 'The telephone numbers for the user. Only one number can be set for this property. Read-only for users synced from on-premises directory. Supports $filter (eq, not, ge, le, startsWith).'
            city:
              type: string
              description: 'The city in which the user is located. Maximum length is 128 characters. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            companyName:
              type: string
              description: 'The company name which the user is associated. This property can be useful for describing the company that an external user comes from. The maximum length is 64 characters.Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            consentProvidedForMinor:
              type: string
              description: 'Sets whether consent has been obtained for minors. Allowed values: null, Granted, Denied and NotRequired. Refer to the legal age group property definitions for further information. Supports $filter (eq, ne, not, and in).'
              nullable: true
            country:
              type: string
              description: 'The country/region in which the user is located; for example, US or UK. Maximum length is 128 characters. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time the user was created. The value cannot be modified and is automatically populated when the entity is created. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. Property is nullable. A null value indicates that an accurate creation time couldn''t be determined for the user. Read-only. Supports $filter (eq, ne, not , ge, le, in).'
              format: date-time
              nullable: true
            creationType:
              type: string
              description: 'Indicates whether the user account was created through one of the following methods:  As a regular school or work account (null). As an external account (Invitation). As a local account for an Azure Active Directory B2C tenant (LocalAccount). Through self-service sign-up by an internal user using email verification (EmailVerified). Through self-service sign-up by an external user signing up through a link that is part of a user flow (SelfServiceSignUp).  Read-only.Supports $filter (eq, ne, not, and in).'
              nullable: true
            customSecurityAttributes:
              $ref: '#/components/schemas/microsoft.graph.customSecurityAttributeValue'
            department:
              type: string
              description: 'The name for the department in which the user works. Maximum length is 64 characters.Supports $filter (eq, ne, not , ge, le, in, and eq on null values).'
              nullable: true
            deviceKeys:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.deviceKey'
            displayName:
              type: string
              description: 'The name displayed in the address book for the user. This value is usually the combination of the user''s first name, middle initial, and last name. This property is required when a user is created and it cannot be cleared during updates. Maximum length is 256 characters. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values), $orderBy, and $search.'
              nullable: true
            employeeHireDate:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the user was hired or will start work in case of a future hire. Supports $filter (eq, ne, not , ge, le, in).'
              format: date-time
              nullable: true
            employeeId:
              type: string
              description: 'The employee identifier assigned to the user by the organization. The maximum length is 16 characters.Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).'
              nullable: true
            employeeOrgData:
              $ref: '#/components/schemas/microsoft.graph.employeeOrgData'
            employeeType:
              type: string
              description: 'Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor. Supports $filter (eq, ne, not , ge, le, in, startsWith).'
              nullable: true
            externalUserState:
              type: string
              description: 'For an external user invited to the tenant using the invitation API, this property represents the invited user''s invitation status. For invited users, the state can be PendingAcceptance or Accepted, or null for all other users. Supports $filter (eq, ne, not , in).'
              nullable: true
            externalUserStateChangeDateTime:
              type: string
              description: 'Shows the timestamp for the latest change to the externalUserState property. Supports $filter (eq, ne, not , in).'
              nullable: true
            faxNumber:
              type: string
              description: 'The fax number of the user. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).'
              nullable: true
            givenName:
              type: string
              description: 'The given name (first name) of the user. Maximum length is 64 characters. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).'
              nullable: true
            identities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.objectIdentity'
              description: 'Represents the identities that can be used to sign in to this user account. An identity can be provided by Microsoft (also known as a local account), by organizations, or by social identity providers such as Facebook, Google, and Microsoft, and tied to a user account. May contain multiple items with the same signInType value. Supports $filter (eq) including on null values, only where the signInType is not userPrincipalName.'
            imAddresses:
              type: array
              items:
                type: string
                nullable: true
              description: 'The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only. Supports $filter (eq, not, ge, le, startsWith).'
            infoCatalogs:
              type: array
              items:
                type: string
              description: 'Identifies the info segments assigned to the user.  Supports $filter (eq, not, ge, le, startsWith).'
            isManagementRestricted:
              type: boolean
              nullable: true
            isResourceAccount:
              type: boolean
              description: Do not use – reserved for future use.
              nullable: true
            jobTitle:
              type: string
              description: 'The user''s job title. Maximum length is 128 characters. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).'
              nullable: true
            lastPasswordChangeDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The time when this Azure AD user last changed their password or when their password was created, , whichever date the latest action was performed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Returned only on $select.'
              format: date-time
              nullable: true
            legalAgeGroupClassification:
              type: string
              description: 'Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated based on ageGroup and consentProvidedForMinor properties. Allowed values: null, MinorWithOutParentalConsent, MinorWithParentalConsent, MinorNoParentalConsentRequired, NotAdult and Adult. Refer to the legal age group property definitions for further information. Returned only on $select.'
              nullable: true
            licenseAssignmentStates:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.licenseAssignmentState'
              description: State of license assignments for this user. Read-only. Returned only on $select.
            mail:
              type: string
              description: 'The SMTP address for the user, for example, admin@contoso.com. Changes to this property will also update the user''s proxyAddresses collection to include the value as an SMTP address. For Azure AD B2C accounts, this property can be updated up to only ten times with unique SMTP addresses. This property cannot contain accent characters.  Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith, and eq on null values).'
              nullable: true
            mailNickname:
              type: string
              description: 'The mail alias for the user. This property must be specified when a user is created. Maximum length is 64 characters. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            mobilePhone:
              type: string
              description: 'The primary cellular telephone number for the user. Read-only for users synced from on-premises directory.  Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            officeLocation:
              type: string
              description: 'The office location in the user''s place of business. Maximum length is 128 characters. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            onPremisesDistinguishedName:
              type: string
              description: Contains the on-premises Active Directory distinguished name or DN. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only.
              nullable: true
            onPremisesDomainName:
              type: string
              description: 'Contains the on-premises domainFQDN, also called dnsDomainName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only.'
              nullable: true
            onPremisesExtensionAttributes:
              $ref: '#/components/schemas/microsoft.graph.onPremisesExtensionAttributes'
            onPremisesImmutableId:
              type: string
              description: 'This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property must be specified when creating a new user account in the Graph if you are using a federated domain for the user''s userPrincipalName (UPN) property. Note: The $ and _ characters cannot be used when specifying this property. Supports $filter (eq, ne, not, ge, le, in).'
              nullable: true
            onPremisesLastSyncDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Indicates the last time at which the object was synced with the on-premises directory; for example: ''2013-02-16T03:04:54Z''. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Supports $filter (eq, ne, not, ge, le, in).'
              format: date-time
              nullable: true
            onPremisesProvisioningErrors:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onPremisesProvisioningError'
              description: 'Errors when using Microsoft synchronization product during provisioning.  Supports $filter (eq, not, ge, le).'
            onPremisesSamAccountName:
              type: string
              description: 'Contains the on-premises sAMAccountName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Supports $filter (eq, ne, not, ge, le, in, startsWith).'
              nullable: true
            onPremisesSecurityIdentifier:
              type: string
              description: Contains the on-premises security identifier (SID) for the user that was synchronized from on-premises to the cloud. Read-only. Supports $filter (eq including on null values).
              nullable: true
            onPremisesSyncEnabled:
              type: boolean
              description: 'true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only. Supports $filter (eq, ne, not, in, and eq on null values).'
              nullable: true
            onPremisesUserPrincipalName:
              type: string
              description: 'Contains the on-premises userPrincipalName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Supports $filter (eq, ne, not, ge, le, in, startsWith).'
              nullable: true
            otherMails:
              type: array
              items:
                type: string
              description: 'A list of additional email addresses for the user; for example: [''bob@contoso.com'', ''Robert@fabrikam.com''].NOTE: This property cannot contain accent characters.Supports $filter (eq, not, ge, le, in, startsWith, and counting empty collections).'
            passwordPolicies:
              type: string
              description: 'Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword, which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified. The two may be specified together; for example: DisablePasswordExpiration, DisableStrongPassword. For more information on the default password policies, see Azure AD pasword policies. Supports $filter (ne, not, and eq on null values).'
              nullable: true
            passwordProfile:
              $ref: '#/components/schemas/microsoft.graph.passwordProfile'
            postalCode:
              type: string
              description: 'The postal code for the user''s postal address. The postal code is specific to the user''s country/region. In the United States of America, this attribute contains the ZIP code. Maximum length is 40 characters. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            preferredDataLocation:
              type: string
              description: 'The preferred data location for the user. For more information, see OneDrive Online Multi-Geo.'
              nullable: true
            preferredLanguage:
              type: string
              description: 'The preferred language for the user. Should follow ISO 639-1 Code; for example en-US. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            provisionedPlans:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.provisionedPlan'
              description: 'The plans that are provisioned for the user. Read-only. Not nullable. Supports $filter (eq, not, ge, le).'
            proxyAddresses:
              type: array
              items:
                type: string
              description: 'For example: [''SMTP: bob@contoso.com'', ''smtp: bob@sales.contoso.com'']. Changes to the mail property will also update this collection to include the value as an SMTP address. For more information, see mail and proxyAddresses properties. The proxy address prefixed with SMTP (capitalized) is the primary proxy address while those prefixed with smtp are the secondary proxy addresses. For Azure AD B2C accounts, this property has a limit of ten unique addresses. Read-only in Microsoft Graph; you can update this property only through the Microsoft 365 admin center. Not nullable. Supports $filter (eq, not, ge, le, startsWith, endsWith, and counting empty collections).'
            refreshTokensValidFromDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft Graph).  If this happens, the application will need to acquire a new refresh token by making a request to the authorize endpoint. Read-only. Use invalidateAllRefreshTokens to reset.'
              format: date-time
              nullable: true
            showInAddressList:
              type: boolean
              description: Do not use in Microsoft Graph. Manage this property through the Microsoft 365 admin center instead. Represents whether the user should be included in the Outlook global address list. See Known issue.
              nullable: true
            signInSessionsValidFromDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft Graph).  If this happens, the application will need to acquire a new refresh token by making a request to the authorize endpoint. Read-only. Use revokeSignInSessions to reset.'
              format: date-time
              nullable: true
            state:
              type: string
              description: 'The state or province in the user''s address. Maximum length is 128 characters. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            streetAddress:
              type: string
              description: 'The street address of the user''s place of business. Maximum length is 1024 characters. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            surname:
              type: string
              description: 'The user''s surname (family name or last name). Maximum length is 64 characters. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            usageLocation:
              type: string
              description: 'A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries.  Examples include: US, JP, and GB. Not nullable. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            userPrincipalName:
              type: string
              description: 'The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user''s email name. The general format is alias@domain, where domain must be present in the tenant''s collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: This property cannot contain accent characters. Only the following characters are allowed A - Z, a - z, 0 - 9, '' . - _ ! # ^ ~. For the complete list of allowed characters, see username policies. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith) and $orderBy.'
              nullable: true
            userType:
              type: string
              description: 'A String value that can be used to classify user types in your directory, such as Member and Guest. Supports $filter (eq, ne, not, in, and eq on null values). NOTE: For more information about the permissions for member and guest users, see What are the default user permissions in Azure Active Directory?'
              nullable: true
            mailboxSettings:
              $ref: '#/components/schemas/microsoft.graph.mailboxSettings'
            deviceEnrollmentLimit:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.
              format: int32
            print:
              $ref: '#/components/schemas/microsoft.graph.userPrint'
            aboutMe:
              type: string
              description: A freeform text entry field for the user to describe themselves. Returned only on $select.
              nullable: true
            birthday:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The birthday of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z Returned only on $select.'
              format: date-time
            hireDate:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The hire date of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.  Returned only on $select.  Note: This property is specific to SharePoint Online. We recommend using the native employeeHireDate property to set and update hire date values using Microsoft Graph APIs.'
              format: date-time
            interests:
              type: array
              items:
                type: string
                nullable: true
              description: A list for the user to describe their interests. Returned only on $select.
            mySite:
              type: string
              description: The URL for the user's personal site. Returned only on $select.
              nullable: true
            pastProjects:
              type: array
              items:
                type: string
                nullable: true
              description: A list for the user to enumerate their past projects. Returned only on $select.
            preferredName:
              type: string
              description: The preferred name for the user. Returned only on $select.
              nullable: true
            responsibilities:
              type: array
              items:
                type: string
                nullable: true
              description: A list for the user to enumerate their responsibilities. Returned only on $select.
            schools:
              type: array
              items:
                type: string
                nullable: true
              description: A list for the user to enumerate the schools they have attended. Returned only on $select.
            skills:
              type: array
              items:
                type: string
                nullable: true
              description: A list for the user to enumerate their skills. Returned only on $select.
            analytics:
              $ref: '#/components/schemas/microsoft.graph.userAnalytics'
            cloudPCs:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.cloudPC'
            usageRights:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.usageRight'
              description: Represents the usage rights a user has been granted.
            informationProtection:
              $ref: '#/components/schemas/microsoft.graph.informationProtection'
            appRoleAssignments:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.appRoleAssignment'
              description: Represents the app roles a user has been granted for an application. Supports $expand.
            createdObjects:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: Directory objects that were created by the user. Read-only. Nullable.
            directReports:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: The users and contacts that report to the user. (The users and contacts that have their manager property set to this user.) Read-only. Nullable. Supports $expand.
            licenseDetails:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.licenseDetails'
              description: A collection of this user's license details. Read-only.
            manager:
              $ref: '#/components/schemas/microsoft.graph.directoryObject'
            memberOf:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: 'The groups, directory roles and administrative units that the user is a member of. Read-only. Nullable. Supports $expand.'
            oauth2PermissionGrants:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.oAuth2PermissionGrant'
            ownedDevices:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: Devices that are owned by the user. Read-only. Nullable. Supports $expand.
            ownedObjects:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: Directory objects that are owned by the user. Read-only. Nullable. Supports $expand.
            registeredDevices:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: Devices that are registered for the user. Read-only. Nullable. Supports $expand.
            scopedRoleMemberOf:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.scopedRoleMembership'
              description: The scoped-role administrative unit memberships for this user. Read-only. Nullable.
            transitiveMemberOf:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
            transitiveReports:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: The transitive reports for a user. Read-only.
            calendar:
              $ref: '#/components/schemas/microsoft.graph.calendar'
            calendarGroups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.calendarGroup'
              description: The user's calendar groups. Read-only. Nullable.
            calendars:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.calendar'
              description: The user's calendars. Read-only. Nullable.
            calendarView:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.event'
              description: The calendar view for the calendar. Read-only. Nullable.
            contactFolders:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.contactFolder'
              description: The user's contacts folders. Read-only. Nullable.
            contacts:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.contact'
              description: The user's contacts. Read-only. Nullable.
            events:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.event'
              description: The user's events. Default is to show events under the Default Calendar. Read-only. Nullable.
            inferenceClassification:
              $ref: '#/components/schemas/microsoft.graph.inferenceClassification'
            joinedGroups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.group'
              description: Read-only. Nullable.
            mailFolders:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.mailFolder'
              description: The user's mail folders. Read-only. Nullable.
            messages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.message'
              description: The messages in a mailbox or folder. Read-only. Nullable.
            outlook:
              $ref: '#/components/schemas/microsoft.graph.outlookUser'
            people:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.person'
              description: 'Read-only. The most relevant people to the user. The collection is ordered by their relevance to the user, which is determined by the user''s communication, collaboration and business relationships. A person is an aggregation of information from across mail, contacts and social networks.'
            drive:
              $ref: '#/components/schemas/microsoft.graph.drive'
            drives:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.drive'
              description: A collection of drives available for this user. Read-only.
            followedSites:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.site'
            extensions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.extension'
              description: The collection of open extensions defined for the user. Nullable.
            appConsentRequestsForApproval:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.appConsentRequest'
            approvals:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.approval'
            pendingAccessReviewInstances:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewInstance'
              description: Navigation property to get list of access reviews pending approval by reviewer.
            agreementAcceptances:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.agreementAcceptance'
              description: The user's terms of use acceptance statuses. Read-only. Nullable.
            security:
              $ref: '#/components/schemas/microsoft.graph.security.security'
            deviceEnrollmentConfigurations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.deviceEnrollmentConfiguration'
              description: Get enrollment configurations targeted to the user
            managedDevices:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.managedDevice'
              description: The managed devices associated with the user.
            managedAppRegistrations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.managedAppRegistration'
              description: Zero or more managed app registrations that belong to the user.
            windowsInformationProtectionDeviceRegistrations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.windowsInformationProtectionDeviceRegistration'
              description: Zero or more WIP device registrations that belong to the user.
            deviceManagementTroubleshootingEvents:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent'
              description: The list of troubleshooting events for this user.
            mobileAppIntentAndStates:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.mobileAppIntentAndState'
              description: The list of troubleshooting events for this user.
            mobileAppTroubleshootingEvents:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.mobileAppTroubleshootingEvent'
              description: The list of mobile app troubleshooting events for this user.
            notifications:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.notification'
            planner:
              $ref: '#/components/schemas/microsoft.graph.plannerUser'
            insights:
              $ref: '#/components/schemas/microsoft.graph.itemInsights'
            settings:
              $ref: '#/components/schemas/microsoft.graph.userSettings'
            onenote:
              $ref: '#/components/schemas/microsoft.graph.onenote'
            photo:
              $ref: '#/components/schemas/microsoft.graph.profilePhoto'
            photos:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.profilePhoto'
              description: Read-only. Nullable.
            profile:
              $ref: '#/components/schemas/microsoft.graph.profile'
            activities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.userActivity'
              description: The user's activities across devices. Read-only. Nullable.
            devices:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.device'
            onlineMeetings:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onlineMeeting'
            presence:
              $ref: '#/components/schemas/microsoft.graph.presence'
            authentication:
              $ref: '#/components/schemas/microsoft.graph.authentication'
            tasks:
              $ref: '#/components/schemas/microsoft.graph.tasks'
            chats:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.chat'
            joinedTeams:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.team'
              description: The Microsoft Teams teams that the user is a member of. Read-only. Nullable.
            teamwork:
              $ref: '#/components/schemas/microsoft.graph.userTeamwork'
            todo:
              $ref: '#/components/schemas/microsoft.graph.todo'
          additionalProperties:
            type: object
    microsoft.graph.listInfo:
      title: listInfo
      type: object
      properties:
        contentTypesEnabled:
          type: boolean
          description: 'If true, indicates that content types are enabled for this list.'
          nullable: true
        hidden:
          type: boolean
          description: 'If true, indicates that the list is not normally visible in the SharePoint user experience.'
          nullable: true
        template:
          type: string
          description: 'An enumerated value that represents the base list template used in creating the list. Possible values include documentLibrary, genericList, task, survey, announcements, contacts, and more.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.itemActionSet:
      title: itemActionSet
      type: object
      properties:
        comment:
          $ref: '#/components/schemas/microsoft.graph.commentAction'
        create:
          $ref: '#/components/schemas/microsoft.graph.createAction'
        delete:
          $ref: '#/components/schemas/microsoft.graph.deleteAction'
        edit:
          $ref: '#/components/schemas/microsoft.graph.editAction'
        mention:
          $ref: '#/components/schemas/microsoft.graph.mentionAction'
        move:
          $ref: '#/components/schemas/microsoft.graph.moveAction'
        rename:
          $ref: '#/components/schemas/microsoft.graph.renameAction'
        restore:
          $ref: '#/components/schemas/microsoft.graph.restoreAction'
        share:
          $ref: '#/components/schemas/microsoft.graph.shareAction'
        version:
          $ref: '#/components/schemas/microsoft.graph.versionAction'
      additionalProperties:
        type: object
    microsoft.graph.itemActivityTimeSet:
      title: itemActivityTimeSet
      type: object
      properties:
        lastRecordedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        observedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: When the activity was observed to take place.
          format: date-time
          nullable: true
        recordedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: When the observation was recorded on the service.
          format: date-time
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.audio:
      title: audio
      type: object
      properties:
        album:
          type: string
          description: The title of the album for this audio file.
          nullable: true
        albumArtist:
          type: string
          description: The artist named on the album for the audio file.
          nullable: true
        artist:
          type: string
          description: The performing artist for the audio file.
          nullable: true
        bitrate:
          type: integer
          description: Bitrate expressed in kbps.
          format: int64
          nullable: true
        composers:
          type: string
          description: The name of the composer of the audio file.
          nullable: true
        copyright:
          type: string
          description: Copyright information for the audio file.
          nullable: true
        disc:
          maximum: 32767
          minimum: -32768
          type: integer
          description: The number of the disc this audio file came from.
          format: int16
          nullable: true
        discCount:
          maximum: 32767
          minimum: -32768
          type: integer
          description: The total number of discs in this album.
          format: int16
          nullable: true
        duration:
          type: integer
          description: 'Duration of the audio file, expressed in milliseconds'
          format: int64
          nullable: true
        genre:
          type: string
          description: The genre of this audio file.
          nullable: true
        hasDrm:
          type: boolean
          description: Indicates if the file is protected with digital rights management.
          nullable: true
        isVariableBitrate:
          type: boolean
          description: Indicates if the file is encoded with a variable bitrate.
          nullable: true
        title:
          type: string
          description: The title of the audio file.
          nullable: true
        track:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The number of the track on the original disc for this audio file.
          format: int32
          nullable: true
        trackCount:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The total number of tracks on the original disc for this audio file.
          format: int32
          nullable: true
        year:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The year the audio file was recorded.
          format: int32
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.bundle:
      title: bundle
      type: object
      properties:
        album:
          $ref: '#/components/schemas/microsoft.graph.album'
        childCount:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Number of children contained immediately within this container.
          format: int32
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.file:
      title: file
      type: object
      properties:
        hashes:
          $ref: '#/components/schemas/microsoft.graph.hashes'
        mimeType:
          type: string
          description: The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file was uploaded. Read-only.
          nullable: true
        processingMetadata:
          type: boolean
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.fileSystemInfo:
      title: fileSystemInfo
      type: object
      properties:
        createdDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The UTC date and time the file was created on a client.
          format: date-time
          nullable: true
        lastAccessedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The UTC date and time the file was last accessed. Available for the recent file list only.
          format: date-time
          nullable: true
        lastModifiedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The UTC date and time the file was last modified on a client.
          format: date-time
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.folder:
      title: folder
      type: object
      properties:
        childCount:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Number of children contained immediately within this container.
          format: int32
          nullable: true
        view:
          $ref: '#/components/schemas/microsoft.graph.folderView'
      additionalProperties:
        type: object
    microsoft.graph.image:
      title: image
      type: object
      properties:
        height:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'Optional. Height of the image, in pixels. Read-only.'
          format: int32
          nullable: true
        width:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'Optional. Width of the image, in pixels. Read-only.'
          format: int32
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.geoCoordinates:
      title: geoCoordinates
      type: object
      properties:
        altitude:
          type: number
          description: 'Optional. The altitude (height), in feet,  above sea level for the item. Read-only.'
          format: double
          nullable: true
        latitude:
          type: number
          description: 'Optional. The latitude, in decimal, for the item. Writable on OneDrive Personal.'
          format: double
          nullable: true
        longitude:
          type: number
          description: 'Optional. The longitude, in decimal, for the item. Writable on OneDrive Personal.'
          format: double
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.malware:
      title: malware
      type: object
      properties:
        description:
          type: string
          description: Contains the virus details for the malware facet.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.media:
      title: media
      type: object
      properties:
        isTranscriptionShown:
          type: boolean
          description: 'If a file has a transcript, this setting controls if the closed captions / transcription for the media file should be shown to people during viewing. Read-Write.'
          nullable: true
        mediaSource:
          $ref: '#/components/schemas/microsoft.graph.mediaSource'
      additionalProperties:
        type: object
    microsoft.graph.package:
      title: package
      type: object
      properties:
        type:
          type: string
          description: 'A string indicating the type of package. While oneNote is the only currently defined value, you should expect other package types to be returned and handle them accordingly.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.pendingOperations:
      title: pendingOperations
      type: object
      properties:
        pendingContentUpdate:
          $ref: '#/components/schemas/microsoft.graph.pendingContentUpdate'
      additionalProperties:
        type: object
    microsoft.graph.photo:
      title: photo
      type: object
      properties:
        cameraMake:
          type: string
          description: Camera manufacturer. Read-only.
          nullable: true
        cameraModel:
          type: string
          description: Camera model. Read-only.
          nullable: true
        exposureDenominator:
          type: number
          description: The denominator for the exposure time fraction from the camera. Read-only.
          format: double
          nullable: true
        exposureNumerator:
          type: number
          description: The numerator for the exposure time fraction from the camera. Read-only.
          format: double
          nullable: true
        fNumber:
          type: number
          description: The F-stop value from the camera. Read-only.
          format: double
          nullable: true
        focalLength:
          type: number
          description: The focal length from the camera. Read-only.
          format: double
          nullable: true
        iso:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The ISO value from the camera. Read-only.
          format: int32
          nullable: true
        orientation:
          maximum: 32767
          minimum: -32768
          type: integer
          description: The orientation value from the camera. Writable on OneDrive Personal.
          format: int16
          nullable: true
        takenDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The date and time the photo was taken in UTC time. Read-only.
          format: date-time
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.publicationFacet:
      title: publicationFacet
      type: object
      properties:
        level:
          type: string
          description: The state of publication for this document. Either published or checkout. Read-only.
          nullable: true
        versionId:
          type: string
          description: The unique identifier for the version that is visible to the current caller. Read-only.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.remoteItem:
      title: remoteItem
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/microsoft.graph.identitySet'
        createdDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time of item creation. Read-only.
          format: date-time
          nullable: true
        file:
          $ref: '#/components/schemas/microsoft.graph.file'
        fileSystemInfo:
          $ref: '#/components/schemas/microsoft.graph.fileSystemInfo'
        folder:
          $ref: '#/components/schemas/microsoft.graph.folder'
        id:
          type: string
          description: Unique identifier for the remote item in its drive. Read-only.
          nullable: true
        image:
          $ref: '#/components/schemas/microsoft.graph.image'
        lastModifiedBy:
          $ref: '#/components/schemas/microsoft.graph.identitySet'
        lastModifiedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time the item was last modified. Read-only.
          format: date-time
          nullable: true
        name:
          type: string
          description: Optional. Filename of the remote item. Read-only.
          nullable: true
        package:
          $ref: '#/components/schemas/microsoft.graph.package'
        parentReference:
          $ref: '#/components/schemas/microsoft.graph.itemReference'
        shared:
          $ref: '#/components/schemas/microsoft.graph.shared'
        sharepointIds:
          $ref: '#/components/schemas/microsoft.graph.sharepointIds'
        size:
          type: integer
          description: Size of the remote item. Read-only.
          format: int64
          nullable: true
        specialFolder:
          $ref: '#/components/schemas/microsoft.graph.specialFolder'
        video:
          $ref: '#/components/schemas/microsoft.graph.video'
        webDavUrl:
          type: string
          description: DAV compatible URL for the item.
          nullable: true
        webUrl:
          type: string
          description: URL that displays the resource in the browser. Read-only.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.searchResult:
      title: searchResult
      type: object
      properties:
        onClickTelemetryUrl:
          type: string
          description: A callback URL that can be used to record telemetry information. The application should issue a GET on this URL if the user interacts with this item to improve the quality of results.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.shared:
      title: shared
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/microsoft.graph.identitySet'
        scope:
          type: string
          description: 'Indicates the scope of how the item is shared: anonymous, organization, or users. Read-only.'
          nullable: true
        sharedBy:
          $ref: '#/components/schemas/microsoft.graph.identitySet'
        sharedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The UTC date and time when the item was shared. Read-only.
          format: date-time
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.driveItemSource:
      title: driveItemSource
      type: object
      properties:
        application:
          $ref: '#/components/schemas/microsoft.graph.driveItemSourceApplication'
        externalId:
          type: string
          description: The external identifier for the drive item from the source.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.specialFolder:
      title: specialFolder
      type: object
      properties:
        name:
          type: string
          description: The unique identifier for this item in the /drive/special collection
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.video:
      title: video
      type: object
      properties:
        audioBitsPerSample:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Number of audio bits per sample.
          format: int32
          nullable: true
        audioChannels:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Number of audio channels.
          format: int32
          nullable: true
        audioFormat:
          type: string
          description: 'Name of the audio format (AAC, MP3, etc.).'
          nullable: true
        audioSamplesPerSecond:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Number of audio samples per second.
          format: int32
          nullable: true
        bitrate:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Bit rate of the video in bits per second.
          format: int32
          nullable: true
        duration:
          type: integer
          description: Duration of the file in milliseconds.
          format: int64
          nullable: true
        fourCC:
          type: string
          description: '''Four character code'' name of the video format.'
          nullable: true
        frameRate:
          type: number
          description: Frame rate of the video.
          format: double
          nullable: true
        height:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'Height of the video, in pixels.'
          format: int32
          nullable: true
        width:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'Width of the video, in pixels.'
          format: int32
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.workbook:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbook
          type: object
          properties:
            application:
              $ref: '#/components/schemas/microsoft.graph.workbookApplication'
            comments:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookComment'
            functions:
              $ref: '#/components/schemas/microsoft.graph.workbookFunctions'
            names:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookNamedItem'
              description: Represents a collection of workbooks scoped named items (named ranges and constants). Read-only.
            operations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookOperation'
              description: 'The status of Workbook operations. Getting an operation collection is not supported, but you can get the status of a long-running operation if the Location header is returned in the response. Read-only. Nullable.'
            tables:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookTable'
              description: Represents a collection of tables associated with the workbook. Read-only.
            worksheets:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookWorksheet'
              description: Represents a collection of worksheets associated with the workbook. Read-only.
          additionalProperties:
            type: object
    microsoft.graph.thumbnailSet:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: thumbnailSet
          type: object
          properties:
            large:
              $ref: '#/components/schemas/microsoft.graph.thumbnail'
            medium:
              $ref: '#/components/schemas/microsoft.graph.thumbnail'
            small:
              $ref: '#/components/schemas/microsoft.graph.thumbnail'
            source:
              $ref: '#/components/schemas/microsoft.graph.thumbnail'
          additionalProperties:
            type: object
    microsoft.graph.driveItemVersion:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItemVersion'
        - title: driveItemVersion
          type: object
          properties:
            content:
              type: string
              format: base64url
              nullable: true
            size:
              type: integer
              description: Indicates the size of the content stream for this version of the item.
              format: int64
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.documentSetVersionItem:
      title: documentSetVersionItem
      type: object
      properties:
        itemId:
          type: string
          description: The unique identifier for the item.
          nullable: true
        title:
          type: string
          description: The title of the item.
          nullable: true
        versionId:
          type: string
          description: The version ID of the item.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.baseItemVersion:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: baseItemVersion
          type: object
          properties:
            lastModifiedBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time the version was last modified. Read-only.
              format: date-time
              nullable: true
            publication:
              $ref: '#/components/schemas/microsoft.graph.publicationFacet'
          additionalProperties:
            type: object
    microsoft.graph.longRunningOperation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: longRunningOperation
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            lastActionDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            resourceLocation:
              type: string
              nullable: true
            status:
              $ref: '#/components/schemas/microsoft.graph.longRunningOperationStatus'
            statusDetail:
              type: string
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.publicError:
      title: publicError
      type: object
      properties:
        code:
          type: string
          description: Represents the error code.
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.publicErrorDetail'
          description: Details of the error.
        innerError:
          $ref: '#/components/schemas/microsoft.graph.publicInnerError'
        message:
          type: string
          description: A non-localized message for the developer.
          nullable: true
        target:
          type: string
          description: The target of the error.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.onenoteEntityHierarchyModel:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntitySchemaObjectModel'
        - title: onenoteEntityHierarchyModel
          type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            displayName:
              type: string
              description: The name of the notebook.
              nullable: true
            lastModifiedBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
              format: date-time
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.notebookLinks:
      title: notebookLinks
      type: object
      properties:
        oneNoteClientUrl:
          $ref: '#/components/schemas/microsoft.graph.externalLink'
        oneNoteWebUrl:
          $ref: '#/components/schemas/microsoft.graph.externalLink'
      additionalProperties:
        type: object
    microsoft.graph.onenoteUserRole:
      title: onenoteUserRole
      enum:
        - None
        - Owner
        - Contributor
        - Reader
      type: string
    microsoft.graph.sectionLinks:
      title: sectionLinks
      type: object
      properties:
        oneNoteClientUrl:
          $ref: '#/components/schemas/microsoft.graph.externalLink'
        oneNoteWebUrl:
          $ref: '#/components/schemas/microsoft.graph.externalLink'
      additionalProperties:
        type: object
    microsoft.graph.onenoteEntitySchemaObjectModel:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntityBaseModel'
        - title: onenoteEntitySchemaObjectModel
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
              format: date-time
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.pageLinks:
      title: pageLinks
      type: object
      properties:
        oneNoteClientUrl:
          $ref: '#/components/schemas/microsoft.graph.externalLink'
        oneNoteWebUrl:
          $ref: '#/components/schemas/microsoft.graph.externalLink'
      additionalProperties:
        type: object
    microsoft.graph.operation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: operation
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The start time of the operation.
              format: date-time
              nullable: true
            lastActionDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The time of the last action of the operation.
              format: date-time
              nullable: true
            status:
              $ref: '#/components/schemas/microsoft.graph.operationStatus'
          additionalProperties:
            type: object
    microsoft.graph.onenoteOperationError:
      title: onenoteOperationError
      type: object
      properties:
        code:
          type: string
          description: The error code.
          nullable: true
        message:
          type: string
          description: The error message.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.onenoteEntityBaseModel:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: onenoteEntityBaseModel
          type: object
          properties:
            self:
              type: string
              description: The endpoint where you can get details about the page. Read-only.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.webPart:
      title: webPart
      type: object
      properties:
        data:
          $ref: '#/components/schemas/microsoft.graph.sitePageData'
        type:
          type: string
          description: A unique identifier specifying the webPart type. Read-only.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.sharePointIdentitySet:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.identitySet'
        - title: sharePointIdentitySet
          type: object
          properties:
            group:
              $ref: '#/components/schemas/microsoft.graph.identity'
            siteGroup:
              $ref: '#/components/schemas/microsoft.graph.sharePointIdentity'
            siteUser:
              $ref: '#/components/schemas/microsoft.graph.sharePointIdentity'
          additionalProperties:
            type: object
    microsoft.graph.sharingInvitation:
      title: sharingInvitation
      type: object
      properties:
        email:
          type: string
          description: The email address provided for the recipient of the sharing invitation. Read-only.
          nullable: true
        invitedBy:
          $ref: '#/components/schemas/microsoft.graph.identitySet'
        redeemedBy:
          type: string
          nullable: true
        signInRequired:
          type: boolean
          description: If true the recipient of the invitation needs to sign in in order to access the shared item. Read-only.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.sharingLink:
      title: sharingLink
      type: object
      properties:
        application:
          $ref: '#/components/schemas/microsoft.graph.identity'
        configuratorUrl:
          type: string
          nullable: true
        preventsDownload:
          type: boolean
          description: 'If true then the user can only use this link to view the item on the web, and cannot use it to download the contents of the item. Only for OneDrive for Business and SharePoint.'
          nullable: true
        scope:
          type: string
          description: 'The scope of the link represented by this permission. Value anonymous indicates the link is usable by anyone, organization indicates the link is only usable for users signed into the same tenant.'
          nullable: true
        type:
          type: string
          description: The type of the link created.
          nullable: true
        webHtml:
          type: string
          description: 'For embed links, this property contains the HTML code for an <iframe> element that will embed the item in a webpage.'
          nullable: true
        webUrl:
          type: string
          description: A URL that opens the item in the browser on the OneDrive website.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.termStore.termGroupScope:
      title: termGroupScope
      enum:
        - global
        - system
        - siteCollection
      type: string
    microsoft.graph.termStore.localizedName:
      title: localizedName
      type: object
      properties:
        languageTag:
          type: string
          description: The language tag for the label.
          nullable: true
        name:
          type: string
          description: The name in the localized language.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.keyValue:
      title: keyValue
      type: object
      properties:
        key:
          type: string
          description: 'Contains the name of the field that a value is associated with. When a sign in or domain hint is included in the sign-in request, corresponding fields are included as key-value pairs. Possible keys: Login hint present, Domain hint present.'
          nullable: true
        value:
          type: string
          description: Contains the corresponding value for the specified key. The value is true if a sign in hint was included in the sign-in request; otherwise false. The value is true if a domain hint was included in the sign-in request; otherwise false.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.termStore.localizedDescription:
      title: localizedDescription
      type: object
      properties:
        description:
          type: string
          description: The description in the localized language.
          nullable: true
        languageTag:
          type: string
          description: The language tag for the label.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.termStore.localizedLabel:
      title: localizedLabel
      type: object
      properties:
        isDefault:
          type: boolean
          description: Indicates whether the label is the default label.
          nullable: true
        languageTag:
          type: string
          description: The language tag for the label.
          nullable: true
        name:
          type: string
          description: The name of the label.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.termStore.relationType:
      title: relationType
      enum:
        - pin
        - reuse
      type: string
    microsoft.graph.itemActionStat:
      title: itemActionStat
      type: object
      properties:
        actionCount:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The number of times the action took place. Read-only.
          format: int32
          nullable: true
        actorCount:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The number of distinct actors that performed the action. Read-only.
          format: int32
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.incompleteData:
      title: incompleteData
      type: object
      properties:
        missingDataBeforeDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The service does not have source data before the specified time.
          format: date-time
          nullable: true
        wasThrottled:
          type: boolean
          description: Some data was not recorded due to excessive activity.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.itemActivity:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: itemActivity
          type: object
          properties:
            access:
              $ref: '#/components/schemas/microsoft.graph.accessAction'
            activityDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Details about when the activity took place. Read-only.
              format: date-time
              nullable: true
            actor:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            driveItem:
              $ref: '#/components/schemas/microsoft.graph.driveItem'
          additionalProperties:
            type: object
    microsoft.graph.onenotePatchActionType:
      title: onenotePatchActionType
      enum:
        - Replace
        - Append
        - Delete
        - Insert
        - Prepend
      type: string
    microsoft.graph.onenotePatchInsertPosition:
      title: onenotePatchInsertPosition
      enum:
        - After
        - Before
      type: string
    microsoft.graph.onenotePagePreviewLinks:
      title: onenotePagePreviewLinks
      type: object
      properties:
        previewImageUrl:
          $ref: '#/components/schemas/microsoft.graph.externalLink'
      additionalProperties:
        type: object
    microsoft.graph.recentNotebookLinks:
      title: recentNotebookLinks
      type: object
      properties:
        oneNoteClientUrl:
          $ref: '#/components/schemas/microsoft.graph.externalLink'
        oneNoteWebUrl:
          $ref: '#/components/schemas/microsoft.graph.externalLink'
      additionalProperties:
        type: object
    microsoft.graph.onenoteSourceService:
      title: onenoteSourceService
      enum:
        - Unknown
        - OneDrive
        - OneDriveForBusiness
        - OnPremOneDriveForBusiness
      type: string
    microsoft.graph.siteCollectionResponse:
      title: Collection of site
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.site'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.ODataErrors.ODataError:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/microsoft.graph.ODataErrors.MainError'
      additionalProperties:
        type: object
    microsoft.graph.columnDefinitionCollectionResponse:
      title: Collection of columnDefinition
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.contentTypeCollectionResponse:
      title: Collection of contentType
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.contentType'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.columnLinkCollectionResponse:
      title: Collection of columnLink
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.columnLink'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.driveCollectionResponse:
      title: Collection of drive
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.drive'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.baseItemCollectionResponse:
      title: Collection of baseItem
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.baseItem'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.listCollectionResponse:
      title: Collection of list
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.list'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.itemActivityOLDCollectionResponse:
      title: Collection of itemActivityOLD
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.itemActivityOLD'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.listItemCollectionResponse:
      title: Collection of listItem
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.listItem'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.documentSetVersionCollectionResponse:
      title: Collection of documentSetVersion
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.listItemVersionCollectionResponse:
      title: Collection of listItemVersion
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.richLongRunningOperationCollectionResponse:
      title: Collection of richLongRunningOperation
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.subscriptionCollectionResponse:
      title: Collection of subscription
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.subscription'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.notebookCollectionResponse:
      title: Collection of notebook
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.notebook'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.sectionGroupCollectionResponse:
      title: Collection of sectionGroup
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.onenoteSectionCollectionResponse:
      title: Collection of onenoteSection
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.onenotePageCollectionResponse:
      title: Collection of onenotePage
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.onenotePage'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.onenoteOperationCollectionResponse:
      title: Collection of onenoteOperation
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.onenoteResourceCollectionResponse:
      title: Collection of onenoteResource
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.onenoteResource'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.sitePageCollectionResponse:
      title: Collection of sitePage
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.sitePage'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.permissionCollectionResponse:
      title: Collection of permission
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.permission'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.termStore.groupCollectionResponse:
      title: Collection of group
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.termStore.group'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.termStore.setCollectionResponse:
      title: Collection of set
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.termStore.set'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.termStore.termCollectionResponse:
      title: Collection of term
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.termStore.term'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.termStore.relationCollectionResponse:
      title: Collection of relation
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.displayNameLocalization:
      title: displayNameLocalization
      type: object
      properties:
        displayName:
          type: string
          description: 'If present, the value of this field contains the displayName string that has been set for the language present in the languageTag field.'
          nullable: true
        languageTag:
          type: string
          description: Provides the language culture-code and friendly name of the language that the displayName field has been provided in.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.identity:
      title: identity
      type: object
      properties:
        displayName:
          type: string
          description: The display name of the identity. This property is read-only.
          nullable: true
        id:
          type: string
          description: The identifier of the identity. This property is read-only.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.storagePlanInformation:
      title: storagePlanInformation
      type: object
      properties:
        upgradeAvailable:
          type: boolean
          description: Indicates if there are higher storage quota plans available. Read-only.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.directoryObject:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: directoryObject
          type: object
          properties:
            deletedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time when this object was deleted. Always null when the object hasn't been deleted.
              format: date-time
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.signInActivity:
      title: signInActivity
      type: object
      properties:
        lastNonInteractiveSignInDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The last non-interactive sign-in date for a specific user. You can use this field to calculate the last time a client signed in to the directory on behalf of a user. Because some users may use clients to access tenant resources rather than signing into your tenant directly, you can use the non-interactive sign-in date to along with lastSignInDateTime to identify inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is: ''2014-01-01T00:00:00Z''. Azure AD maintains non-interactive sign-ins going back to May 2020. For more information about using the value of this property, see Manage inactive user accounts in Azure AD.'
          format: date-time
          nullable: true
        lastNonInteractiveSignInRequestId:
          type: string
          description: Request identifier of the last non-interactive sign-in performed by this user.
          nullable: true
        lastSignInDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The last interactive sign-in date and time for a specific user. You can use this field to calculate the last time a user signed in to the directory with an interactive authentication method. This field can be used to build reports, such as inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is: ''2014-01-01T00:00:00Z''. Azure AD maintains interactive sign-ins going back to April 2020. For more information about using the value of this property, see Manage inactive user accounts in Azure AD.'
          format: date-time
          nullable: true
        lastSignInRequestId:
          type: string
          description: Request identifier of the last interactive sign-in performed by this user.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.assignedLicense:
      title: assignedLicense
      type: object
      properties:
        disabledPlans:
          type: array
          items:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          description: A collection of the unique identifiers for plans that have been disabled.
        skuId:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          description: The unique identifier for the SKU.
          format: uuid
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.assignedPlan:
      title: assignedPlan
      type: object
      properties:
        assignedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The date and time at which the plan was assigned; for example: 2013-01-02T19:32:30Z. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
          format: date-time
          nullable: true
        capabilityStatus:
          type: string
          description: 'Condition of the capability assignment. The possible values are Enabled, Warning, Suspended, Deleted, LockedOut.'
          nullable: true
        service:
          type: string
          description: 'The name of the service; for example, exchange.'
          nullable: true
        servicePlanId:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          description: 'A GUID that identifies the service plan. For a complete list of GUIDs and their equivalent friendly service names, see Product names and service plan identifiers for licensing.'
          format: uuid
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.customSecurityAttributeValue:
      title: customSecurityAttributeValue
      type: object
      additionalProperties:
        type: object
    microsoft.graph.deviceKey:
      title: deviceKey
      type: object
      properties:
        deviceId:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          format: uuid
          nullable: true
        keyMaterial:
          type: string
          format: base64url
          nullable: true
        keyType:
          type: string
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.employeeOrgData:
      title: employeeOrgData
      type: object
      properties:
        costCenter:
          type: string
          description: The cost center associated with the user. Returned only on $select. Supports $filter.
          nullable: true
        division:
          type: string
          description: The name of the division in which the user works. Returned only on $select. Supports $filter.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.objectIdentity:
      title: objectIdentity
      type: object
      properties:
        issuer:
          type: string
          description: 'Specifies the issuer of the identity, for example facebook.com.For local accounts (where signInType is not federated), this property is the local B2C tenant default domain name, for example contoso.onmicrosoft.com.For external users from other Azure AD organization, this will be the domain of the federated organization, for example contoso.com.Supports $filter. 512 character limit.'
          nullable: true
        issuerAssignedId:
          type: string
          description: 'Specifies the unique identifier assigned to the user by the issuer. The combination of issuer and issuerAssignedId must be unique within the organization. Represents the sign-in name for the user, when signInType is set to emailAddress or userName (also known as local accounts).When signInType is set to: emailAddress, (or a custom string that starts with emailAddress like emailAddress1) issuerAssignedId must be a valid email addressuserName, issuerAssignedId must be a valid local part of an email addressSupports $filter. 100 character limit.'
          nullable: true
        signInType:
          type: string
          description: 'Specifies the user sign-in types in your directory, such as emailAddress, userName, federated, or userPrincipalName. federated represents a unique identifier for a user from an issuer, that can be in any format chosen by the issuer. Setting or updating a userPrincipalName identity will update the value of the userPrincipalName property on the user object. The validations performed on the userPrincipalName property on the user object, for example, verified domains and acceptable characters, will be performed when setting or updating a userPrincipalName identity. Additional validation is enforced on issuerAssignedId when the sign-in type is set to emailAddress or userName. This property can also be set to any custom string.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.licenseAssignmentState:
      title: licenseAssignmentState
      type: object
      properties:
        assignedByGroup:
          type: string
          description: 'The id of the group that assigns this license. If the assignment is a direct-assigned license, this field will be Null. Read-Only.'
          nullable: true
        disabledPlans:
          type: array
          items:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
            nullable: true
          description: The service plans that are disabled in this assignment. Read-Only.
        error:
          type: string
          description: 'License assignment failure error. If the license is assigned successfully, this field will be Null. Read-Only. The possible values are CountViolation, MutuallyExclusiveViolation, DependencyViolation, ProhibitedInUsageLocationViolation, UniquenessViolation, and Other. For more information on how to identify and resolve license assignment errors see here.'
          nullable: true
        lastUpdatedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The timestamp when the state of the license assignment was last updated.
          format: date-time
          nullable: true
        skuId:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          description: The unique identifier for the SKU. Read-Only.
          format: uuid
          nullable: true
        state:
          type: string
          description: 'Indicate the current state of this assignment. Read-Only. The possible values are Active, ActiveWithError, Disabled, and Error.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.onPremisesExtensionAttributes:
      title: onPremisesExtensionAttributes
      type: object
      properties:
        extensionAttribute1:
          type: string
          description: First customizable extension attribute.
          nullable: true
        extensionAttribute10:
          type: string
          description: Tenth customizable extension attribute.
          nullable: true
        extensionAttribute11:
          type: string
          description: Eleventh customizable extension attribute.
          nullable: true
        extensionAttribute12:
          type: string
          description: Twelfth customizable extension attribute.
          nullable: true
        extensionAttribute13:
          type: string
          description: Thirteenth customizable extension attribute.
          nullable: true
        extensionAttribute14:
          type: string
          description: Fourteenth customizable extension attribute.
          nullable: true
        extensionAttribute15:
          type: string
          description: Fifteenth customizable extension attribute.
          nullable: true
        extensionAttribute2:
          type: string
          description: Second customizable extension attribute.
          nullable: true
        extensionAttribute3:
          type: string
          description: Third customizable extension attribute.
          nullable: true
        extensionAttribute4:
          type: string
          description: Fourth customizable extension attribute.
          nullable: true
        extensionAttribute5:
          type: string
          description: Fifth customizable extension attribute.
          nullable: true
        extensionAttribute6:
          type: string
          description: Sixth customizable extension attribute.
          nullable: true
        extensionAttribute7:
          type: string
          description: Seventh customizable extension attribute.
          nullable: true
        extensionAttribute8:
          type: string
          description: Eighth customizable extension attribute.
          nullable: true
        extensionAttribute9:
          type: string
          description: Ninth customizable extension attribute.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.onPremisesProvisioningError:
      title: onPremisesProvisioningError
      type: object
      properties:
        category:
          type: string
          description: 'Category of the provisioning error. Note: Currently, there is only one possible value. Possible value: PropertyConflict - indicates a property value is not unique. Other objects contain the same value for the property.'
          nullable: true
        occurredDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The date and time at which the error occurred.
          format: date-time
          nullable: true
        propertyCausingError:
          type: string
          description: 'Name of the directory property causing the error. Current possible values: UserPrincipalName or ProxyAddress'
          nullable: true
        value:
          type: string
          description: Value of the property causing the error.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.passwordProfile:
      title: passwordProfile
      type: object
      properties:
        forceChangePasswordNextSignIn:
          type: boolean
          description: 'true if the user must change her password on the next login; otherwise false. If not set, default is false. NOTE:  For Azure B2C tenants, set to false and instead use custom policies and user flows to force password reset at first sign in. See Force password reset at first logon.'
          nullable: true
        forceChangePasswordNextSignInWithMfa:
          type: boolean
          description: 'If true, at next sign-in, the user must perform a multi-factor authentication (MFA) before being forced to change their password. The behavior is identical to forceChangePasswordNextSignIn except that the user is required to first perform a multi-factor authentication before password change. After a password change, this property will be automatically reset to false. If not set, default is false.'
          nullable: true
        password:
          type: string
          description: 'The password for the user. This property is required when a user is created. It can be updated, but the user will be required to change the password on the next login. The password must satisfy minimum requirements as specified by the user’s passwordPolicies property. By default, a strong password is required.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.provisionedPlan:
      title: provisionedPlan
      type: object
      properties:
        capabilityStatus:
          type: string
          description: 'For example, ''Enabled''.'
          nullable: true
        provisioningStatus:
          type: string
          description: 'For example, ''Success''.'
          nullable: true
        service:
          type: string
          description: 'The name of the service; for example, ''AccessControlS2S'''
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.mailboxSettings:
      title: mailboxSettings
      type: object
      properties:
        archiveFolder:
          type: string
          description: Folder ID of an archive folder for the user. Read only.
          nullable: true
        automaticRepliesSetting:
          $ref: '#/components/schemas/microsoft.graph.automaticRepliesSetting'
        dateFormat:
          type: string
          description: The date format for the user's mailbox.
          nullable: true
        delegateMeetingMessageDeliveryOptions:
          $ref: '#/components/schemas/microsoft.graph.delegateMeetingMessageDeliveryOptions'
        language:
          $ref: '#/components/schemas/microsoft.graph.localeInfo'
        timeFormat:
          type: string
          description: The time format for the user's mailbox.
          nullable: true
        timeZone:
          type: string
          description: The default time zone for the user's mailbox.
          nullable: true
        userPurpose:
          $ref: '#/components/schemas/microsoft.graph.userPurpose'
        userPurposeV2:
          $ref: '#/components/schemas/microsoft.graph.mailboxRecipientType'
        workingHours:
          $ref: '#/components/schemas/microsoft.graph.workingHours'
      additionalProperties:
        type: object
    microsoft.graph.userPrint:
      title: userPrint
      type: object
      properties:
        recentPrinterShares:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printerShare'
      additionalProperties:
        type: object
    microsoft.graph.userAnalytics:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: userAnalytics
          type: object
          properties:
            settings:
              $ref: '#/components/schemas/microsoft.graph.settings'
            activityStatistics:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.activityStatistics'
              description: The collection of work activities that a user spent time on during and outside of working hours. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.cloudPC:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: cloudPC
          type: object
          properties:
            aadDeviceId:
              type: string
              description: The Azure Active Directory (Azure AD) device ID of the Cloud PC.
              nullable: true
            displayName:
              type: string
              description: The display name of the Cloud PC.
              nullable: true
            gracePeriodEndDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the grace period ends and reprovisioning/deprovisioning happens. Required only if the status is inGracePeriod. The timestamp is shown in ISO 8601 format and Coordinated Universal Time (UTC). For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.'
              format: date-time
              nullable: true
            imageDisplayName:
              type: string
              description: Name of the OS image that's on the Cloud PC.
              nullable: true
            lastLoginResult:
              $ref: '#/components/schemas/microsoft.graph.cloudPcLoginResult'
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The last modified date and time of the Cloud PC. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.'
              format: date-time
            lastRemoteActionResult:
              $ref: '#/components/schemas/microsoft.graph.cloudPcRemoteActionResult'
            managedDeviceId:
              type: string
              description: The Intune device ID of the Cloud PC.
              nullable: true
            managedDeviceName:
              type: string
              description: The Intune device name of the Cloud PC.
              nullable: true
            onPremisesConnectionName:
              type: string
              description: The Azure network connection that is applied during the provisioning of Cloud PCs.
              nullable: true
            osVersion:
              $ref: '#/components/schemas/microsoft.graph.cloudPcOperatingSystem'
            provisioningPolicyId:
              type: string
              description: The provisioning policy ID of the Cloud PC.
              nullable: true
            provisioningPolicyName:
              type: string
              description: The provisioning policy that is applied during the provisioning of Cloud PCs.
              nullable: true
            servicePlanId:
              type: string
              description: The service plan ID of the Cloud PC.
              nullable: true
            servicePlanName:
              type: string
              description: The service plan name of the Cloud PC.
              nullable: true
            servicePlanType:
              $ref: '#/components/schemas/microsoft.graph.cloudPcServicePlanType'
            status:
              $ref: '#/components/schemas/microsoft.graph.cloudPcStatus'
            statusDetails:
              $ref: '#/components/schemas/microsoft.graph.cloudPcStatusDetails'
            userAccountType:
              $ref: '#/components/schemas/microsoft.graph.cloudPcUserAccountType'
            userPrincipalName:
              type: string
              description: The user principal name (UPN) of the user assigned to the Cloud PC.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.usageRight:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: usageRight
          type: object
          properties:
            catalogId:
              type: string
              description: Product id corresponding to the usage right.
            serviceIdentifier:
              type: string
              description: Identifier of the service corresponding to the usage right.
            state:
              $ref: '#/components/schemas/microsoft.graph.usageRightState'
          additionalProperties:
            type: object
    microsoft.graph.informationProtection:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: informationProtection
          type: object
          properties:
            bitlocker:
              $ref: '#/components/schemas/microsoft.graph.bitlocker'
            dataLossPreventionPolicies:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.dataLossPreventionPolicy'
            sensitivityLabels:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sensitivityLabel'
            sensitivityPolicySettings:
              $ref: '#/components/schemas/microsoft.graph.sensitivityPolicySettings'
            policy:
              $ref: '#/components/schemas/microsoft.graph.informationProtectionPolicy'
            threatAssessmentRequests:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.threatAssessmentRequest'
          additionalProperties:
            type: object
    microsoft.graph.appRoleAssignment:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: appRoleAssignment
          type: object
          properties:
            appRoleId:
              pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
              description: 'The identifier (id) for the app role which is assigned to the principal. This app role must be exposed in the appRoles property on the resource application''s service principal (resourceId). If the resource application has not declared any app roles, a default app role ID of 00000000-0000-0000-0000-000000000000 can be specified to signal that the principal is assigned to the resource app without any specific app roles. Required on create.'
              format: uuid
            creationTimestamp:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The time when the app role assignment was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
              format: date-time
              nullable: true
            principalDisplayName:
              type: string
              description: 'The display name of the user, group, or service principal that was granted the app role assignment. Read-only. Supports $filter (eq and startswith).'
              nullable: true
            principalId:
              pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
              description: 'The unique identifier (id) for the user, group, or service principal being granted the app role. Required on create.'
              format: uuid
              nullable: true
            principalType:
              type: string
              description: 'The type of the assigned principal. This can either be User, Group, or ServicePrincipal. Read-only.'
              nullable: true
            resourceDisplayName:
              type: string
              description: The display name of the resource app's service principal to which the assignment is made.
              nullable: true
            resourceId:
              pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
              description: The unique identifier (id) for the resource service principal for which the assignment is made. Required on create. Supports $filter (eq only).
              format: uuid
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.licenseDetails:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: licenseDetails
          type: object
          properties:
            servicePlans:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.servicePlanInfo'
              description: 'Information about the service plans assigned with the license. Read-only, Not nullable'
            skuId:
              pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
              description: Unique identifier (GUID) for the service SKU. Equal to the skuId property on the related SubscribedSku object. Read-only
              format: uuid
              nullable: true
            skuPartNumber:
              type: string
              description: 'Unique SKU display name. Equal to the skuPartNumber on the related SubscribedSku object; for example: ''AAD_Premium''. Read-only'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.oAuth2PermissionGrant:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: oAuth2PermissionGrant
          type: object
          properties:
            clientId:
              type: string
              description: The id of the client service principal for the application which is authorized to act on behalf of a signed-in user when accessing an API. Required. Supports $filter (eq only).
            consentType:
              type: string
              description: 'Indicates whether authorization is granted for the client application to impersonate all users or only a specific user. AllPrincipals indicates authorization to impersonate all users. Principal indicates authorization to impersonate a specific user. Consent on behalf of all users can be granted by an administrator. Non-admin users may be authorized to consent on behalf of themselves in some cases, for some delegated permissions. Required. Supports $filter (eq only).'
              nullable: true
            expiryTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Currently, the end time value is ignored, but a value is required when creating an oAuth2PermissionGrant. Required.'
              format: date-time
              nullable: true
            principalId:
              type: string
              description: 'The id of the user on behalf of whom the client is authorized to access the resource, when consentType is Principal. If consentType is AllPrincipals this value is null. Required when consentType is Principal.'
              nullable: true
            resourceId:
              type: string
              description: The id of the resource service principal to which access is authorized. This identifies the API which the client is authorized to attempt to call on behalf of a signed-in user.
            scope:
              type: string
              description: 'A space-separated list of the claim values for delegated permissions which should be included in access tokens for the resource application (the API). For example, openid User.Read GroupMember.Read.All. Each claim value should match the value field of one of the delegated permissions defined by the API, listed in the publishedPermissionScopes property of the resource service principal.'
              nullable: true
            startTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Currently, the start time value is ignored, but a value is required when creating an oAuth2PermissionGrant. Required.'
              format: date-time
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.scopedRoleMembership:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: scopedRoleMembership
          type: object
          properties:
            administrativeUnitId:
              type: string
              description: Unique identifier for the administrative unit that the directory role is scoped to
            roleId:
              type: string
              description: Unique identifier for the directory role that the member is in.
            roleMemberInfo:
              $ref: '#/components/schemas/microsoft.graph.identity'
          additionalProperties:
            type: object
    microsoft.graph.calendar:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: calendar
          type: object
          properties:
            allowedOnlineMeetingProviders:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onlineMeetingProviderType'
              description: 'Represent the online meeting service providers that can be used to create online meetings in this calendar. Possible values are: unknown, skypeForBusiness, skypeForConsumer, teamsForBusiness.'
            calendarGroupId:
              type: string
              description: 'The calendarGroup in which to create the calendar. If the user has never explicitly set a group for the calendar, this property is  null.'
              nullable: true
            canEdit:
              type: boolean
              description: 'true if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar. This property is also true for a user who has been shared a calendar and granted write access, through an Outlook client or the corresponding calendarPermission resource. Read-only.'
              nullable: true
            canShare:
              type: boolean
              description: 'true if the user has the permission to share the calendar, false otherwise. Only the user who created the calendar can share it. Read-only.'
              nullable: true
            canViewPrivateItems:
              type: boolean
              description: 'true if the user can read calendar items that have been marked private, false otherwise. This property is set through an Outlook client or the corresponding calendarPermission resource. Read-only.'
              nullable: true
            changeKey:
              type: string
              description: 'Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.'
              nullable: true
            color:
              $ref: '#/components/schemas/microsoft.graph.calendarColor'
            defaultOnlineMeetingProvider:
              $ref: '#/components/schemas/microsoft.graph.onlineMeetingProviderType'
            hexColor:
              type: string
              description: 'The calendar color, expressed in a hex color code of three hexadecimal values, each ranging from 00 to FF and representing the red, green, or blue components of the color in the RGB color space. If the user has never explicitly set a color for the calendar, this property is  empty.'
              nullable: true
            isDefaultCalendar:
              type: boolean
              description: 'true if this is the default calendar where new events are created by default, false otherwise.'
              nullable: true
            isRemovable:
              type: boolean
              description: Indicates whether this user calendar can be deleted from the user mailbox.
              nullable: true
            isShared:
              type: boolean
              description: 'true if the user has shared the calendar with other users, false otherwise. Since only the user who created the calendar can share it, isShared and isSharedWithMe cannot be true for the same user. This property is set when sharing is initiated in an Outlook client, and can be reset when the sharing is cancelled through the client or the corresponding calendarPermission resource. Read-only.'
              nullable: true
            isSharedWithMe:
              type: boolean
              description: 'true if the user has been shared this calendar, false otherwise. This property is always false for a calendar owner. This property is set when sharing is initiated in an Outlook client, and can be reset when the sharing is cancelled through the client or the corresponding calendarPermission resource. Read-only.'
              nullable: true
            isTallyingResponses:
              type: boolean
              description: Indicates whether this user calendar supports tracking of meeting responses. Only meeting invites sent from users' primary calendars support tracking of meeting responses.
              nullable: true
            name:
              type: string
              description: The calendar name.
              nullable: true
            owner:
              $ref: '#/components/schemas/microsoft.graph.emailAddress'
            calendarPermissions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.calendarPermission'
              description: The permissions of the users with whom the calendar is shared.
            calendarView:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.event'
              description: The calendar view for the calendar. Navigation property. Read-only.
            events:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.event'
              description: The events in the calendar. Navigation property. Read-only.
            multiValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty'
              description: The collection of multi-value extended properties defined for the calendar. Read-only. Nullable.
            singleValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty'
              description: The collection of single-value extended properties defined for the calendar. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.calendarGroup:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: calendarGroup
          type: object
          properties:
            changeKey:
              type: string
              description: 'Identifies the version of the calendar group. Every time the calendar group is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.'
              nullable: true
            classId:
              pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
              description: The class identifier. Read-only.
              format: uuid
              nullable: true
            name:
              type: string
              description: The group name.
              nullable: true
            calendars:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.calendar'
              description: The calendars in the calendar group. Navigation property. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.event:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.outlookItem'
        - title: event
          type: object
          properties:
            allowNewTimeProposals:
              type: boolean
              description: true if the meeting organizer allows invitees to propose a new time when responding; otherwise false. Optional. Default is true.
              nullable: true
            attendees:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.attendee'
              description: The collection of attendees for the event.
            body:
              $ref: '#/components/schemas/microsoft.graph.itemBody'
            bodyPreview:
              type: string
              description: The preview of the message associated with the event. It is in text format.
              nullable: true
            cancelledOccurrences:
              type: array
              items:
                type: string
                nullable: true
              description: 'Contains occurrenceId property values of cancelled instances in a recurring series, if the event is the series master. Instances in a recurring series that are cancelled are called cancelledOccurences.Returned only on $select in a Get operation which specifies the id of a series master event (that is, the seriesMasterId property value).'
            end:
              $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
            hasAttachments:
              type: boolean
              description: Set to true if the event has attachments.
              nullable: true
            hideAttendees:
              type: boolean
              description: 'When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. Default is false.'
              nullable: true
            importance:
              $ref: '#/components/schemas/microsoft.graph.importance'
            isAllDay:
              type: boolean
              nullable: true
            isCancelled:
              type: boolean
              nullable: true
            isDraft:
              type: boolean
              nullable: true
            isOnlineMeeting:
              type: boolean
              nullable: true
            isOrganizer:
              type: boolean
              nullable: true
            isReminderOn:
              type: boolean
              nullable: true
            location:
              $ref: '#/components/schemas/microsoft.graph.location'
            locations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.location'
            occurrenceId:
              type: string
              nullable: true
            onlineMeeting:
              $ref: '#/components/schemas/microsoft.graph.onlineMeetingInfo'
            onlineMeetingProvider:
              $ref: '#/components/schemas/microsoft.graph.onlineMeetingProviderType'
            onlineMeetingUrl:
              type: string
              nullable: true
            organizer:
              $ref: '#/components/schemas/microsoft.graph.recipient'
            originalEndTimeZone:
              type: string
              nullable: true
            originalStart:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            originalStartTimeZone:
              type: string
              nullable: true
            recurrence:
              $ref: '#/components/schemas/microsoft.graph.patternedRecurrence'
            reminderMinutesBeforeStart:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              format: int32
              nullable: true
            responseRequested:
              type: boolean
              nullable: true
            responseStatus:
              $ref: '#/components/schemas/microsoft.graph.responseStatus'
            sensitivity:
              $ref: '#/components/schemas/microsoft.graph.sensitivity'
            seriesMasterId:
              type: string
              nullable: true
            showAs:
              $ref: '#/components/schemas/microsoft.graph.freeBusyStatus'
            start:
              $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
            subject:
              type: string
              nullable: true
            transactionId:
              type: string
              nullable: true
            type:
              $ref: '#/components/schemas/microsoft.graph.eventType'
            uid:
              type: string
              nullable: true
            webLink:
              type: string
              nullable: true
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.attachment'
              description: 'The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.'
            calendar:
              $ref: '#/components/schemas/microsoft.graph.calendar'
            exceptionOccurrences:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.event'
            extensions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.extension'
              description: The collection of open extensions defined for the event. Nullable.
            instances:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.event'
              description: 'The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions that have been modified, but does not include occurrences that have been cancelled from the series. Navigation property. Read-only. Nullable.'
            multiValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty'
              description: The collection of multi-value extended properties defined for the event. Read-only. Nullable.
            singleValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty'
              description: The collection of single-value extended properties defined for the event. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.contactFolder:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: contactFolder
          type: object
          properties:
            displayName:
              type: string
              description: The folder's display name.
              nullable: true
            parentFolderId:
              type: string
              description: The ID of the folder's parent folder.
              nullable: true
            wellKnownName:
              type: string
              description: The name of the folder if the folder is a recognized folder. Currently contacts is the only recognized contacts folder.
              nullable: true
            childFolders:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.contactFolder'
              description: The collection of child folders in the folder. Navigation property. Read-only. Nullable.
            contacts:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.contact'
              description: The contacts in the folder. Navigation property. Read-only. Nullable.
            multiValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty'
              description: The collection of multi-value extended properties defined for the contactFolder. Read-only. Nullable.
            singleValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty'
              description: The collection of single-value extended properties defined for the contactFolder. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.contact:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.outlookItem'
        - title: contact
          type: object
          properties:
            assistantName:
              type: string
              description: The name of the contact's assistant.
              nullable: true
            birthday:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The contact''s birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            children:
              type: array
              items:
                type: string
                nullable: true
              description: The names of the contact's children.
            companyName:
              type: string
              description: The name of the contact's company.
              nullable: true
            department:
              type: string
              description: The contact's department.
              nullable: true
            displayName:
              type: string
              description: 'The contact''s display name. You can specify the display name in a create or update operation. Note that later updates to other properties may cause an automatically generated value to overwrite the displayName value you have specified. To preserve a pre-existing value, always include it as displayName in an update operation.'
              nullable: true
            emailAddresses:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.typedEmailAddress'
              description: The contact's email addresses.
            fileAs:
              type: string
              description: The name the contact is filed under.
              nullable: true
            flag:
              $ref: '#/components/schemas/microsoft.graph.followupFlag'
            gender:
              type: string
              description: The contact's gender.
              nullable: true
            generation:
              type: string
              description: The contact's generation.
              nullable: true
            givenName:
              type: string
              description: The contact's given name.
              nullable: true
            imAddresses:
              type: array
              items:
                type: string
                nullable: true
            initials:
              type: string
              nullable: true
            isFavorite:
              type: boolean
              nullable: true
            jobTitle:
              type: string
              nullable: true
            manager:
              type: string
              nullable: true
            middleName:
              type: string
              nullable: true
            nickName:
              type: string
              nullable: true
            officeLocation:
              type: string
              nullable: true
            parentFolderId:
              type: string
              nullable: true
            personalNotes:
              type: string
              nullable: true
            phones:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.phone'
            postalAddresses:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.physicalAddress'
            profession:
              type: string
              nullable: true
            spouseName:
              type: string
              nullable: true
            surname:
              type: string
              nullable: true
            title:
              type: string
              nullable: true
            websites:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.website'
            weddingAnniversary:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              format: date
              nullable: true
            yomiCompanyName:
              type: string
              nullable: true
            yomiGivenName:
              type: string
              nullable: true
            yomiSurname:
              type: string
              nullable: true
            extensions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.extension'
              description: The collection of open extensions defined for the contact. Nullable.
            multiValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty'
              description: The collection of multi-value extended properties defined for the contact. Read-only. Nullable.
            photo:
              $ref: '#/components/schemas/microsoft.graph.profilePhoto'
            singleValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty'
              description: The collection of single-value extended properties defined for the contact. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.inferenceClassification:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: inferenceClassification
          type: object
          properties:
            overrides:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.inferenceClassificationOverride'
              description: 'A set of overrides for a user to always classify messages from specific senders in certain ways: focused, or other. Read-only. Nullable.'
          additionalProperties:
            type: object
    microsoft.graph.group:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.directoryObject'
        - title: group
          type: object
          properties:
            assignedLabels:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.assignedLabel'
              description: 'The list of sensitivity label pairs (label ID, label name) associated with a Microsoft 365 group. Returned only on $select.'
            assignedLicenses:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.assignedLicense'
              description: The licenses that are assigned to the group. Returned only on $select. Supports $filter (eq). Read-only.
            classification:
              type: string
              description: 'Describes a classification for the group (such as low, medium or high business impact). Valid values for this property are defined by creating a ClassificationList setting value, based on the template definition.Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith).'
              nullable: true
            createdByAppId:
              type: string
              description: 'App ID of the app used to create the group. Can be null for some groups. Returned by default. Read-only. Supports $filter (eq, ne, not, in, startsWith).'
              nullable: true
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Timestamp of when the group was created. The value cannot be modified and is automatically populated when the group is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.'
              format: date-time
              nullable: true
            description:
              type: string
              description: 'An optional description for the group. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith) and $search.'
              nullable: true
            displayName:
              type: string
              description: 'The display name for the group. Required. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderBy.'
              nullable: true
            expirationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Timestamp of when the group is set to expire. The value cannot be modified and is automatically populated when the group is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.'
              format: date-time
              nullable: true
            groupTypes:
              type: array
              items:
                type: string
              description: 'Specifies the group type and its membership. If the collection contains Unified, the group is a Microsoft 365 group; otherwise, it''s either a security group or distribution group. For details, see groups overview.If the collection includes DynamicMembership, the group has dynamic membership; otherwise, membership is static. Returned by default. Supports $filter (eq, not).'
            hasMembersWithLicenseErrors:
              type: boolean
              description: 'Indicates whether there are members in this group that have license errors from its group-based license assignment. This property is never returned on a GET operation. You can use it as a $filter argument to get groups that have members with license errors (that is, filter for this property being true).  Supports $filter (eq).'
              nullable: true
            infoCatalogs:
              type: array
              items:
                type: string
              description: 'Identifies the info segments assigned to the group. Returned by default. Supports $filter (eq, not, ge, le, startsWith).'
            isAssignableToRole:
              type: boolean
              description: 'Indicates whether this group can be assigned to an Azure Active Directory role. Optional. This property can only be set while creating the group and is immutable. If set to true, the securityEnabled property must also be set to true and the group cannot be a dynamic group (that is, groupTypes cannot contain DynamicMembership). Only callers in Global administrator and Privileged role administrator roles can set this property. The caller must be assigned the RoleManagement.ReadWrite.Directory permission to set this property or update the membership of such groups. For more, see Using a group to manage Azure AD role assignmentsReturned by default. Supports $filter (eq, ne, not).'
              nullable: true
            isManagementRestricted:
              type: boolean
              nullable: true
            licenseProcessingState:
              $ref: '#/components/schemas/microsoft.graph.licenseProcessingState'
            mail:
              type: string
              description: 'The SMTP address for the group, for example, ''serviceadmins@contoso.onmicrosoft.com''. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            mailEnabled:
              type: boolean
              description: 'Specifies whether the group is mail-enabled. Required. Returned by default. Supports $filter (eq, ne, not, and eq on null values).'
              nullable: true
            mailNickname:
              type: string
              description: 'The mail alias for the group, unique for Microsoft 365 groups in the organization. Maximum length is 64 characters. This property can contain only characters in the ASCII character set 0 - 127 except the following: @ () / [] '' ; : . <> , SPACE. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith).'
              nullable: true
            mdmAppId:
              type: string
              nullable: true
            membershipRule:
              type: string
              description: 'The rule that determines members for this group if the group is a dynamic group (groupTypes contains DynamicMembership). For more information about the syntax of the membership rule, see Membership Rules syntax. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith).'
              nullable: true
            membershipRuleProcessingState:
              type: string
              description: 'Indicates whether the dynamic membership processing is on or paused. Possible values are On or Paused. Returned by default. Supports $filter (eq, ne, not, in).'
              nullable: true
            onPremisesDomainName:
              type: string
              description: 'Contains the on-premises domain FQDN, also called dnsDomainName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect.Returned by default. Read-only.'
              nullable: true
            onPremisesLastSyncDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Indicates the last time at which the group was synced with the on-premises directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in).'
              format: date-time
              nullable: true
            onPremisesNetBiosName:
              type: string
              description: Contains the on-premises netBios name synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect.Returned by default. Read-only.
              nullable: true
            onPremisesProvisioningErrors:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onPremisesProvisioningError'
              description: 'Errors when using Microsoft synchronization product during provisioning. Returned by default. Supports $filter (eq, not).'
            onPremisesSamAccountName:
              type: string
              description: 'Contains the on-premises SAM account name synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect.Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith). Read-only.'
              nullable: true
            onPremisesSecurityIdentifier:
              type: string
              description: Contains the on-premises security identifier (SID) for the group that was synchronized from on-premises to the cloud. Returned by default. Supports $filter (eq including on null values). Read-only.
              nullable: true
            onPremisesSyncEnabled:
              type: boolean
              description: 'true if this group is synced from an on-premises directory; false if this group was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Returned by default. Read-only. Supports $filter (eq, ne, not, in, and eq on null values).'
              nullable: true
            organizationId:
              type: string
              nullable: true
            preferredDataLocation:
              type: string
              description: 'The preferred data location for the Microsoft 365 group. By default, the group inherits the group creator''s preferred data location. To set this property, the calling user must be assigned one of the following Azure AD roles:  Global Administrator  User Account Administrator Directory Writer  Exchange Administrator  SharePoint Administrator  For more information about this property, see OneDrive Online Multi-Geo. Nullable. Returned by default.'
              nullable: true
            preferredLanguage:
              type: string
              description: 'The preferred language for a Microsoft 365 group. Should follow ISO 639-1 Code; for example en-US. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).'
              nullable: true
            proxyAddresses:
              type: array
              items:
                type: string
              description: 'Email addresses for the group that direct to the same group mailbox. For example: [''SMTP: bob@contoso.com'', ''smtp: bob@sales.contoso.com'']. The any operator is required for filter expressions on multi-valued properties. Returned by default. Read-only. Not nullable. Supports $filter (eq, not, ge, le, startsWith, endsWith, and counting empty collections).'
            renewedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Timestamp of when the group was last renewed. This cannot be modified directly and is only updated via the renew service action. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.'
              format: date-time
              nullable: true
            resourceBehaviorOptions:
              type: array
              items:
                type: string
              description: 'Specifies the group behaviors that can be set for a Microsoft 365 group during creation. This can be set only as part of creation (POST). Possible values are AllowOnlyMembersToPost, HideGroupInOutlook, SubscribeNewGroupMembers, WelcomeEmailDisabled. For more information, see Set Microsoft 365 group behaviors and provisioning options.'
            resourceProvisioningOptions:
              type: array
              items:
                type: string
              description: 'Specifies the group resources that are provisioned as part of Microsoft 365 group creation, that are not normally part of default group creation. Possible value is Team. For more information, see Set Microsoft 365 group behaviors and provisioning options. Returned by default. Supports $filter (eq, not, startsWith.'
            securityEnabled:
              type: boolean
              description: 'Specifies whether the group is a security group. Required.Returned by default. Supports $filter (eq, ne, not, in).'
              nullable: true
            securityIdentifier:
              type: string
              description: 'Security identifier of the group, used in Windows scenarios. Returned by default.'
              nullable: true
            theme:
              type: string
              description: 'Specifies a Microsoft 365 group''s color theme. Possible values are Teal, Purple, Green, Blue, Pink, Orange or Red. Returned by default.'
              nullable: true
            visibility:
              type: string
              description: 'Specifies the group join policy and group content visibility for groups. Possible values are: Private, Public, or Hiddenmembership. Hiddenmembership can be set only for Microsoft 365 groups, when the groups are created. It can''t be updated later. Other values of visibility can be updated after group creation. If visibility value is not specified during group creation on Microsoft Graph, a security group is created as Private by default and Microsoft 365 group is Public. Groups assignable to roles are always Private. See group visibility options to learn more. Returned by default. Nullable.'
              nullable: true
            writebackConfiguration:
              $ref: '#/components/schemas/microsoft.graph.groupWritebackConfiguration'
            accessType:
              $ref: '#/components/schemas/microsoft.graph.groupAccessType'
            allowExternalSenders:
              type: boolean
              description: 'Indicates if people external to the organization can send messages to the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).'
              nullable: true
            autoSubscribeNewMembers:
              type: boolean
              description: 'Indicates if new members added to the group will be auto-subscribed to receive email notifications. You can set this property in a PATCH request for the group; do not set it in the initial POST request that creates the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).'
              nullable: true
            hideFromAddressLists:
              type: boolean
              description: 'true if the group is not displayed in certain parts of the Outlook user interface: in the Address Book, in address lists for selecting message recipients, and in the Browse Groups dialog for searching groups; false otherwise. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).'
              nullable: true
            hideFromOutlookClients:
              type: boolean
              description: 'true if the group is not displayed in Outlook clients, such as Outlook for Windows and Outlook on the web, false otherwise. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).'
              nullable: true
            isFavorite:
              type: boolean
              nullable: true
            isSubscribedByMail:
              type: boolean
              description: 'Indicates whether the signed-in user is subscribed to receive email conversations. Default value is true. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).'
              nullable: true
            unseenConversationsCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Count of conversations that have been delivered one or more new posts since the signed-in user's last visit to the group. This property is the same as unseenCount. Returned only on $select.
              format: int32
              nullable: true
            unseenCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: 'Count of conversations that have received new posts since the signed-in user last visited the group. This property is the same as unseenConversationsCount.Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).'
              format: int32
              nullable: true
            unseenMessagesCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Count of new posts that have been delivered to the group's conversations since the signed-in user's last visit to the group. Returned only on $select.
              format: int32
              nullable: true
            membershipRuleProcessingStatus:
              $ref: '#/components/schemas/microsoft.graph.membershipRuleProcessingStatus'
            isArchived:
              type: boolean
              description: 'When a group is associated with a team, this property determines whether the team is in read-only mode.'
              nullable: true
            appRoleAssignments:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.appRoleAssignment'
              description: Represents the app roles a group has been granted for an application. Supports $expand.
            createdOnBehalfOf:
              $ref: '#/components/schemas/microsoft.graph.directoryObject'
            endpoints:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.endpoint'
              description: Endpoints for the group. Read-only. Nullable.
            memberOf:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: 'Groups and administrative units that this group is a member of. HTTP Methods: GET (supported for all groups). Read-only. Nullable. Supports $expand.'
            members:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: 'Members of this group, who can be users, devices, other groups, or service principals. Supports the List members, Add member, and Remove member operations. Nullable. Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,''Role'')&$select=id,displayName&$expand=members($select=id,userPrincipalName,displayName).'
            membersWithLicenseErrors:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: A list of group members with license errors from this group-based license assignment. Read-only.
            owners:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: 'The owners of the group who can be users or service principals. Nullable. If this property is not specified when creating a Microsoft 365 group, the calling user is automatically assigned as the group owner. Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,''Role'')&$select=id,displayName&$expand=owners($select=id,userPrincipalName,displayName).'
            permissionGrants:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.resourceSpecificPermissionGrant'
              description: The permissions that have been granted for a group to a specific application. Supports $expand.
            settings:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directorySetting'
              description: 'Settings that can govern this group''s behavior, like whether members can invite guest users to the group. Nullable.'
            transitiveMemberOf:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
            transitiveMembers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
            acceptedSenders:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: The list of users or groups that are allowed to create post's or calendar events in this group. If this list is non-empty then only users or groups listed here are allowed to post.
            calendar:
              $ref: '#/components/schemas/microsoft.graph.calendar'
            calendarView:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.event'
              description: The calendar view for the calendar. Read-only.
            conversations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.conversation'
              description: The group's conversations.
            events:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.event'
              description: The group's events.
            rejectedSenders:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: The list of users or groups that are not allowed to create posts or calendar events in this group. Nullable
            threads:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.conversationThread'
              description: The group's conversation threads. Nullable.
            drive:
              $ref: '#/components/schemas/microsoft.graph.drive'
            drives:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.drive'
              description: The group's drives. Read-only.
            sites:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.site'
              description: The list of SharePoint sites in this group. Access the default site with /sites/root.
            extensions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.extension'
              description: The collection of open extensions defined for the group. Read-only. Nullable.
            groupLifecyclePolicies:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.groupLifecyclePolicy'
              description: The collection of lifecycle policies for this group. Read-only. Nullable.
            planner:
              $ref: '#/components/schemas/microsoft.graph.plannerGroup'
            onenote:
              $ref: '#/components/schemas/microsoft.graph.onenote'
            photo:
              $ref: '#/components/schemas/microsoft.graph.profilePhoto'
            photos:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.profilePhoto'
              description: The profile photos owned by the group. Read-only. Nullable.
            team:
              $ref: '#/components/schemas/microsoft.graph.team'
          additionalProperties:
            type: object
    microsoft.graph.mailFolder:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: mailFolder
          type: object
          properties:
            childFolderCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The number of immediate child mailFolders in the current mailFolder.
              format: int32
              nullable: true
            displayName:
              type: string
              description: The mailFolder's display name.
              nullable: true
            isHidden:
              type: boolean
              description: Indicates whether the mailFolder is hidden. This property can be set only when creating the folder. Find more information in Hidden mail folders.
              nullable: true
            parentFolderId:
              type: string
              description: The unique identifier for the mailFolder's parent mailFolder.
              nullable: true
            totalItemCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The number of items in the mailFolder.
              format: int32
              nullable: true
            unreadItemCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The number of items in the mailFolder marked as unread.
              format: int32
              nullable: true
            wellKnownName:
              type: string
              description: 'The well-known folder name for the folder. The possible values are listed above. This property is only set for default folders created by Outlook. For other folders, this property is null.'
              nullable: true
            childFolders:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.mailFolder'
              description: The collection of child folders in the mailFolder.
            messageRules:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.messageRule'
              description: The collection of rules that apply to the user's Inbox folder.
            messages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.message'
              description: The collection of messages in the mailFolder.
            multiValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty'
              description: The collection of multi-value extended properties defined for the mailFolder. Read-only. Nullable.
            singleValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty'
              description: The collection of single-value extended properties defined for the mailFolder. Read-only. Nullable.
            userConfigurations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.userConfiguration'
          additionalProperties:
            type: object
    microsoft.graph.message:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.outlookItem'
        - title: message
          type: object
          properties:
            bccRecipients:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.recipient'
              description: 'The Bcc: recipients for the message.'
            body:
              $ref: '#/components/schemas/microsoft.graph.itemBody'
            bodyPreview:
              type: string
              description: 'The first 255 characters of the message body. It is in text format. If the message contains instances of mention, this property would contain a concatenation of these mentions as well.'
              nullable: true
            ccRecipients:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.recipient'
              description: 'The Cc: recipients for the message.'
            conversationId:
              type: string
              description: The ID of the conversation the email belongs to.
              nullable: true
            conversationIndex:
              type: string
              description: Indicates the position of the message within the conversation.
              format: base64url
              nullable: true
            flag:
              $ref: '#/components/schemas/microsoft.graph.followupFlag'
            from:
              $ref: '#/components/schemas/microsoft.graph.recipient'
            hasAttachments:
              type: boolean
              description: 'Indicates whether the message has attachments. This property doesn''t include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src=''cid:image001.jpg@01D26CD8.6C05F070''>.'
              nullable: true
            importance:
              $ref: '#/components/schemas/microsoft.graph.importance'
            inferenceClassification:
              $ref: '#/components/schemas/microsoft.graph.inferenceClassificationType'
            internetMessageHeaders:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.internetMessageHeader'
            internetMessageId:
              type: string
              nullable: true
            isDeliveryReceiptRequested:
              type: boolean
              nullable: true
            isDraft:
              type: boolean
              nullable: true
            isRead:
              type: boolean
              nullable: true
            isReadReceiptRequested:
              type: boolean
              nullable: true
            mentionsPreview:
              $ref: '#/components/schemas/microsoft.graph.mentionsPreview'
            parentFolderId:
              type: string
              nullable: true
            receivedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            replyTo:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.recipient'
            sender:
              $ref: '#/components/schemas/microsoft.graph.recipient'
            sentDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            subject:
              type: string
              nullable: true
            toRecipients:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.recipient'
            uniqueBody:
              $ref: '#/components/schemas/microsoft.graph.itemBody'
            unsubscribeData:
              type: array
              items:
                type: string
                nullable: true
            unsubscribeEnabled:
              type: boolean
              nullable: true
            webLink:
              type: string
              nullable: true
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.attachment'
              description: The fileAttachment and itemAttachment attachments for the message.
            extensions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.extension'
              description: The collection of open extensions defined for the message. Nullable.
            mentions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.mention'
              description: 'A collection of mentions in the message, ordered by the createdDateTime from the newest to the oldest. By default, a GET /messages does not return this property unless you apply $expand on the property.'
            multiValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty'
              description: The collection of multi-value extended properties defined for the message. Nullable.
            singleValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty'
              description: The collection of single-value extended properties defined for the message. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.outlookUser:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: outlookUser
          type: object
          properties:
            masterCategories:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.outlookCategory'
              description: A list of categories defined for the user.
            taskFolders:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.outlookTaskFolder'
            taskGroups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.outlookTaskGroup'
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.outlookTask'
          additionalProperties:
            type: object
    microsoft.graph.person:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: person
          type: object
          properties:
            birthday:
              type: string
              description: The person's birthday.
              nullable: true
            companyName:
              type: string
              description: The name of the person's company.
              nullable: true
            department:
              type: string
              description: The person's department.
              nullable: true
            displayName:
              type: string
              description: The person's display name.
              nullable: true
            emailAddresses:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.rankedEmailAddress'
              description: The person's email addresses.
            givenName:
              type: string
              description: The person's given name.
              nullable: true
            isFavorite:
              type: boolean
              description: true if the user has flagged this person as a favorite.
              nullable: true
            mailboxType:
              type: string
              description: The type of mailbox that is represented by the person's email address.
              nullable: true
            officeLocation:
              type: string
              description: The location of the person's office.
              nullable: true
            personNotes:
              type: string
              description: Free-form notes that the user has taken about this person.
              nullable: true
            personType:
              type: string
              description: 'The type of person, for example distribution list.'
              nullable: true
            phones:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.phone'
              description: The person's phone numbers.
            postalAddresses:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.location'
              description: The person's addresses.
            profession:
              type: string
              description: The person's profession.
              nullable: true
            sources:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.personDataSource'
              description: 'The sources the user data comes from, for example Directory or Outlook Contacts.'
            surname:
              type: string
              description: The person's surname.
              nullable: true
            title:
              type: string
              description: The person's title.
              nullable: true
            userPrincipalName:
              type: string
              description: 'The user principal name (UPN) of the person. The UPN is an Internet-style login name for the person based on the Internet standard RFC 822. By convention, this should map to the person''s email name. The general format is alias@domain.'
              nullable: true
            websites:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.website'
              description: The person's websites.
            yomiCompany:
              type: string
              description: The phonetic Japanese name of the person's company.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.extension:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: extension
          type: object
          additionalProperties:
            type: object
    microsoft.graph.appConsentRequest:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: appConsentRequest
          type: object
          properties:
            appDisplayName:
              type: string
              description: The display name of the app for which consent is requested. Required. Supports $filter (eq only) and $orderby.
              nullable: true
            appId:
              type: string
              description: The identifier of the application. Required. Supports $filter (eq only) and $orderby.
            consentType:
              type: string
              description: 'The consent type of the request. Possible values are: Static and Dynamic. These represent static and dynamic permissions, respectively, requested in the consent workflow. Supports $filter (eq only) and $orderby. Required.'
              nullable: true
            pendingScopes:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.appConsentRequestScope'
              description: A list of pending scopes waiting for approval. This is empty if the consentType is Static. Required.
            userConsentRequests:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.userConsentRequest'
              description: A list of pending user consent requests.
          additionalProperties:
            type: object
    microsoft.graph.approval:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: approval
          type: object
          properties:
            steps:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.approvalStep'
          additionalProperties:
            type: object
    microsoft.graph.accessReviewInstance:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: accessReviewInstance
          type: object
          properties:
            endDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'DateTime when review instance is scheduled to end.The DatetimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Supports $select. Read-only.'
              format: date-time
              nullable: true
            errors:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewError'
              description: Collection of errors in an access review instance lifecycle. Read-only.
            fallbackReviewers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewReviewerScope'
              description: 'This collection of reviewer scopes is used to define the list of fallback reviewers. These fallback reviewers will be notified to take action if no users are found from the list of reviewers specified. This could occur when either the group owner is specified as the reviewer but the group owner does not exist, or manager is specified as reviewer but a user''s manager does not exist. Supports $select.'
            reviewers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewReviewerScope'
              description: 'This collection of access review scopes is used to define who the reviewers are. Supports $select. For examples of options for assigning reviewers, see Assign reviewers to your access review definition using the Microsoft Graph API.'
            scope:
              $ref: '#/components/schemas/microsoft.graph.accessReviewScope'
            startDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'DateTime when review instance is scheduled to start. May be in the future. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Supports $select. Read-only.'
              format: date-time
              nullable: true
            status:
              type: string
              description: 'Specifies the status of an accessReview. Possible values: Initializing, NotStarted, Starting, InProgress, Completing, Completed, AutoReviewing, and AutoReviewed. Supports $select, $orderby, and $filter (eq only). Read-only.'
              nullable: true
            contactedReviewers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewReviewer'
              description: 'Returns the collection of reviewers who were contacted to complete this review. While the reviewers and fallbackReviewers properties of the accessReviewScheduleDefinition might specify group owners or managers as reviewers, contactedReviewers returns their individual identities. Supports $select. Read-only.'
            decisions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewInstanceDecisionItem'
              description: 'Each user reviewed in an accessReviewInstance has a decision item representing if they were approved, denied, or not yet reviewed.'
            definition:
              $ref: '#/components/schemas/microsoft.graph.accessReviewScheduleDefinition'
            stages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewStage'
              description: 'If the instance has multiple stages, this returns the collection of stages. A new stage will only be created when the previous stage ends. The existence, number, and settings of stages on a review instance are created based on the accessReviewStageSettings on the parent accessReviewScheduleDefinition.'
          additionalProperties:
            type: object
    microsoft.graph.agreementAcceptance:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: agreementAcceptance
          type: object
          properties:
            agreementFileId:
              type: string
              description: ID of the agreement file accepted by the user.
              nullable: true
            agreementId:
              type: string
              description: ID of the agreement.
              nullable: true
            deviceDisplayName:
              type: string
              description: The display name of the device used for accepting the agreement.
              nullable: true
            deviceId:
              type: string
              description: The unique identifier of the device used for accepting the agreement.
              nullable: true
            deviceOSType:
              type: string
              description: The operating system used for accepting the agreement.
              nullable: true
            deviceOSVersion:
              type: string
              description: The operating system version of the device used for accepting the agreement.
              nullable: true
            expirationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The expiration date time of the acceptance. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            recordedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            state:
              $ref: '#/components/schemas/microsoft.graph.agreementAcceptanceState'
            userDisplayName:
              type: string
              description: Display name of the user when the acceptance was recorded.
              nullable: true
            userEmail:
              type: string
              description: Email of the user when the acceptance was recorded.
              nullable: true
            userId:
              type: string
              description: ID of the user who accepted the agreement.
              nullable: true
            userPrincipalName:
              type: string
              description: UPN of the user when the acceptance was recorded.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.security.security:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: security
          type: object
          properties:
            informationProtection:
              $ref: '#/components/schemas/microsoft.graph.security.informationProtection'
          additionalProperties:
            type: object
    microsoft.graph.deviceEnrollmentConfiguration:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: deviceEnrollmentConfiguration
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Created date time in UTC of the device enrollment configuration
              format: date-time
            description:
              type: string
              description: The description of the device enrollment configuration
              nullable: true
            deviceEnrollmentConfigurationType:
              $ref: '#/components/schemas/microsoft.graph.deviceEnrollmentConfigurationType'
            displayName:
              type: string
              description: The display name of the device enrollment configuration
              nullable: true
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Last modified date time in UTC of the device enrollment configuration
              format: date-time
            priority:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Priority is used when a user exists in multiple groups that are assigned enrollment configuration. Users are subject only to the configuration with the lowest priority value.
              format: int32
            roleScopeTagIds:
              type: array
              items:
                type: string
                nullable: true
              description: Optional role scope tags for the enrollment restrictions.
            version:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The version of the device enrollment configuration
              format: int32
            assignments:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.enrollmentConfigurationAssignment'
              description: The list of group assignments for the device configuration profile
          additionalProperties:
            type: object
          description: The Base Class of Device Enrollment Configuration
    microsoft.graph.managedDevice:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: managedDevice
          type: object
          properties:
            cloudPcRemoteActionResults:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.cloudPcRemoteActionResult'
            aadRegistered:
              type: boolean
              description: Whether the device is Azure Active Directory registered. This property is read-only.
              nullable: true
            activationLockBypassCode:
              type: string
              description: Code that allows the Activation Lock on a device to be bypassed. This property is read-only.
              nullable: true
            androidSecurityPatchLevel:
              type: string
              description: Android security patch level. This property is read-only.
              nullable: true
            autopilotEnrolled:
              type: boolean
              description: Reports if the managed device is enrolled via auto-pilot. This property is read-only.
            azureActiveDirectoryDeviceId:
              type: string
              description: The unique identifier for the Azure Active Directory device. Read only. This property is read-only.
              nullable: true
            azureADDeviceId:
              type: string
              description: The unique identifier for the Azure Active Directory device. Read only. This property is read-only.
              nullable: true
            azureADRegistered:
              type: boolean
              description: Whether the device is Azure Active Directory registered. This property is read-only.
              nullable: true
            chassisType:
              $ref: '#/components/schemas/microsoft.graph.chassisType'
            chromeOSDeviceInfo:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.chromeOSDeviceProperty'
              description: List of properties of the ChromeOS Device.
            complianceGracePeriodExpirationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The DateTime when device compliance grace period expires. This property is read-only.
              format: date-time
            complianceState:
              $ref: '#/components/schemas/microsoft.graph.complianceState'
            configurationManagerClientEnabledFeatures:
              $ref: '#/components/schemas/microsoft.graph.configurationManagerClientEnabledFeatures'
            configurationManagerClientHealthState:
              $ref: '#/components/schemas/microsoft.graph.configurationManagerClientHealthState'
            configurationManagerClientInformation:
              $ref: '#/components/schemas/microsoft.graph.configurationManagerClientInformation'
            deviceActionResults:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.deviceActionResult'
              description: List of ComplexType deviceActionResult objects. This property is read-only.
            deviceCategoryDisplayName:
              type: string
              description: Device category display name. This property is read-only.
              nullable: true
            deviceEnrollmentType:
              $ref: '#/components/schemas/microsoft.graph.deviceEnrollmentType'
            deviceHealthAttestationState:
              $ref: '#/components/schemas/microsoft.graph.deviceHealthAttestationState'
            deviceName:
              type: string
              description: Name of the device. This property is read-only.
              nullable: true
            deviceRegistrationState:
              $ref: '#/components/schemas/microsoft.graph.deviceRegistrationState'
            deviceType:
              $ref: '#/components/schemas/microsoft.graph.deviceType'
            easActivated:
              type: boolean
              description: Whether the device is Exchange ActiveSync activated. This property is read-only.
            easActivationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Exchange ActivationSync activation time of the device. This property is read-only.
              format: date-time
            easDeviceId:
              type: string
              description: Exchange ActiveSync Id of the device. This property is read-only.
              nullable: true
            emailAddress:
              type: string
              description: Email(s) for the user associated with the device. This property is read-only.
              nullable: true
            enrolledDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Enrollment time of the device. This property is read-only.
              format: date-time
            enrollmentProfileName:
              type: string
              description: 'Name of the enrollment profile assigned to the device. Default value is empty string, indicating no enrollment profile was assgined. This property is read-only.'
              nullable: true
            ethernetMacAddress:
              type: string
              description: Ethernet MAC. This property is read-only.
              nullable: true
            exchangeAccessState:
              $ref: '#/components/schemas/microsoft.graph.deviceManagementExchangeAccessState'
            exchangeAccessStateReason:
              $ref: '#/components/schemas/microsoft.graph.deviceManagementExchangeAccessStateReason'
            exchangeLastSuccessfulSyncDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Last time the device contacted Exchange. This property is read-only.
              format: date-time
            freeStorageSpaceInBytes:
              type: integer
              description: Free Storage in Bytes. This property is read-only.
              format: int64
            hardwareInformation:
              $ref: '#/components/schemas/microsoft.graph.hardwareInformation'
            iccid:
              type: string
              description: 'Integrated Circuit Card Identifier, it is A SIM card''s unique identification number. This property is read-only.'
              nullable: true
            imei:
              type: string
              description: IMEI. This property is read-only.
              nullable: true
            isEncrypted:
              type: boolean
              description: Device encryption status. This property is read-only.
            isSupervised:
              type: boolean
              description: Device supervised status. This property is read-only.
            jailBroken:
              type: string
              description: whether the device is jail broken or rooted. This property is read-only.
              nullable: true
            joinType:
              $ref: '#/components/schemas/microsoft.graph.joinType'
            lastSyncDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date and time that the device last completed a successful sync with Intune. This property is read-only.
              format: date-time
            lostModeState:
              $ref: '#/components/schemas/microsoft.graph.lostModeState'
            managedDeviceName:
              type: string
              description: Automatically generated name to identify a device. Can be overwritten to a user friendly name.
              nullable: true
            managedDeviceOwnerType:
              $ref: '#/components/schemas/microsoft.graph.managedDeviceOwnerType'
            managementAgent:
              $ref: '#/components/schemas/microsoft.graph.managementAgentType'
            managementCertificateExpirationDate:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Reports device management certificate expiration date. This property is read-only.
              format: date-time
            managementFeatures:
              $ref: '#/components/schemas/microsoft.graph.managedDeviceManagementFeatures'
            managementState:
              $ref: '#/components/schemas/microsoft.graph.managementState'
            manufacturer:
              type: string
              description: Manufacturer of the device. This property is read-only.
              nullable: true
            meid:
              type: string
              description: MEID. This property is read-only.
              nullable: true
            model:
              type: string
              description: Model of the device. This property is read-only.
              nullable: true
            notes:
              type: string
              description: Notes on the device created by IT Admin
              nullable: true
            operatingSystem:
              type: string
              description: 'Operating system of the device. Windows, iOS, etc. This property is read-only.'
              nullable: true
            osVersion:
              type: string
              description: Operating system version of the device. This property is read-only.
              nullable: true
            ownerType:
              $ref: '#/components/schemas/microsoft.graph.ownerType'
            partnerReportedThreatState:
              $ref: '#/components/schemas/microsoft.graph.managedDevicePartnerReportedHealthState'
            phoneNumber:
              type: string
              description: Phone number of the device. This property is read-only.
              nullable: true
            physicalMemoryInBytes:
              type: integer
              description: Total Memory in Bytes. This property is read-only.
              format: int64
            preferMdmOverGroupPolicyAppliedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Reports the DateTime the preferMdmOverGroupPolicy setting was set.  When set, the Intune MDM settings will override Group Policy settings if there is a conflict. Read Only. This property is read-only.'
              format: date-time
            processorArchitecture:
              $ref: '#/components/schemas/microsoft.graph.managedDeviceArchitecture'
            remoteAssistanceSessionErrorDetails:
              type: string
              description: An error string that identifies issues when creating Remote Assistance session objects. This property is read-only.
              nullable: true
            remoteAssistanceSessionUrl:
              type: string
              description: Url that allows a Remote Assistance session to be established with the device. This property is read-only.
              nullable: true
            requireUserEnrollmentApproval:
              type: boolean
              description: Reports if the managed iOS device is user approval enrollment. This property is read-only.
              nullable: true
            retireAfterDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Indicates the time after when a device will be auto retired because of scheduled action. This property is read-only.
              format: date-time
            roleScopeTagIds:
              type: array
              items:
                type: string
                nullable: true
              description: List of Scope Tag IDs for this Device instance.
            serialNumber:
              type: string
              description: SerialNumber. This property is read-only.
              nullable: true
            skuFamily:
              type: string
              description: Device sku family
              nullable: true
            skuNumber:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: 'Device sku number, see also: https://docs.microsoft.com/windows/win32/api/sysinfoapi/nf-sysinfoapi-getproductinfo. Valid values 0 to 2147483647. This property is read-only.'
              format: int32
            specificationVersion:
              type: string
              description: Specification version. This property is read-only.
              nullable: true
            subscriberCarrier:
              type: string
              description: Subscriber Carrier. This property is read-only.
              nullable: true
            totalStorageSpaceInBytes:
              type: integer
              description: Total Storage in Bytes. This property is read-only.
              format: int64
            udid:
              type: string
              description: Unique Device Identifier for iOS and macOS devices. This property is read-only.
              nullable: true
            userDisplayName:
              type: string
              description: User display name. This property is read-only.
              nullable: true
            userId:
              type: string
              description: Unique Identifier for the user associated with the device. This property is read-only.
              nullable: true
            userPrincipalName:
              type: string
              description: Device user principal name. This property is read-only.
              nullable: true
            usersLoggedOn:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.loggedOnUser'
              description: Indicates the last logged on users of a device. This property is read-only.
            wiFiMacAddress:
              type: string
              description: Wi-Fi MAC. This property is read-only.
              nullable: true
            windowsActiveMalwareCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Count of active malware for this windows device. This property is read-only.
              format: int32
            windowsRemediatedMalwareCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Count of remediated malware for this windows device. This property is read-only.
              format: int32
            assignmentFilterEvaluationStatusDetails:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.assignmentFilterEvaluationStatusDetails'
              description: Managed device mobile app configuration states for this device.
            deviceCompliancePolicyStates:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.deviceCompliancePolicyState'
              description: Device compliance policy states for this device.
            deviceConfigurationStates:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.deviceConfigurationState'
              description: Device configuration states for this device.
            managedDeviceMobileAppConfigurationStates:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationState'
              description: Managed device mobile app configuration states for this device.
            securityBaselineStates:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.securityBaselineState'
              description: Security baseline states for this device.
            detectedApps:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.detectedApp'
              description: All applications currently installed on the device
            deviceCategory:
              $ref: '#/components/schemas/microsoft.graph.deviceCategory'
            logCollectionRequests:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.deviceLogCollectionResponse'
              description: List of log collection requests
            users:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.user'
              description: The primary users associated with the managed device.
            windowsProtectionState:
              $ref: '#/components/schemas/microsoft.graph.windowsProtectionState'
          additionalProperties:
            type: object
          description: Devices that are managed or pre-enrolled through Intune
    microsoft.graph.managedAppRegistration:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: managedAppRegistration
          type: object
          properties:
            appIdentifier:
              $ref: '#/components/schemas/microsoft.graph.mobileAppIdentifier'
            applicationVersion:
              type: string
              description: App version
              nullable: true
            azureADDeviceId:
              type: string
              description: The Azure Active Directory Device identifier of the host device. Value could be empty even when the host device is Azure Active Directory registered.
              nullable: true
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time of creation
              format: date-time
            deviceManufacturer:
              type: string
              description: The device manufacturer for the current app registration
              nullable: true
            deviceModel:
              type: string
              description: The device model for the current app registration
              nullable: true
            deviceName:
              type: string
              description: Host device name
              nullable: true
            deviceTag:
              type: string
              description: 'App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.'
              nullable: true
            deviceType:
              type: string
              description: Host device type
              nullable: true
            flaggedReasons:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.managedAppFlaggedReason'
              description: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
            lastSyncDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time of last the app synced with management service.
              format: date-time
            managedDeviceId:
              type: string
              description: The Managed Device identifier of the host device. Value could be empty even when the host device is managed.
              nullable: true
            managementSdkVersion:
              type: string
              description: App management SDK version
              nullable: true
            platformVersion:
              type: string
              description: Operating System version
              nullable: true
            userId:
              type: string
              description: The user Id to who this app registration belongs.
              nullable: true
            version:
              type: string
              description: Version of the entity.
              nullable: true
            appliedPolicies:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.managedAppPolicy'
              description: Zero or more policys already applied on the registered app when it last synchronized with managment service.
            intendedPolicies:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.managedAppPolicy'
              description: Zero or more policies admin intended for the app as of now.
            operations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.managedAppOperation'
              description: Zero or more long running operations triggered on the app registration.
          additionalProperties:
            type: object
          description: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    microsoft.graph.windowsInformationProtectionDeviceRegistration:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: windowsInformationProtectionDeviceRegistration
          type: object
          properties:
            deviceMacAddress:
              type: string
              description: Device Mac address.
              nullable: true
            deviceName:
              type: string
              description: Device name.
              nullable: true
            deviceRegistrationId:
              type: string
              description: Device identifier for this device registration record.
              nullable: true
            deviceType:
              type: string
              description: 'Device type, for example, Windows laptop VS Windows phone.'
              nullable: true
            lastCheckInDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Last checkin time of the device.
              format: date-time
            userId:
              type: string
              description: UserId associated with this device registration record.
              nullable: true
          additionalProperties:
            type: object
          description: Represents device registration records for Bring-Your-Own-Device(BYOD) Windows devices.
    microsoft.graph.deviceManagementTroubleshootingEvent:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: deviceManagementTroubleshootingEvent
          type: object
          properties:
            additionalInformation:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.keyValuePair'
              description: A set of string key and string value pairs which provides additional information on the Troubleshooting event
            correlationId:
              type: string
              description: Id used for tracing the failure in the service.
              nullable: true
            eventDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Time when the event occurred .
              format: date-time
            eventName:
              type: string
              description: Event Name corresponding to the Troubleshooting Event. It is an Optional field
              nullable: true
            troubleshootingErrorDetails:
              $ref: '#/components/schemas/microsoft.graph.deviceManagementTroubleshootingErrorDetails'
          additionalProperties:
            type: object
          description: Event representing an general failure.
    microsoft.graph.mobileAppIntentAndState:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: mobileAppIntentAndState
          type: object
          properties:
            managedDeviceIdentifier:
              type: string
              description: Device identifier created or collected by Intune.
              nullable: true
            mobileAppList:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.mobileAppIntentAndStateDetail'
              description: The list of payload intents and states for the tenant.
            userId:
              type: string
              description: Identifier for the user that tried to enroll the device.
              nullable: true
          additionalProperties:
            type: object
          description: MobileApp Intent and Install State for a given device.
    microsoft.graph.mobileAppTroubleshootingEvent:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent'
        - title: mobileAppTroubleshootingEvent
          type: object
          properties:
            applicationId:
              type: string
              description: Intune application identifier.
              nullable: true
            history:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.mobileAppTroubleshootingHistoryItem'
              description: Intune Mobile Application Troubleshooting History Item
            managedDeviceIdentifier:
              type: string
              description: Device identifier created or collected by Intune.
              nullable: true
            userId:
              type: string
              description: Identifier for the user that tried to enroll the device.
              nullable: true
            appLogCollectionRequests:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.appLogCollectionRequest'
              description: The collection property of AppLogUploadRequest.
          additionalProperties:
            type: object
          description: Event representing a users device application install status.
    microsoft.graph.notification:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: notification
          type: object
          properties:
            displayTimeToLive:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: 'Sets how long (in seconds) this notification content will stay in each platform''s notification viewer. For example, when the notification is delivered to a Windows device, the value of this property is passed on to ToastNotification.ExpirationTime, which determines how long the toast notification will stay in the user''s Windows Action Center.'
              format: int32
              nullable: true
            expirationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Sets a UTC expiration date and time on a user notification using ISO 8601 format (for example, midnight UTC on Jan 1, 2019 would look like this: ''2019-01-01T00:00:00Z''). When time is up, the notification is removed from the Microsoft Graph notification feed store completely and is no longer part of notification history. Max value is 30 days.'
              format: date-time
              nullable: true
            groupName:
              type: string
              description: The name of the group that this notification belongs to. It is set by the developer for the purpose of grouping notifications together.
              nullable: true
            payload:
              $ref: '#/components/schemas/microsoft.graph.payloadTypes'
            priority:
              $ref: '#/components/schemas/microsoft.graph.priority'
            targetHostName:
              type: string
              description: 'Represents the host name of the app to which the calling service wants to post the notification, for the given user. If targeting web endpoints (see targetPolicy.platformTypes), ensure that targetHostName is the same as the name used when creating a subscription on the client side within the application JSON property.'
            targetPolicy:
              $ref: '#/components/schemas/microsoft.graph.targetPolicyEndpoints'
          additionalProperties:
            type: object
    microsoft.graph.plannerUser:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.plannerDelta'
        - title: plannerUser
          type: object
          properties:
            favoritePlanReferences:
              $ref: '#/components/schemas/microsoft.graph.plannerFavoritePlanReferenceCollection'
            recentPlanReferences:
              $ref: '#/components/schemas/microsoft.graph.plannerRecentPlanReferenceCollection'
            all:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.plannerDelta'
            favoritePlans:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.plannerPlan'
              description: Read-only. Nullable. Returns the plannerPlans that the user marked as favorites.
            plans:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.plannerPlan'
              description: Read-only. Nullable. Returns the plannerTasks assigned to the user.
            recentPlans:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.plannerPlan'
              description: Read-only. Nullable. Returns the plannerPlans that have been recently viewed by the user in apps that support recent plans.
            rosterPlans:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.plannerPlan'
              description: Read-only. Nullable. Returns the plannerPlans contained by the plannerRosters the user is a member.
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.plannerTask'
              description: Read-only. Nullable. Returns the plannerTasks assigned to the user.
          additionalProperties:
            type: object
    microsoft.graph.itemInsights:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.officeGraphInsights'
        - title: itemInsights
          type: object
          additionalProperties:
            type: object
    microsoft.graph.userSettings:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: userSettings
          type: object
          properties:
            contributionToContentDiscoveryAsOrganizationDisabled:
              type: boolean
              description: 'Reflects the Office Delve organization level setting. When set to true, the organization doesn''t have access to Office Delve. This setting is read-only and can only be changed by administrators in the SharePoint admin center.'
            contributionToContentDiscoveryDisabled:
              type: boolean
              description: 'When set to true, documents in the user''s Office Delve are disabled. Users can control this setting in Office Delve.'
            itemInsights:
              $ref: '#/components/schemas/microsoft.graph.userInsightsSettings'
            contactMergeSuggestions:
              $ref: '#/components/schemas/microsoft.graph.contactMergeSuggestions'
            regionalAndLanguageSettings:
              $ref: '#/components/schemas/microsoft.graph.regionalAndLanguageSettings'
            shiftPreferences:
              $ref: '#/components/schemas/microsoft.graph.shiftPreferences'
          additionalProperties:
            type: object
    microsoft.graph.profilePhoto:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: profilePhoto
          type: object
          properties:
            height:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The height of the photo. Read-only.
              format: int32
              nullable: true
            width:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The width of the photo. Read-only.
              format: int32
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.profile:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: profile
          type: object
          properties:
            account:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.userAccountInformation'
            addresses:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemAddress'
              description: Represents details of addresses associated with the user.
            anniversaries:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.personAnnualEvent'
              description: Represents the details of meaningful dates associated with a person.
            awards:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.personAward'
              description: Represents the details of awards or honors associated with a person.
            certifications:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.personCertification'
              description: Represents the details of certifications associated with a person.
            educationalActivities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.educationalActivity'
              description: 'Represents data that a user has supplied related to undergraduate, graduate, postgraduate or other educational activities.'
            emails:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemEmail'
              description: Represents detailed information about email addresses associated with the user.
            interests:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.personInterest'
              description: Provides detailed information about interests the user has associated with themselves in various services.
            languages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.languageProficiency'
              description: Represents detailed information about languages that a user has added to their profile.
            names:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.personName'
              description: Represents the names a user has added to their profile.
            notes:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.personAnnotation'
              description: Represents notes that a user has added to their profile.
            patents:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemPatent'
              description: Represents patents that a user has added to their profile.
            phones:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemPhone'
              description: Represents detailed information about phone numbers associated with a user in various services.
            positions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workPosition'
              description: Represents detailed information about work positions associated with a user's profile.
            projects:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.projectParticipation'
              description: Represents detailed information about projects associated with a user.
            publications:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemPublication'
              description: Represents details of any publications a user has added to their profile.
            skills:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.skillProficiency'
              description: Represents detailed information about skills associated with a user in various services.
            webAccounts:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.webAccount'
              description: Represents web accounts the user has indicated they use or has added to their user profile.
            websites:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.personWebsite'
              description: Represents detailed information about websites associated with a user in various services.
          additionalProperties:
            type: object
    microsoft.graph.userActivity:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: userActivity
          type: object
          properties:
            activationUrl:
              type: string
              description: Required. URL used to launch the activity in the best native experience represented by the appId. Might launch a web-based app if no native app exists.
            activitySourceHost:
              type: string
              description: 'Required. URL for the domain representing the cross-platform identity mapping for the app. Mapping is stored either as a JSON file hosted on the domain or configurable via Windows Dev Center. The JSON file is named cross-platform-app-identifiers and is hosted at root of your HTTPS domain, either at the top level domain or include a sub domain. For example: https://contoso.com or https://myapp.contoso.com but NOT https://myapp.contoso.com/somepath. You must have a unique file and domain (or sub domain) per cross-platform app identity. For example, a separate file and domain is needed for Word vs. PowerPoint.'
            appActivityId:
              type: string
              description: Required. The unique activity ID in the context of the app - supplied by caller and immutable thereafter.
            appDisplayName:
              type: string
              description: Optional. Short text description of the app used to generate the activity for use in cases when the app is not installed on the user’s local device.
              nullable: true
            contentInfo:
              $ref: '#/components/schemas/microsoft.graph.Json'
            contentUrl:
              type: string
              description: 'Optional. Used in the event the content can be rendered outside of a native or web-based app experience (for example, a pointer to an item in an RSS feed).'
              nullable: true
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Set by the server. DateTime in UTC when the object was created on the server.
              format: date-time
              nullable: true
            expirationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Set by the server. DateTime in UTC when the object expired on the server.
              format: date-time
              nullable: true
            fallbackUrl:
              type: string
              description: 'Optional. URL used to launch the activity in a web-based app, if available.'
              nullable: true
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Set by the server. DateTime in UTC when the object was modified on the server.
              format: date-time
              nullable: true
            status:
              $ref: '#/components/schemas/microsoft.graph.status'
            userTimezone:
              type: string
              description: Optional. The timezone in which the user's device used to generate the activity was located at activity creation time; values supplied as Olson IDs in order to support cross-platform representation.
              nullable: true
            visualElements:
              $ref: '#/components/schemas/microsoft.graph.visualInfo'
            historyItems:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.activityHistoryItem'
              description: Optional. NavigationProperty/Containment; navigation property to the activity's historyItems.
          additionalProperties:
            type: object
    microsoft.graph.device:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.directoryObject'
        - title: device
          type: object
          properties:
            accountEnabled:
              type: boolean
              description: 'true if the account is enabled; otherwise, false. Default is true.  Supports $filter (eq, ne, not, in). Only callers in Global Administrator and Cloud Device Administrator roles can set this property.'
              nullable: true
            alternativeSecurityIds:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.alternativeSecurityId'
              description: 'For internal use only. Not nullable. Supports $filter (eq, not, ge, le).'
            approximateLastSignInDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Supports $filter (eq, ne, not, ge, le, and eq on null values) and $orderBy.'
              format: date-time
              nullable: true
            complianceExpirationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The timestamp when the device is no longer deemed compliant. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
              format: date-time
              nullable: true
            deviceCategory:
              type: string
              description: User-defined property set by Intune to automatically add devices to groups and simplify managing devices.
              nullable: true
            deviceId:
              type: string
              description: 'Identifier set by Azure Device Registration Service at the time of registration. Supports $filter (eq, ne, not, startsWith).'
              nullable: true
            deviceMetadata:
              type: string
              description: For internal use only. Set to null.
              nullable: true
            deviceOwnership:
              type: string
              description: 'Ownership of the device. This property is set by Intune. Possible values are: unknown, company, personal.'
              nullable: true
            deviceVersion:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: For internal use only.
              format: int32
              nullable: true
            displayName:
              type: string
              description: 'The display name for the device. Required. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderBy.'
              nullable: true
            domainName:
              type: string
              description: The on-premises domain name of Hybrid Azure AD joined devices. This property is set by Intune.
              nullable: true
            enrollmentProfileName:
              type: string
              description: 'Enrollment profile applied to the device. For example, Apple Device Enrollment Profile, Device enrollment - Corporate device identifiers, or Windows Autopilot profile name. This property is set by Intune.'
              nullable: true
            enrollmentType:
              type: string
              description: 'Enrollment type of the device. This property is set by Intune. Possible values are: unknown, userEnrollment, deviceEnrollmentManager, appleBulkWithUser, appleBulkWithoutUser, windowsAzureADJoin, windowsBulkUserless, windowsAutoEnrollment, windowsBulkAzureDomainJoin, windowsCoManagement.'
              nullable: true
            extensionAttributes:
              $ref: '#/components/schemas/microsoft.graph.onPremisesExtensionAttributes'
            hostnames:
              type: array
              items:
                type: string
                nullable: true
              description: List of hostNames for the device.
            isCompliant:
              type: boolean
              description: 'true if the device complies with Mobile Device Management (MDM) policies; otherwise, false. Read-only. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices. Supports $filter (eq, ne, not).'
              nullable: true
            isManaged:
              type: boolean
              description: 'true if the device is managed by a Mobile Device Management (MDM) app; otherwise, false. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices. Supports $filter (eq, ne, not).'
              nullable: true
            isManagementRestricted:
              type: boolean
              nullable: true
            isRooted:
              type: boolean
              description: true if device is rooted; false if device is jail-broken. This can only be updated by Intune.
              nullable: true
            managementType:
              type: string
              description: 'Management channel of the device.  This property is set by Intune. Possible values are: eas, mdm, easMdm, intuneClient, easIntuneClient, configurationManagerClient, configurationManagerClientMdm, configurationManagerClientMdmEas, unknown, jamf, googleCloudDevicePolicyController.'
              nullable: true
            mdmAppId:
              type: string
              description: 'Application identifier used to register device into MDM. Read-only. Supports $filter (eq, ne, not, startsWith).'
              nullable: true
            onPremisesLastSyncDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The last time at which the object was synced with the on-premises directory. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z Read-only. Supports $filter (eq, ne, not, ge, le, in).'
              format: date-time
              nullable: true
            onPremisesSyncEnabled:
              type: boolean
              description: 'true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only. Supports $filter (eq, ne, not, in, and eq on null values).'
              nullable: true
            operatingSystem:
              type: string
              description: 'The type of operating system on the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).'
              nullable: true
            operatingSystemVersion:
              type: string
              description: 'Operating system version of the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).'
              nullable: true
            physicalIds:
              type: array
              items:
                type: string
              description: 'For internal use only. Not nullable. Supports $filter (eq, not, ge, le, startsWith, and counting empty collections).'
            profileType:
              type: string
              description: 'The profile type of the device. Possible values: RegisteredDevice (default), SecureVM, Printer, Shared, IoT.'
              nullable: true
            registrationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Date and time of when the device was registered. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
              format: date-time
              nullable: true
            systemLabels:
              type: array
              items:
                type: string
              description: List of labels applied to the device by the system. Supports $filter (eq when counting empty collections).
            trustType:
              type: string
              description: 'Type of trust for the joined device. Read-only. Possible values: Workplace (indicates bring your own personal devices), AzureAd (Cloud only joined devices), ServerAd (on-premises domain joined devices joined to Azure AD). For more details, see Introduction to device management in Azure Active Directory'
              nullable: true
            kind:
              type: string
              description: Form factor of device. Only returned if user signs in with a Microsoft account as part of Project Rome.
              nullable: true
            manufacturer:
              type: string
              description: Manufacturer of the device. Read-only.
              nullable: true
            model:
              type: string
              description: Model of the device. Read-only.
              nullable: true
            name:
              type: string
              description: Friendly name of a device. Only returned if user signs in with a Microsoft account as part of Project Rome.
              nullable: true
            platform:
              type: string
              description: Platform of device. Only returned if user signs in with a Microsoft account as part of Project Rome. Only returned if user signs in with a Microsoft account as part of Project Rome.
              nullable: true
            status:
              type: string
              description: Device is online or offline. Only returned if user signs in with a Microsoft account as part of Project Rome.
              nullable: true
            usageRights:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.usageRight'
              description: Represents the usage rights a device has been granted.
            memberOf:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: Groups and administrative units that this device is a member of. Read-only. Nullable. Supports $expand.
            registeredOwners:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: 'The user that cloud joined the device or registered their personal device. The registered owner is set at the time of registration. Currently, there can be only one owner. Read-only. Nullable. Supports $expand.'
            registeredUsers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: 'Collection of registered users of the device. For cloud joined devices and registered personal devices, registered users are set to the same value as registered owners at the time of registration. Read-only. Nullable. Supports $expand.'
            transitiveMemberOf:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.directoryObject'
              description: Groups and administrative units that this device is a member of. This operation is transitive. Supports $expand.
            extensions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.extension'
              description: The collection of open extensions defined for the device. Read-only. Nullable.
            commands:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.command'
              description: Set of commands sent to this device.
          additionalProperties:
            type: object
    microsoft.graph.onlineMeeting:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: onlineMeeting
          type: object
          properties:
            allowAttendeeToEnableCamera:
              type: boolean
              description: Indicates whether attendees can turn on their camera.
              nullable: true
            allowAttendeeToEnableMic:
              type: boolean
              description: Indicates whether attendees can turn on their microphone.
              nullable: true
            allowedPresenters:
              $ref: '#/components/schemas/microsoft.graph.onlineMeetingPresenters'
            allowMeetingChat:
              $ref: '#/components/schemas/microsoft.graph.meetingChatMode'
            allowTeamworkReactions:
              type: boolean
              description: Indicates if Teams reactions are enabled for the meeting.
              nullable: true
            alternativeRecording:
              type: string
              description: The content stream of the alternative recording of a Microsoft Teams live event. Read-only.
              format: base64url
              nullable: true
            attendeeReport:
              type: string
              description: The content stream of the attendee report of a Teams live event. Read-only.
              format: base64url
              nullable: true
            audioConferencing:
              $ref: '#/components/schemas/microsoft.graph.audioConferencing'
            broadcastSettings:
              $ref: '#/components/schemas/microsoft.graph.broadcastMeetingSettings'
            capabilities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.meetingCapabilities'
            chatInfo:
              $ref: '#/components/schemas/microsoft.graph.chatInfo'
            creationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The meeting creation time in UTC. Read-only.
              format: date-time
              nullable: true
            endDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The meeting end time in UTC.
              format: date-time
              nullable: true
            externalId:
              type: string
              description: The external ID. A custom ID. Optional.
              nullable: true
            isBroadcast:
              type: boolean
              description: Indicates whether this is a Teams live event.
              nullable: true
            isEntryExitAnnounced:
              type: boolean
              description: Indicates whether to announce when callers join or leave.
              nullable: true
            joinInformation:
              $ref: '#/components/schemas/microsoft.graph.itemBody'
            joinMeetingIdSettings:
              $ref: '#/components/schemas/microsoft.graph.joinMeetingIdSettings'
            joinUrl:
              type: string
              nullable: true
            joinWebUrl:
              type: string
              description: The join URL of the online meeting. Read-only.
              nullable: true
            lobbyBypassSettings:
              $ref: '#/components/schemas/microsoft.graph.lobbyBypassSettings'
            participants:
              $ref: '#/components/schemas/microsoft.graph.meetingParticipants'
            recordAutomatically:
              type: boolean
              description: Indicates whether to record the meeting automatically.
              nullable: true
            recording:
              type: string
              description: The content stream of the recording of a Teams live event. Read-only.
              format: base64url
              nullable: true
            startDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The meeting start time in UTC.
              format: date-time
              nullable: true
            subject:
              type: string
              description: The subject of the online meeting.
              nullable: true
            videoTeleconferenceId:
              type: string
              description: The video teleconferencing ID. Read-only.
              nullable: true
            attendanceReports:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.meetingAttendanceReport'
              description: The attendance reports of an online meeting. Read-only.
            meetingAttendanceReport:
              $ref: '#/components/schemas/microsoft.graph.meetingAttendanceReport'
            registration:
              $ref: '#/components/schemas/microsoft.graph.meetingRegistration'
          additionalProperties:
            type: object
    microsoft.graph.presence:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: presence
          type: object
          properties:
            activity:
              type: string
              description: 'The supplemental information to a user''s availability. Possible values are Available, Away, BeRightBack, Busy, DoNotDisturb, InACall, InAConferenceCall, Inactive,InAMeeting, Offline, OffWork,OutOfOffice, PresenceUnknown,Presenting, UrgentInterruptionsOnly.'
              nullable: true
            availability:
              type: string
              description: 'The base presence information for a user. Possible values are Available, AvailableIdle,  Away, BeRightBack, Busy, BusyIdle, DoNotDisturb, Offline, PresenceUnknown'
              nullable: true
            outOfOfficeSettings:
              $ref: '#/components/schemas/microsoft.graph.outOfOfficeSettings'
          additionalProperties:
            type: object
    microsoft.graph.authentication:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: authentication
          type: object
          properties:
            emailMethods:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.emailAuthenticationMethod'
              description: Represents the email addresses registered to a user for authentication.
            fido2Methods:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.fido2AuthenticationMethod'
              description: Represents the FIDO2 security keys registered to a user for authentication.
            methods:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.authenticationMethod'
              description: Represents all authentication methods registered to a user.
            microsoftAuthenticatorMethods:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.microsoftAuthenticatorAuthenticationMethod'
              description: The details of the Microsoft Authenticator app registered to a user for authentication.
            operations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.longRunningOperation'
            passwordlessMicrosoftAuthenticatorMethods:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.passwordlessMicrosoftAuthenticatorAuthenticationMethod'
              description: Represents the Microsoft Authenticator Passwordless Phone Sign-in methods registered to a user for authentication.
            passwordMethods:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.passwordAuthenticationMethod'
              description: Represents the details of the password authentication method registered to a user for authentication.
            phoneMethods:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.phoneAuthenticationMethod'
              description: Represents the phone registered to a user for authentication.
            softwareOathMethods:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.softwareOathAuthenticationMethod'
            temporaryAccessPassMethods:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.temporaryAccessPassAuthenticationMethod'
              description: Represents a Temporary Access Pass registered to a user for authentication through time-limited passcodes.
            windowsHelloForBusinessMethods:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.windowsHelloForBusinessAuthenticationMethod'
              description: Represents the Windows Hello for Business authentication method registered to a user for authentication.
          additionalProperties:
            type: object
    microsoft.graph.tasks:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: tasks
          type: object
          properties:
            alltasks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.baseTask'
              description: All tasks in the users mailbox.
            lists:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.baseTaskList'
              description: The task lists in the users mailbox.
          additionalProperties:
            type: object
    microsoft.graph.chat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: chat
          type: object
          properties:
            chatType:
              $ref: '#/components/schemas/microsoft.graph.chatType'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time at which the chat was created. Read-only.
              format: date-time
              nullable: true
            lastUpdatedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time at which the chat was renamed or list of members were last changed. Read-only.
              format: date-time
              nullable: true
            onlineMeetingInfo:
              $ref: '#/components/schemas/microsoft.graph.teamworkOnlineMeetingInfo'
            tenantId:
              type: string
              description: The identifier of the tenant in which the chat was created. Read-only.
              nullable: true
            topic:
              type: string
              description: (Optional) Subject or topic for the chat. Only available for group chats.
              nullable: true
            viewpoint:
              $ref: '#/components/schemas/microsoft.graph.chatViewpoint'
            webUrl:
              type: string
              description: 'The URL for the chat in Microsoft Teams. The URL should be treated as an opaque blob, and not parsed. Read-only.'
              nullable: true
            installedApps:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.teamsAppInstallation'
              description: A collection of all the apps in the chat. Nullable.
            lastMessagePreview:
              $ref: '#/components/schemas/microsoft.graph.chatMessageInfo'
            members:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.conversationMember'
              description: A collection of all the members in the chat. Nullable.
            messages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.chatMessage'
              description: A collection of all the messages in the chat. Nullable.
            operations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.teamsAsyncOperation'
              description: A collection of all the Teams async operations that ran or are running on the chat. Nullable.
            permissionGrants:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.resourceSpecificPermissionGrant'
              description: A collection of permissions granted to apps for the chat.
            pinnedMessages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.pinnedChatMessageInfo'
              description: A collection of all the pinned messages in the chat. Nullable.
            tabs:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.teamsTab'
              description: A collection of all the tabs in the chat. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.team:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: team
          type: object
          properties:
            classification:
              type: string
              description: An optional label. Typically describes the data or business sensitivity of the team. Must match one of a pre-configured set in the tenant's directory.
              nullable: true
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Timestamp at which the team was created.
              format: date-time
              nullable: true
            description:
              type: string
              description: 'An optional description for the team. Maximum length: 1024 characters.'
              nullable: true
            discoverySettings:
              $ref: '#/components/schemas/microsoft.graph.teamDiscoverySettings'
            displayName:
              type: string
              description: The name of the team.
              nullable: true
            funSettings:
              $ref: '#/components/schemas/microsoft.graph.teamFunSettings'
            guestSettings:
              $ref: '#/components/schemas/microsoft.graph.teamGuestSettings'
            internalId:
              type: string
              description: A unique ID for the team that has been used in a few places such as the audit log/Office 365 Management Activity API.
              nullable: true
            isArchived:
              type: boolean
              description: Whether this team is in read-only mode.
              nullable: true
            isMembershipLimitedToOwners:
              type: boolean
              description: 'If set to true, the team is currently in the owner-only team membership state and not accessible by other team members, such as students.'
              nullable: true
            memberSettings:
              $ref: '#/components/schemas/microsoft.graph.teamMemberSettings'
            messagingSettings:
              $ref: '#/components/schemas/microsoft.graph.teamMessagingSettings'
            specialization:
              $ref: '#/components/schemas/microsoft.graph.teamSpecialization'
            summary:
              $ref: '#/components/schemas/microsoft.graph.teamSummary'
            tenantId:
              type: string
              description: The ID of the Azure Active Directory tenant.
              nullable: true
            visibility:
              $ref: '#/components/schemas/microsoft.graph.teamVisibilityType'
            webUrl:
              type: string
              description: 'A hyperlink that will go to the team in the Microsoft Teams client. This is the URL that you get when you right-click a team in the Microsoft Teams client and select Get link to team. This URL should be treated as an opaque blob, and not parsed.'
              nullable: true
            allChannels:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.channel'
              description: List of channels either hosted in or shared with the team (incoming channels).
            channels:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.channel'
              description: The collection of channels and messages associated with the team.
            group:
              $ref: '#/components/schemas/microsoft.graph.group'
            incomingChannels:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.channel'
            installedApps:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.teamsAppInstallation'
              description: The apps installed in this team.
            members:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.conversationMember'
              description: Members and owners of the team.
            operations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.teamsAsyncOperation'
              description: The async operations that ran or are running on this team.
            owners:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.user'
              description: 'The list of this team''s owners. Currently, when creating a team using application permissions, exactly one owner must be specified. When using user delegated permissions, no owner can be specified (the current user is the owner). Owner must be specified as an object ID (GUID), not a UPN.'
            permissionGrants:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.resourceSpecificPermissionGrant'
              description: A collection of permissions granted to apps to access the team.
            photo:
              $ref: '#/components/schemas/microsoft.graph.profilePhoto'
            primaryChannel:
              $ref: '#/components/schemas/microsoft.graph.channel'
            tags:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.teamworkTag'
              description: The tags associated with the team.
            template:
              $ref: '#/components/schemas/microsoft.graph.teamsTemplate'
            schedule:
              $ref: '#/components/schemas/microsoft.graph.schedule'
          additionalProperties:
            type: object
    microsoft.graph.userTeamwork:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: userTeamwork
          type: object
          properties:
            associatedTeams:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.associatedTeamInfo'
              description: The list of associatedTeamInfo objects that a user is associated with.
            installedApps:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.userScopeTeamsAppInstallation'
              description: The apps installed in the personal scope of this user.
          additionalProperties:
            type: object
    microsoft.graph.todo:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: todo
          type: object
          properties:
            lists:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.todoTaskList'
              description: The task lists in the users mailbox.
          additionalProperties:
            type: object
    microsoft.graph.commentAction:
      title: commentAction
      type: object
      properties:
        isReply:
          type: boolean
          description: 'If true, this activity was a reply to an existing comment thread.'
          nullable: true
        parentAuthor:
          $ref: '#/components/schemas/microsoft.graph.identitySet'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.identitySet'
          description: The identities of the users participating in this comment thread.
      additionalProperties:
        type: object
    microsoft.graph.createAction:
      title: createAction
      type: object
      additionalProperties:
        type: object
    microsoft.graph.deleteAction:
      title: deleteAction
      type: object
      properties:
        name:
          type: string
          description: The name of the item that was deleted.
          nullable: true
        objectType:
          type: string
          description: 'File or Folder, depending on the type of the deleted item.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.editAction:
      title: editAction
      type: object
      additionalProperties:
        type: object
    microsoft.graph.mentionAction:
      title: mentionAction
      type: object
      properties:
        mentionees:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.identitySet'
          description: The identities of the users mentioned in this action.
      additionalProperties:
        type: object
    microsoft.graph.moveAction:
      title: moveAction
      type: object
      properties:
        from:
          type: string
          description: The name of the location the item was moved from.
          nullable: true
        to:
          type: string
          description: The name of the location the item was moved to.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.renameAction:
      title: renameAction
      type: object
      properties:
        newName:
          type: string
          description: The new name of the item.
          nullable: true
        oldName:
          type: string
          description: The previous name of the item.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.restoreAction:
      title: restoreAction
      type: object
      additionalProperties:
        type: object
    microsoft.graph.shareAction:
      title: shareAction
      type: object
      properties:
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.identitySet'
          description: The identities the item was shared with in this action.
      additionalProperties:
        type: object
    microsoft.graph.versionAction:
      title: versionAction
      type: object
      properties:
        newVersion:
          type: string
          description: The name of the new version that was created by this action.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.album:
      title: album
      type: object
      properties:
        coverImageItemId:
          type: string
          description: 'Unique identifier of the [driveItem][] that is the cover of the album.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.hashes:
      title: hashes
      type: object
      properties:
        crc32Hash:
          type: string
          description: The CRC32 value of the file (if available). Read-only.
          nullable: true
        quickXorHash:
          type: string
          description: A proprietary hash of the file that can be used to determine if the contents of the file have changed (if available). Read-only.
          nullable: true
        sha1Hash:
          type: string
          description: SHA1 hash for the contents of the file (if available). Read-only.
          nullable: true
        sha256Hash:
          type: string
          description: SHA256 hash for the contents of the file (if available). Read-only.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.folderView:
      title: folderView
      type: object
      properties:
        sortBy:
          type: string
          description: The method by which the folder should be sorted.
          nullable: true
        sortOrder:
          type: string
          description: 'If true, indicates that items should be sorted in descending order. Otherwise, items should be sorted ascending.'
          nullable: true
        viewType:
          type: string
          description: The type of view that should be used to represent the folder.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.mediaSource:
      title: mediaSource
      type: object
      properties:
        contentCategory:
          $ref: '#/components/schemas/microsoft.graph.mediaSourceContentCategory'
      additionalProperties:
        type: object
    microsoft.graph.pendingContentUpdate:
      title: pendingContentUpdate
      type: object
      properties:
        queuedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time the pending binary operation was queued in UTC time. Read-only.
          format: date-time
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.driveItemSourceApplication:
      title: driveItemSourceApplication
      enum:
        - teams
        - yammer
        - sharePoint
        - oneDrive
        - stream
        - powerPoint
        - office
        - unknownFutureValue
      type: string
    microsoft.graph.workbookApplication:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookApplication
          type: object
          properties:
            calculationMode:
              type: string
              description: 'Returns the calculation mode used in the workbook. Possible values are: Automatic, AutomaticExceptTables, Manual.'
          additionalProperties:
            type: object
    microsoft.graph.workbookComment:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookComment
          type: object
          properties:
            content:
              type: string
              description: The content of the comment.
              nullable: true
            contentType:
              type: string
              description: Indicates the type for the comment.
            replies:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookCommentReply'
              description: Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.workbookFunctions:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookFunctions
          type: object
          additionalProperties:
            type: object
    microsoft.graph.workbookNamedItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookNamedItem
          type: object
          properties:
            comment:
              type: string
              description: Represents the comment associated with this name.
              nullable: true
            name:
              type: string
              description: The name of the object. Read-only.
              nullable: true
            scope:
              type: string
              description: Indicates whether the name is scoped to the workbook or to a specific worksheet. Read-only.
            type:
              type: string
              description: 'Indicates what type of reference is associated with the name. Possible values are: String, Integer, Double, Boolean, Range. Read-only.'
              nullable: true
            value:
              $ref: '#/components/schemas/microsoft.graph.Json'
            visible:
              type: boolean
              description: Specifies whether the object is visible or not.
            worksheet:
              $ref: '#/components/schemas/microsoft.graph.workbookWorksheet'
          additionalProperties:
            type: object
    microsoft.graph.workbookOperation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookOperation
          type: object
          properties:
            error:
              $ref: '#/components/schemas/microsoft.graph.workbookOperationError'
            resourceLocation:
              type: string
              description: The resource URI for the result.
              nullable: true
            status:
              $ref: '#/components/schemas/microsoft.graph.workbookOperationStatus'
          additionalProperties:
            type: object
    microsoft.graph.workbookTable:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookTable
          type: object
          properties:
            highlightFirstColumn:
              type: boolean
              description: Indicates whether the first column contains special formatting.
            highlightLastColumn:
              type: boolean
              description: Indicates whether the last column contains special formatting.
            legacyId:
              type: string
              description: Legacy Id used in older Excle clients. The value of the identifier remains the same even when the table is renamed. This property should be interpreted as an opaque string value and should not be parsed to any other type. Read-only.
              nullable: true
            name:
              type: string
              description: Name of the table.
              nullable: true
            showBandedColumns:
              type: boolean
              description: Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.
            showBandedRows:
              type: boolean
              description: Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.
            showFilterButton:
              type: boolean
              description: Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.
            showHeaders:
              type: boolean
              description: Indicates whether the header row is visible or not. This value can be set to show or remove the header row.
            showTotals:
              type: boolean
              description: Indicates whether the total row is visible or not. This value can be set to show or remove the total row.
            style:
              type: string
              description: 'Constant value that represents the Table style. Possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.'
              nullable: true
            columns:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookTableColumn'
              description: Represents a collection of all the columns in the table. Read-only.
            rows:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookTableRow'
              description: Represents a collection of all the rows in the table. Read-only.
            sort:
              $ref: '#/components/schemas/microsoft.graph.workbookTableSort'
            worksheet:
              $ref: '#/components/schemas/microsoft.graph.workbookWorksheet'
          additionalProperties:
            type: object
    microsoft.graph.workbookWorksheet:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookWorksheet
          type: object
          properties:
            name:
              type: string
              description: The display name of the worksheet.
              nullable: true
            position:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The zero-based position of the worksheet within the workbook.
              format: int32
            visibility:
              type: string
              description: 'The Visibility of the worksheet. The possible values are: Visible, Hidden, VeryHidden.'
            charts:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookChart'
              description: Returns collection of charts that are part of the worksheet. Read-only.
            names:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookNamedItem'
              description: Returns collection of names that are associated with the worksheet. Read-only.
            pivotTables:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookPivotTable'
              description: Collection of PivotTables that are part of the worksheet.
            protection:
              $ref: '#/components/schemas/microsoft.graph.workbookWorksheetProtection'
            tables:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookTable'
              description: Collection of tables that are part of the worksheet. Read-only.
          additionalProperties:
            type: object
    microsoft.graph.thumbnail:
      title: thumbnail
      type: object
      properties:
        content:
          type: string
          description: The content stream for the thumbnail.
          format: base64url
          nullable: true
        height:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'The height of the thumbnail, in pixels.'
          format: int32
          nullable: true
        sourceItemId:
          type: string
          description: The unique identifier of the item that provided the thumbnail. This is only available when a folder thumbnail is requested.
          nullable: true
        url:
          type: string
          description: The URL used to fetch the thumbnail content.
          nullable: true
        width:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'The width of the thumbnail, in pixels.'
          format: int32
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.longRunningOperationStatus:
      title: longRunningOperationStatus
      enum:
        - notStarted
        - running
        - succeeded
        - failed
        - unknownFutureValue
      type: string
    microsoft.graph.publicErrorDetail:
      title: publicErrorDetail
      type: object
      properties:
        code:
          type: string
          description: The error code.
          nullable: true
        message:
          type: string
          description: The error message.
          nullable: true
        target:
          type: string
          description: The target of the error.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.publicInnerError:
      title: publicInnerError
      type: object
      properties:
        code:
          type: string
          description: The error code.
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.publicErrorDetail'
          description: A collection of error details.
        message:
          type: string
          description: The error message.
          nullable: true
        target:
          type: string
          description: The target of the error.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.externalLink:
      title: externalLink
      type: object
      properties:
        href:
          type: string
          description: The url of the link.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.operationStatus:
      title: operationStatus
      enum:
        - NotStarted
        - Running
        - Completed
        - Failed
      type: string
    microsoft.graph.sitePageData:
      title: sitePageData
      type: object
      additionalProperties:
        type: object
    microsoft.graph.sharePointIdentity:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.identity'
        - title: sharePointIdentity
          type: object
          properties:
            loginName:
              type: string
              description: The sign in name of the SharePoint identity.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.accessAction:
      title: accessAction
      type: object
      additionalProperties:
        type: object
    microsoft.graph.ODataErrors.MainError:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.ODataErrors.ErrorDetails'
        innererror:
          $ref: '#/components/schemas/microsoft.graph.ODataErrors.InnerError'
      additionalProperties:
        type: object
    microsoft.graph.automaticRepliesSetting:
      title: automaticRepliesSetting
      type: object
      properties:
        externalAudience:
          $ref: '#/components/schemas/microsoft.graph.externalAudienceScope'
        externalReplyMessage:
          type: string
          description: 'The automatic reply to send to the specified external audience, if Status is AlwaysEnabled or Scheduled.'
          nullable: true
        internalReplyMessage:
          type: string
          description: 'The automatic reply to send to the audience internal to the signed-in user''s organization, if Status is AlwaysEnabled or Scheduled.'
          nullable: true
        scheduledEndDateTime:
          $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
        scheduledStartDateTime:
          $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
        status:
          $ref: '#/components/schemas/microsoft.graph.automaticRepliesStatus'
      additionalProperties:
        type: object
    microsoft.graph.delegateMeetingMessageDeliveryOptions:
      title: delegateMeetingMessageDeliveryOptions
      enum:
        - sendToDelegateAndInformationToPrincipal
        - sendToDelegateAndPrincipal
        - sendToDelegateOnly
      type: string
    microsoft.graph.localeInfo:
      title: localeInfo
      type: object
      properties:
        displayName:
          type: string
          description: 'A name representing the user''s locale in natural language, for example, ''English (United States)''.'
          nullable: true
        locale:
          type: string
          description: 'A locale representation for the user, which includes the user''s preferred language and country/region. For example, ''en-us''. The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes as defined in ISO 3166-1 alpha-2.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.userPurpose:
      title: userPurpose
      enum:
        - unknown
        - user
        - linked
        - shared
        - room
        - equipment
        - others
        - unknownFutureValue
      type: string
    microsoft.graph.mailboxRecipientType:
      title: mailboxRecipientType
      enum:
        - unknown
        - user
        - linked
        - shared
        - room
        - equipment
        - others
      type: string
    microsoft.graph.workingHours:
      title: workingHours
      type: object
      properties:
        daysOfWeek:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.dayOfWeek'
          description: The days of the week on which the user works.
        endTime:
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$'
          type: string
          description: The time of the day that the user stops working.
          format: time
          nullable: true
        startTime:
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$'
          type: string
          description: The time of the day that the user starts working.
          format: time
          nullable: true
        timeZone:
          $ref: '#/components/schemas/microsoft.graph.timeZoneBase'
      additionalProperties:
        type: object
    microsoft.graph.printerShare:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.printerBase'
        - title: printerShare
          type: object
          properties:
            allowAllUsers:
              type: boolean
              description: 'If true, all users and groups will be granted access to this printer share. This supersedes the allow lists defined by the allowedUsers and allowedGroups navigation properties.'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The DateTimeOffset when the printer share was created. Read-only.
              format: date-time
            viewPoint:
              $ref: '#/components/schemas/microsoft.graph.printerShareViewpoint'
            allowedGroups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.group'
              description: The groups whose users have access to print using the printer.
            allowedUsers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.user'
              description: The users who have access to print using the printer.
            printer:
              $ref: '#/components/schemas/microsoft.graph.printer'
          additionalProperties:
            type: object
    microsoft.graph.settings:
      title: settings
      type: object
      properties:
        hasGraphMailbox:
          type: boolean
          description: Specifies if the user's primary mailbox is hosted in the cloud and is enabled for Microsoft Graph.
        hasLicense:
          type: boolean
          description: Specifies if the user has a MyAnalytics license assigned.
        hasOptedOut:
          type: boolean
          description: Specifies if the user opted out of MyAnalytics.
      additionalProperties:
        type: object
    microsoft.graph.activityStatistics:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: activityStatistics
          type: object
          properties:
            activity:
              $ref: '#/components/schemas/microsoft.graph.analyticsActivityType'
            duration:
              pattern: '^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$'
              type: string
              description: Total hours spent on the activity. The value is represented in ISO 8601 format for durations.
              format: duration
            endDate:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              description: 'Date when the activity ended, expressed in ISO 8601 format for calendar dates. For example, the property value could be ''2019-07-03'' that follows the YYYY-MM-DD format.'
              format: date
            startDate:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              description: 'Date when the activity started, expressed in ISO 8601 format for calendar dates. For example, the property value could be ''2019-07-04'' that follows the YYYY-MM-DD format.'
              format: date
            timeZoneUsed:
              type: string
              description: 'The time zone that the user sets in Microsoft Outlook is used for the computation. For example, the property value could be ''Pacific Standard Time.'''
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.cloudPcLoginResult:
      title: cloudPcLoginResult
      type: object
      properties:
        time:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The time of the Cloud PC sign in action. The timestamp is shown in ISO 8601 format and Coordinated Universal Time (UTC). For example, midnight UTC on Jan 1, 2014 appears as ''2014-01-01T00:00:00Z''. Read-only.'
          format: date-time
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.cloudPcRemoteActionResult:
      title: cloudPcRemoteActionResult
      type: object
      properties:
        actionName:
          type: string
          description: 'The specified action. Supported values in the Microsoft Endpoint Manager portal are: Reprovision, Resize, Restore. Supported values in enterprise Cloud PC devices are: Reboot, Rename, Reprovision, Troubleshoot.'
          nullable: true
        actionState:
          $ref: '#/components/schemas/microsoft.graph.actionState'
        cloudPcId:
          type: string
          description: The ID of the Cloud PC device on which the remote action is performed. Read-only.
          nullable: true
        lastUpdatedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'Last update time for action. The Timestamp is shown in ISO 8601 format and Coordinated Universal Time (UTC). For example, midnight UTC on Jan 1, 2014 appears as ''2014-01-01T00:00:00Z''.'
          format: date-time
          nullable: true
        managedDeviceId:
          type: string
          description: The ID of the Intune managed device on which the remote action is performed. Read-only.
          nullable: true
        startDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'Time the action was initiated. The Timestamp is shown in ISO 8601 format and Coordinated Universal Time (UTC). For example, midnight UTC on Jan 1, 2014 appears as ''2014-01-01T00:00:00Z''.'
          format: date-time
          nullable: true
        statusDetails:
          $ref: '#/components/schemas/microsoft.graph.cloudPcStatusDetails'
      additionalProperties:
        type: object
    microsoft.graph.cloudPcOperatingSystem:
      title: cloudPcOperatingSystem
      enum:
        - windows10
        - windows11
        - unknownFutureValue
      type: string
    microsoft.graph.cloudPcServicePlanType:
      title: cloudPcServicePlanType
      enum:
        - enterprise
        - business
        - unknownFutureValue
      type: string
    microsoft.graph.cloudPcStatus:
      title: cloudPcStatus
      enum:
        - notProvisioned
        - provisioning
        - provisioned
        - inGracePeriod
        - deprovisioning
        - failed
        - provisionedWithWarnings
        - resizing
        - restoring
        - pendingProvision
        - unknownFutureValue
      type: string
    microsoft.graph.cloudPcStatusDetails:
      title: cloudPcStatusDetails
      type: object
      properties:
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.keyValuePair'
          description: Any additional information about the Cloud PC status.
        code:
          type: string
          description: The code associated with the Cloud PC status.
          nullable: true
        message:
          type: string
          description: The status message.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.cloudPcUserAccountType:
      title: cloudPcUserAccountType
      enum:
        - standardUser
        - administrator
        - unknownFutureValue
      type: string
    microsoft.graph.usageRightState:
      title: usageRightState
      enum:
        - active
        - inactive
        - warning
        - suspended
        - unknownFutureValue
      type: string
    microsoft.graph.bitlocker:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: bitlocker
          type: object
          properties:
            recoveryKeys:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.bitlockerRecoveryKey'
              description: The recovery keys associated with the bitlocker entity.
          additionalProperties:
            type: object
    microsoft.graph.dataLossPreventionPolicy:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: dataLossPreventionPolicy
          type: object
          properties:
            name:
              type: string
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.sensitivityLabel:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: sensitivityLabel
          type: object
          properties:
            applicableTo:
              $ref: '#/components/schemas/microsoft.graph.sensitivityLabelTarget'
            applicationMode:
              $ref: '#/components/schemas/microsoft.graph.applicationMode'
            assignedPolicies:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.labelPolicy'
            autoLabeling:
              $ref: '#/components/schemas/microsoft.graph.autoLabeling'
            description:
              type: string
              nullable: true
            displayName:
              type: string
              nullable: true
            isDefault:
              type: boolean
              nullable: true
            isEndpointProtectionEnabled:
              type: boolean
              nullable: true
            labelActions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.labelActionBase'
            name:
              type: string
              nullable: true
            priority:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              format: int32
              nullable: true
            toolTip:
              type: string
              nullable: true
            sublabels:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sensitivityLabel'
          additionalProperties:
            type: object
    microsoft.graph.sensitivityPolicySettings:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: sensitivityPolicySettings
          type: object
          properties:
            applicableTo:
              $ref: '#/components/schemas/microsoft.graph.sensitivityLabelTarget'
            downgradeSensitivityRequiresJustification:
              type: boolean
              nullable: true
            helpWebUrl:
              type: string
              nullable: true
            isMandatory:
              type: boolean
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.informationProtectionPolicy:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: informationProtectionPolicy
          type: object
          properties:
            labels:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.informationProtectionLabel'
          additionalProperties:
            type: object
    microsoft.graph.threatAssessmentRequest:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: threatAssessmentRequest
          type: object
          properties:
            category:
              $ref: '#/components/schemas/microsoft.graph.threatCategory'
            contentType:
              $ref: '#/components/schemas/microsoft.graph.threatAssessmentContentType'
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.'
              format: date-time
              nullable: true
            expectedAssessment:
              $ref: '#/components/schemas/microsoft.graph.threatExpectedAssessment'
            requestSource:
              $ref: '#/components/schemas/microsoft.graph.threatAssessmentRequestSource'
            status:
              $ref: '#/components/schemas/microsoft.graph.threatAssessmentStatus'
            results:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.threatAssessmentResult'
              description: 'A collection of threat assessment results. Read-only. By default, a GET /threatAssessmentRequests/{id} does not return this property unless you apply $expand on it.'
          additionalProperties:
            type: object
    microsoft.graph.servicePlanInfo:
      title: servicePlanInfo
      type: object
      properties:
        appliesTo:
          type: string
          description: The object the service plan can be assigned to. The possible values are:User - service plan can be assigned to individual users.Company - service plan can be assigned to the entire tenant.
          nullable: true
        provisioningStatus:
          type: string
          description: 'The provisioning status of the service plan. The possible values are:Success - Service is fully provisioned.Disabled - Service has been disabled.ErrorStatus - The service plan has not been provisioned and is in an error state.PendingInput - Service is not yet provisioned; awaiting service confirmation.PendingActivation - Service is provisioned but requires explicit activation by administrator (for example, Intune_O365 service plan)PendingProvisioning - Microsoft has added a new service to the product SKU and it has not been activated in the tenant, yet.'
          nullable: true
        servicePlanId:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          description: The unique identifier of the service plan.
          format: uuid
          nullable: true
        servicePlanName:
          type: string
          description: The name of the service plan.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.onlineMeetingProviderType:
      title: onlineMeetingProviderType
      enum:
        - unknown
        - skypeForBusiness
        - skypeForConsumer
        - teamsForBusiness
      type: string
    microsoft.graph.calendarColor:
      title: calendarColor
      enum:
        - auto
        - lightBlue
        - lightGreen
        - lightOrange
        - lightGray
        - lightYellow
        - lightTeal
        - lightPink
        - lightBrown
        - lightRed
        - maxColor
      type: string
    microsoft.graph.emailAddress:
      title: emailAddress
      type: object
      properties:
        address:
          type: string
          description: The email address of an entity instance.
          nullable: true
        name:
          type: string
          description: The display name of an entity instance.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.calendarPermission:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: calendarPermission
          type: object
          properties:
            allowedRoles:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.calendarRoleType'
              description: 'List of allowed sharing or delegating permission levels for the calendar. Possible values are: none, freeBusyRead, limitedRead, read, write, delegateWithoutPrivateEventAccess, delegateWithPrivateEventAccess, custom.'
            emailAddress:
              $ref: '#/components/schemas/microsoft.graph.emailAddress'
            isInsideOrganization:
              type: boolean
              description: True if the user in context (sharee or delegate) is inside the same organization as the calendar owner.
              nullable: true
            isRemovable:
              type: boolean
              description: 'True if the user can be removed from the list of sharees or delegates for the specified calendar, false otherwise. The ''My organization'' user determines the permissions other people within your organization have to the given calendar. You cannot remove ''My organization'' as a sharee to a calendar.'
              nullable: true
            role:
              $ref: '#/components/schemas/microsoft.graph.calendarRoleType'
          additionalProperties:
            type: object
    microsoft.graph.multiValueLegacyExtendedProperty:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: multiValueLegacyExtendedProperty
          type: object
          properties:
            value:
              type: array
              items:
                type: string
                nullable: true
              description: A collection of property values.
          additionalProperties:
            type: object
    microsoft.graph.singleValueLegacyExtendedProperty:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: singleValueLegacyExtendedProperty
          type: object
          properties:
            value:
              type: string
              description: A property value.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.outlookItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: outlookItem
          type: object
          properties:
            categories:
              type: array
              items:
                type: string
                nullable: true
              description: The categories associated with the item
            changeKey:
              type: string
              description: 'Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.'
              nullable: true
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.attendee:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.attendeeBase'
        - title: attendee
          type: object
          properties:
            proposedNewTime:
              $ref: '#/components/schemas/microsoft.graph.timeSlot'
            status:
              $ref: '#/components/schemas/microsoft.graph.responseStatus'
          additionalProperties:
            type: object
    microsoft.graph.itemBody:
      title: itemBody
      type: object
      properties:
        content:
          type: string
          description: The content of the item.
          nullable: true
        contentType:
          $ref: '#/components/schemas/microsoft.graph.bodyType'
      additionalProperties:
        type: object
    microsoft.graph.dateTimeTimeZone:
      title: dateTimeTimeZone
      type: object
      properties:
        dateTime:
          type: string
          description: 'A single point of time in a combined date and time representation ({date}T{time}). For example, ''2019-04-16T09:00:00''.'
        timeZone:
          type: string
          description: 'Represents a time zone, for example, ''Pacific Standard Time''. See below for possible values.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.importance:
      title: importance
      enum:
        - low
        - normal
        - high
      type: string
    microsoft.graph.location:
      title: location
      type: object
      properties:
        address:
          $ref: '#/components/schemas/microsoft.graph.physicalAddress'
        coordinates:
          $ref: '#/components/schemas/microsoft.graph.outlookGeoCoordinates'
        displayName:
          type: string
          description: The name associated with the location.
          nullable: true
        locationEmailAddress:
          type: string
          description: Optional email address of the location.
          nullable: true
        locationType:
          $ref: '#/components/schemas/microsoft.graph.locationType'
        locationUri:
          type: string
          description: Optional URI representing the location.
          nullable: true
        uniqueId:
          type: string
          description: For internal use only.
          nullable: true
        uniqueIdType:
          $ref: '#/components/schemas/microsoft.graph.locationUniqueIdType'
      additionalProperties:
        type: object
    microsoft.graph.onlineMeetingInfo:
      title: onlineMeetingInfo
      type: object
      properties:
        conferenceId:
          type: string
          description: The ID of the conference.
          nullable: true
        joinUrl:
          type: string
          description: The external link that launches the online meeting. This is a URL that clients will launch into a browser and will redirect the user to join the meeting.
          nullable: true
        phones:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.phone'
          description: All of the phone numbers associated with this conference.
        quickDial:
          type: string
          description: The pre-formatted quickdial for this call.
          nullable: true
        tollFreeNumbers:
          type: array
          items:
            type: string
            nullable: true
          description: The toll free numbers that can be used to join the conference.
        tollNumber:
          type: string
          description: The toll number that can be used to join the conference.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.recipient:
      title: recipient
      type: object
      properties:
        emailAddress:
          $ref: '#/components/schemas/microsoft.graph.emailAddress'
      additionalProperties:
        type: object
    microsoft.graph.patternedRecurrence:
      title: patternedRecurrence
      type: object
      properties:
        pattern:
          $ref: '#/components/schemas/microsoft.graph.recurrencePattern'
        range:
          $ref: '#/components/schemas/microsoft.graph.recurrenceRange'
      additionalProperties:
        type: object
    microsoft.graph.responseStatus:
      title: responseStatus
      type: object
      properties:
        response:
          $ref: '#/components/schemas/microsoft.graph.responseType'
        time:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The date and time that the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
          format: date-time
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.sensitivity:
      title: sensitivity
      enum:
        - normal
        - personal
        - private
        - confidential
      type: string
    microsoft.graph.freeBusyStatus:
      title: freeBusyStatus
      enum:
        - unknown
        - free
        - tentative
        - busy
        - oof
        - workingElsewhere
      type: string
    microsoft.graph.eventType:
      title: eventType
      enum:
        - singleInstance
        - occurrence
        - exception
        - seriesMaster
      type: string
    microsoft.graph.attachment:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: attachment
          type: object
          properties:
            contentType:
              type: string
              description: The MIME type.
              nullable: true
            isInline:
              type: boolean
              description: 'true if the attachment is an inline attachment; otherwise, false.'
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            name:
              type: string
              description: The display name of the attachment. This does not need to be the actual file name.
              nullable: true
            size:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The length of the attachment in bytes.
              format: int32
          additionalProperties:
            type: object
    microsoft.graph.typedEmailAddress:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.emailAddress'
        - title: typedEmailAddress
          type: object
          properties:
            otherLabel:
              type: string
              description: 'To specify a custom type of email address, set type to other, and assign otherLabel to a custom string. For example, you may use a specific email address for your volunteer activities. Set type to other, and set otherLabel to a custom string such as Volunteer work.'
              nullable: true
            type:
              $ref: '#/components/schemas/microsoft.graph.emailType'
          additionalProperties:
            type: object
    microsoft.graph.followupFlag:
      title: followupFlag
      type: object
      properties:
        completedDateTime:
          $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
        dueDateTime:
          $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
        flagStatus:
          $ref: '#/components/schemas/microsoft.graph.followupFlagStatus'
        startDateTime:
          $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
      additionalProperties:
        type: object
    microsoft.graph.phone:
      title: phone
      type: object
      properties:
        number:
          type: string
          description: The phone number.
          nullable: true
        type:
          $ref: '#/components/schemas/microsoft.graph.phoneType'
      additionalProperties:
        type: object
    microsoft.graph.physicalAddress:
      title: physicalAddress
      type: object
      properties:
        city:
          type: string
          description: The city.
          nullable: true
        countryOrRegion:
          type: string
          description: 'The country or region. It''s a free-format string value, for example, ''United States''.'
          nullable: true
        postalCode:
          type: string
          description: The postal code.
          nullable: true
        postOfficeBox:
          type: string
          description: The post office box number.
          nullable: true
        state:
          type: string
          description: The state.
          nullable: true
        street:
          type: string
          description: The street.
          nullable: true
        type:
          $ref: '#/components/schemas/microsoft.graph.physicalAddressType'
      additionalProperties:
        type: object
    microsoft.graph.website:
      title: website
      type: object
      properties:
        address:
          type: string
          description: The URL of the website.
          nullable: true
        displayName:
          type: string
          description: The display name of the web site.
          nullable: true
        type:
          $ref: '#/components/schemas/microsoft.graph.websiteType'
      additionalProperties:
        type: object
    microsoft.graph.inferenceClassificationOverride:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: inferenceClassificationOverride
          type: object
          properties:
            classifyAs:
              $ref: '#/components/schemas/microsoft.graph.inferenceClassificationType'
            senderEmailAddress:
              $ref: '#/components/schemas/microsoft.graph.emailAddress'
          additionalProperties:
            type: object
    microsoft.graph.assignedLabel:
      title: assignedLabel
      type: object
      properties:
        displayName:
          type: string
          description: The display name of the label. Read-only.
          nullable: true
        labelId:
          type: string
          description: The unique identifier of the label.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.licenseProcessingState:
      title: licenseProcessingState
      type: object
      properties:
        state:
          type: string
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.groupWritebackConfiguration:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.writebackConfiguration'
        - title: groupWritebackConfiguration
          type: object
          properties:
            onPremisesGroupType:
              type: string
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.groupAccessType:
      title: groupAccessType
      enum:
        - none
        - private
        - secret
        - public
      type: string
    microsoft.graph.membershipRuleProcessingStatus:
      title: membershipRuleProcessingStatus
      type: object
      properties:
        errorMessage:
          type: string
          description: Detailed error message if dynamic group processing ran into an error.  Optional. Read-only.
          nullable: true
        lastMembershipUpdated:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Most recent date and time when membership of a dynamic group was updated.  Optional. Read-only.
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/microsoft.graph.MembershipRuleProcessingStatusDetails'
      additionalProperties:
        type: object
    microsoft.graph.endpoint:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.directoryObject'
        - title: endpoint
          type: object
          properties:
            capability:
              type: string
              description: 'Describes the capability that is associated with this resource. (e.g. Messages, Conversations, etc.) Not nullable. Read-only.'
            providerId:
              type: string
              description: Application id of the publishing underlying service. Not nullable. Read-only.
              nullable: true
            providerName:
              type: string
              description: Name of the publishing underlying service. Read-only.
              nullable: true
            providerResourceId:
              type: string
              description: 'For Microsoft 365 groups, this is set to a well-known name for the resource (e.g. Yammer.FeedURL etc.). Not nullable. Read-only.'
              nullable: true
            uri:
              type: string
              description: URL of the published resource. Not nullable. Read-only.
          additionalProperties:
            type: object
    microsoft.graph.resourceSpecificPermissionGrant:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.directoryObject'
        - title: resourceSpecificPermissionGrant
          type: object
          properties:
            clientAppId:
              type: string
              description: ID of the service principal of the Azure AD app that has been granted access. Read-only.
              nullable: true
            clientId:
              type: string
              description: ID of the Azure AD app that has been granted access. Read-only.
              nullable: true
            permission:
              type: string
              description: The name of the resource-specific permission. Read-only.
              nullable: true
            permissionType:
              type: string
              description: 'The type of permission. Possible values are: Application, Delegated. Read-only.'
              nullable: true
            resourceAppId:
              type: string
              description: ID of the Azure AD app that is hosting the resource. Read-only.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.directorySetting:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: directorySetting
          type: object
          properties:
            displayName:
              type: string
              description: 'Display name of this group of settings, which comes from the associated template. Read-only.'
              nullable: true
            templateId:
              type: string
              description: Unique identifier for the template used to create this group of settings. Read-only.
              nullable: true
            values:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.settingValue'
              description: Collection of name-value pairs corresponding to the name and defaultValue properties in the referenced directorySettingTemplates object.
          additionalProperties:
            type: object
    microsoft.graph.conversation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: conversation
          type: object
          properties:
            hasAttachments:
              type: boolean
              description: 'Indicates whether any of the posts within this Conversation has at least one attachment. Supports $filter (eq, ne) and $search.'
            lastDeliveredDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Supports $filter (eq, ne, le, ge).'
              format: date-time
            preview:
              type: string
              description: A short summary from the body of the latest post in this conversation.
            topic:
              type: string
              description: 'The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated.'
            uniqueSenders:
              type: array
              items:
                type: string
              description: All the users that sent a message to this Conversation.
            threads:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.conversationThread'
              description: A collection of all the conversation threads in the conversation. A navigation property. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.conversationThread:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: conversationThread
          type: object
          properties:
            ccRecipients:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.recipient'
              description: 'The Cc: recipients for the thread. Returned only on $select.'
            hasAttachments:
              type: boolean
              description: Indicates whether any of the posts within this thread has at least one attachment. Returned by default.
            isLocked:
              type: boolean
              description: Indicates if the thread is locked. Returned by default.
            lastDeliveredDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default.'
              format: date-time
            preview:
              type: string
              description: A short summary from the body of the latest post in this conversation. Returned by default.
            topic:
              type: string
              description: 'The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated. Returned by default.'
            toRecipients:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.recipient'
              description: 'The To: recipients for the thread. Returned only on $select.'
            uniqueSenders:
              type: array
              items:
                type: string
              description: All the users that sent a message to this thread. Returned by default.
            posts:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.post'
              description: Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.groupLifecyclePolicy:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: groupLifecyclePolicy
          type: object
          properties:
            alternateNotificationEmails:
              type: string
              description: List of email address to send notifications for groups without owners. Multiple email address can be defined by separating email address with a semicolon.
              nullable: true
            groupLifetimeInDays:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: 'Number of days before a group expires and needs to be renewed. Once renewed, the group expiration is extended by the number of days defined.'
              format: int32
              nullable: true
            managedGroupTypes:
              type: string
              description: 'The group type for which the expiration policy applies. Possible values are All, Selected or None.'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.plannerGroup:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: plannerGroup
          type: object
          properties:
            plans:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.plannerPlan'
              description: Read-only. Nullable. Returns the plannerPlans owned by the group.
          additionalProperties:
            type: object
    microsoft.graph.messageRule:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: messageRule
          type: object
          properties:
            actions:
              $ref: '#/components/schemas/microsoft.graph.messageRuleActions'
            conditions:
              $ref: '#/components/schemas/microsoft.graph.messageRulePredicates'
            displayName:
              type: string
              description: The display name of the rule.
              nullable: true
            exceptions:
              $ref: '#/components/schemas/microsoft.graph.messageRulePredicates'
            hasError:
              type: boolean
              description: Indicates whether the rule is in an error condition. Read-only.
              nullable: true
            isEnabled:
              type: boolean
              description: Indicates whether the rule is enabled to be applied to messages.
              nullable: true
            isReadOnly:
              type: boolean
              description: Indicates if the rule is read-only and cannot be modified or deleted by the rules REST API.
              nullable: true
            sequence:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: 'Indicates the order in which the rule is executed, among other rules.'
              format: int32
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.userConfiguration:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: userConfiguration
          type: object
          properties:
            binaryData:
              type: string
              format: base64url
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.inferenceClassificationType:
      title: inferenceClassificationType
      enum:
        - focused
        - other
      type: string
    microsoft.graph.internetMessageHeader:
      title: internetMessageHeader
      type: object
      properties:
        name:
          type: string
          description: Represents the key in a key-value pair.
          nullable: true
        value:
          type: string
          description: The value in a key-value pair.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.mentionsPreview:
      title: mentionsPreview
      type: object
      properties:
        isMentioned:
          type: boolean
          description: True if the signed-in user is mentioned in the parent resource instance. Read-only. Supports filter.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.mention:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: mention
          type: object
          properties:
            application:
              type: string
              description: The name of the application where the mention is created. Optional. Not used and defaulted as null for message.
              nullable: true
            clientReference:
              type: string
              description: A unique identifier that represents a parent of the resource instance. Optional. Not used and defaulted as null for message.
              nullable: true
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.emailAddress'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date and time that the mention is created on the client.
              format: date-time
              nullable: true
            deepLink:
              type: string
              description: A deep web link to the context of the mention in the resource instance. Optional. Not used and defaulted as null for message.
              nullable: true
            mentioned:
              $ref: '#/components/schemas/microsoft.graph.emailAddress'
            mentionText:
              type: string
              description: 'Optional. Not used and defaulted as null for message. To get the mentions in a message, see the bodyPreview property of the message instead.'
              nullable: true
            serverCreatedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date and time that the mention is created on the server. Optional. Not used and defaulted as null for message.
              format: date-time
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.outlookCategory:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: outlookCategory
          type: object
          properties:
            color:
              $ref: '#/components/schemas/microsoft.graph.categoryColor'
            displayName:
              type: string
              description: 'A unique name that identifies a category in the user''s mailbox. After a category is created, the name cannot be changed. Read-only.'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.outlookTaskFolder:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: outlookTaskFolder
          type: object
          properties:
            changeKey:
              type: string
              description: The version of the task folder.
              nullable: true
            isDefaultFolder:
              type: boolean
              description: True if the folder is the default task folder.
              nullable: true
            name:
              type: string
              description: The name of the task folder.
              nullable: true
            parentGroupKey:
              pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
              description: The unique GUID identifier for the task folder's parent group.
              format: uuid
              nullable: true
            multiValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty'
              description: The collection of multi-value extended properties defined for the task folder. Read-only. Nullable.
            singleValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty'
              description: The collection of single-value extended properties defined for the task folder. Read-only. Nullable.
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.outlookTask'
              description: The tasks in this task folder. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.outlookTaskGroup:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: outlookTaskGroup
          type: object
          properties:
            changeKey:
              type: string
              description: The version of the task group.
              nullable: true
            groupKey:
              pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
              description: The unique GUID identifier for the task group.
              format: uuid
              nullable: true
            isDefaultGroup:
              type: boolean
              description: True if the task group is the default task group.
              nullable: true
            name:
              type: string
              description: The name of the task group.
              nullable: true
            taskFolders:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.outlookTaskFolder'
              description: The collection of task folders in the task group. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.outlookTask:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.outlookItem'
        - title: outlookTask
          type: object
          properties:
            assignedTo:
              type: string
              description: The name of the person who has been assigned the task in Outlook. Read-only.
              nullable: true
            body:
              $ref: '#/components/schemas/microsoft.graph.itemBody'
            completedDateTime:
              $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
            dueDateTime:
              $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
            hasAttachments:
              type: boolean
              description: Set to true if the task has attachments.
              nullable: true
            importance:
              $ref: '#/components/schemas/microsoft.graph.importance'
            isReminderOn:
              type: boolean
              nullable: true
            owner:
              type: string
              nullable: true
            parentFolderId:
              type: string
              nullable: true
            recurrence:
              $ref: '#/components/schemas/microsoft.graph.patternedRecurrence'
            reminderDateTime:
              $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
            sensitivity:
              $ref: '#/components/schemas/microsoft.graph.sensitivity'
            startDateTime:
              $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
            status:
              $ref: '#/components/schemas/microsoft.graph.taskStatus'
            subject:
              type: string
              nullable: true
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.attachment'
              description: 'The collection of fileAttachment, itemAttachment, and referenceAttachment attachments for the task.  Read-only. Nullable.'
            multiValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty'
              description: The collection of multi-value extended properties defined for the task. Read-only. Nullable.
            singleValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty'
              description: The collection of single-value extended properties defined for the task. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.rankedEmailAddress:
      title: rankedEmailAddress
      type: object
      properties:
        address:
          type: string
          description: The email address.
          nullable: true
        rank:
          type: number
          description: 'The rank of the email address. A rank is used as a sort key, in relation to the other returned results. A higher rank value corresponds to a more relevant result. Relevance is determined by communication, collaboration, and business relationship signals.'
          format: double
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.personDataSource:
      title: personDataSource
      type: object
      properties:
        type:
          type: string
          description: The type of data source.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.appConsentRequestScope:
      title: appConsentRequestScope
      type: object
      properties:
        displayName:
          type: string
          description: The name of the scope.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.userConsentRequest:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.request'
        - title: userConsentRequest
          type: object
          properties:
            reason:
              type: string
              description: The user's justification for requiring access to the app. Supports $filter (eq only) and $orderby.
              nullable: true
            approval:
              $ref: '#/components/schemas/microsoft.graph.approval'
          additionalProperties:
            type: object
    microsoft.graph.approvalStep:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: approvalStep
          type: object
          properties:
            assignedToMe:
              type: boolean
              description: Indicates whether the step is assigned to the calling user to review. Read-only.
              nullable: true
            displayName:
              type: string
              description: The label provided by the policy creator to identify an approval step. Read-only.
              nullable: true
            justification:
              type: string
              description: The justification associated with the approval step decision.
              nullable: true
            reviewedBy:
              $ref: '#/components/schemas/microsoft.graph.identity'
            reviewedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when a decision was recorded. The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
              format: date-time
              nullable: true
            reviewResult:
              type: string
              description: 'The result of this approval record. Possible values include: NotReviewed, Approved, Denied.'
              nullable: true
            status:
              type: string
              description: 'The step status. Possible values: InProgress, Initializing, Completed, Expired. Read-only.'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.accessReviewError:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.genericError'
        - title: accessReviewError
          type: object
          additionalProperties:
            type: object
    microsoft.graph.accessReviewReviewerScope:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.accessReviewScope'
        - title: accessReviewReviewerScope
          type: object
          properties:
            query:
              type: string
              description: The query specifying who will be the reviewer. See table for examples.
              nullable: true
            queryRoot:
              type: string
              description: 'In the scenario where reviewers need to be specified dynamically, this property is used to indicate the relative source of the query. This property is only required if a relative query, for example, ./manager, is specified. Possible value: decisions.'
              nullable: true
            queryType:
              type: string
              description: The type of query. Examples include MicrosoftGraph and ARM.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.accessReviewScope:
      title: accessReviewScope
      type: object
      additionalProperties:
        type: object
    microsoft.graph.accessReviewReviewer:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: accessReviewReviewer
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date when the reviewer was added for the access review.
              format: date-time
              nullable: true
            displayName:
              type: string
              description: Name of reviewer.
              nullable: true
            userPrincipalName:
              type: string
              description: User principal name of the user.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.accessReviewInstanceDecisionItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: accessReviewInstanceDecisionItem
          type: object
          properties:
            accessReviewId:
              type: string
              description: The identifier of the accessReviewInstance parent. Supports $select. Read-only.
            appliedBy:
              $ref: '#/components/schemas/microsoft.graph.userIdentity'
            appliedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The timestamp when the approval decision was applied. The DatetimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.  Supports $select. Read-only.'
              format: date-time
              nullable: true
            applyResult:
              type: string
              description: 'The result of applying the decision. Possible values: New, AppliedSuccessfully, AppliedWithUnknownFailure, AppliedSuccessfullyButObjectNotFound and ApplyNotSupported. Supports $select, $orderby, and $filter (eq only). Read-only.'
              nullable: true
            decision:
              type: string
              description: 'Result of the review. Possible values: Approve, Deny, NotReviewed, or DontKnow. Supports $select, $orderby, and $filter (eq only).'
              nullable: true
            justification:
              type: string
              description: Justification left by the reviewer when they made the decision.
              nullable: true
            principal:
              $ref: '#/components/schemas/microsoft.graph.identity'
            principalLink:
              type: string
              description: 'Link to the principal object. For example: https://graph.microsoft.com/v1.0/users/a6c7aecb-cbfd-4763-87ef-e91b4bd509d9. Read-only.'
              nullable: true
            principalResourceMembership:
              $ref: '#/components/schemas/microsoft.graph.decisionItemPrincipalResourceMembership'
            recommendation:
              type: string
              description: 'A system-generated recommendation for the approval decision based off last interactive sign-in to tenant. Recommend approve if sign-in is within thirty days of start of review. Recommend deny if sign-in is greater than thirty days of start of review. Recommendation not available otherwise. Possible values: Approve, Deny, or NoInfoAvailable. Supports $select, $orderby, and $filter (eq only). Read-only.'
              nullable: true
            resource:
              $ref: '#/components/schemas/microsoft.graph.accessReviewInstanceDecisionItemResource'
            resourceLink:
              type: string
              description: 'A link to the resource. For example, https://graph.microsoft.com/v1.0/servicePrincipals/c86300f3-8695-4320-9f6e-32a2555f5ff8. Supports $select. Read-only.'
              nullable: true
            reviewedBy:
              $ref: '#/components/schemas/microsoft.graph.userIdentity'
            reviewedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The timestamp when the review decision occurred. Supports $select. Read-only.
              format: date-time
              nullable: true
            target:
              $ref: '#/components/schemas/microsoft.graph.accessReviewInstanceDecisionItemTarget'
            insights:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.governanceInsight'
              description: Insights are recommendations to reviewers on whether to approve or deny a decision. There can be multiple insights associated with an accessReviewInstanceDecisionItem.
            instance:
              $ref: '#/components/schemas/microsoft.graph.accessReviewInstance'
          additionalProperties:
            type: object
    microsoft.graph.accessReviewScheduleDefinition:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: accessReviewScheduleDefinition
          type: object
          properties:
            additionalNotificationRecipients:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewNotificationRecipientItem'
              description: Defines the list of additional users or group members to be notified of the access review progress.
            backupReviewers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewReviewerScope'
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.userIdentity'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Timestamp when the access review series was created. Supports $select. Read-only.
              format: date-time
              nullable: true
            descriptionForAdmins:
              type: string
              description: Description provided by review creators to provide more context of the review to admins. Supports $select.
              nullable: true
            descriptionForReviewers:
              type: string
              description: Description provided  by review creators to provide more context of the review to reviewers. Reviewers will see this description in the email sent to them requesting their review. Email notifications support up to 256 characters. Supports $select.
              nullable: true
            displayName:
              type: string
              description: Name of the access review series. Supports $select and $orderBy. Required on create.
              nullable: true
            fallbackReviewers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewReviewerScope'
              description: 'This collection of reviewer scopes is used to define the list of fallback reviewers. These fallback reviewers will be notified to take action if no users are found from the list of reviewers specified. This could occur when either the group owner is specified as the reviewer but the group owner does not exist, or manager is specified as reviewer but a user''s manager does not exist. See accessReviewReviewerScope. Replaces backupReviewers. Supports $select. NOTE: The value of this property will be ignored if fallback reviewers are assigned through the stageSettings property.'
            instanceEnumerationScope:
              $ref: '#/components/schemas/microsoft.graph.accessReviewScope'
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Timestamp when the access review series was last modified. Supports $select. Read-only.
              format: date-time
              nullable: true
            reviewers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewReviewerScope'
              description: 'This collection of access review scopes is used to define who are the reviewers. The reviewers property is only updatable if individual users are assigned as reviewers. Required on create. Supports $select. For examples of options for assigning reviewers, see Assign reviewers to your access review definition using the Microsoft Graph API. NOTE: The value of this property will be ignored if reviewers are assigned through the stageSettings property.'
            scope:
              $ref: '#/components/schemas/microsoft.graph.accessReviewScope'
            settings:
              $ref: '#/components/schemas/microsoft.graph.accessReviewScheduleSettings'
            stageSettings:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewStageSettings'
              description: 'Required only for a multi-stage access review to define the stages and their settings. You can break down each review instance into up to three sequential stages, where each stage can have a different set of reviewers, fallback reviewers, and settings. Stages will be created sequentially based on the dependsOn property. Optional.  When this property is defined, its settings are used instead of the corresponding settings in the accessReviewScheduleDefinition object and its settings, reviewers, and fallbackReviewers properties.'
            status:
              type: string
              description: 'This read-only field specifies the status of an access review. The typical states include Initializing, NotStarted, Starting, InProgress, Completing, Completed, AutoReviewing, and AutoReviewed.  Supports $select, $orderby, and $filter (eq only). Read-only.'
              nullable: true
            instances:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewInstance'
              description: 'Set of access reviews instances for this access review series. Access reviews that do not recur will only have one instance; otherwise, there is an instance for each recurrence.'
          additionalProperties:
            type: object
    microsoft.graph.accessReviewStage:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: accessReviewStage
          type: object
          properties:
            endDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'DateTime when review stage is scheduled to end. The DatetimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. This property is the cumulative total of the durationInDays for all stages. Read-only.'
              format: date-time
              nullable: true
            fallbackReviewers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewReviewerScope'
              description: 'This collection of reviewer scopes is used to define the list of fallback reviewers. These fallback reviewers will be notified to take action if no users are found from the list of reviewers specified. This could occur when either the group owner is specified as the reviewer but the group owner does not exist, or manager is specified as reviewer but a user''s manager does not exist.'
            reviewers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewReviewerScope'
              description: 'This collection of access review scopes is used to define who the reviewers are. For examples of options for assigning reviewers, see Assign reviewers to your access review definition using the Microsoft Graph API.'
            startDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'DateTime when review stage is scheduled to start. May be in the future. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
              format: date-time
              nullable: true
            status:
              type: string
              description: 'Specifies the status of an accessReviewStage. Possible values: Initializing, NotStarted, Starting, InProgress, Completing, Completed, AutoReviewing, and AutoReviewed. Supports $orderby, and $filter (eq only). Read-only.'
              nullable: true
            decisions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.accessReviewInstanceDecisionItem'
              description: 'Each user reviewed in an accessReviewStage has a decision item representing if they were approved, denied, or not yet reviewed.'
          additionalProperties:
            type: object
    microsoft.graph.agreementAcceptanceState:
      title: agreementAcceptanceState
      enum:
        - accepted
        - declined
        - unknownFutureValue
      type: string
    microsoft.graph.security.informationProtection:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: informationProtection
          type: object
          properties:
            labelPolicySettings:
              $ref: '#/components/schemas/microsoft.graph.security.informationProtectionPolicySetting'
            sensitivityLabels:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.security.sensitivityLabel'
          additionalProperties:
            type: object
    microsoft.graph.deviceEnrollmentConfigurationType:
      title: deviceEnrollmentConfigurationType
      enum:
        - unknown
        - limit
        - platformRestrictions
        - windowsHelloForBusiness
        - defaultLimit
        - defaultPlatformRestrictions
        - defaultWindowsHelloForBusiness
        - defaultWindows10EnrollmentCompletionPageConfiguration
        - windows10EnrollmentCompletionPageConfiguration
        - deviceComanagementAuthorityConfiguration
        - singlePlatformRestriction
        - unknownFutureValue
        - enrollmentNotificationsConfiguration
      type: string
      description: Describes the TemplateFamily for the Template entity
      x-ms-enum:
        name: deviceEnrollmentConfigurationType
        modelAsString: false
        values:
          - value: unknown
            description: Default. Set to unknown if the configuration type cannot be determined.
            name: unknown
          - value: limit
            description: Indicates that configuration is of type limit which refers to number of devices a user is allowed to enroll.
            name: limit
          - value: platformRestrictions
            description: Indicates that configuration is of type platform restriction which refers to types of devices a user is allowed to enroll.
            name: platformRestrictions
          - value: windowsHelloForBusiness
            description: Indicates that configuration is of type Windows Hello which refers to authentication method devices would use.
            name: windowsHelloForBusiness
          - value: defaultLimit
            description: Indicates that configuration is of type default limit which refers to types of devices a user is allowed to enroll by default.
            name: defaultLimit
          - value: defaultPlatformRestrictions
            description: Indicates that configuration is of type default platform restriction which refers to types of devices a user is allowed to enroll by default.
            name: defaultPlatformRestrictions
          - value: defaultWindowsHelloForBusiness
            description: Indicates that configuration is of type default Windows Hello which refers to authentication method devices would use by default.
            name: defaultWindowsHelloForBusiness
          - value: defaultWindows10EnrollmentCompletionPageConfiguration
            description: Indicates that configuration is of type default Enrollment status page which refers to startup page displayed during OOBE in Autopilot devices by default.
            name: defaultWindows10EnrollmentCompletionPageConfiguration
          - value: windows10EnrollmentCompletionPageConfiguration
            description: Indicates that configuration is of type Enrollment status page which refers to startup page displayed during OOBE in Autopilot devices.
            name: windows10EnrollmentCompletionPageConfiguration
          - value: deviceComanagementAuthorityConfiguration
            description: Indicates that configuration is of type Comanagement Authority which refers to policies applied to Co-Managed devices.
            name: deviceComanagementAuthorityConfiguration
          - value: singlePlatformRestriction
            description: Indicates that configuration is of type single platform restriction which refers to types of devices a user is allowed to enroll.
            name: singlePlatformRestriction
          - value: unknownFutureValue
            description: Unknown future value
            name: unknownFutureValue
          - value: enrollmentNotificationsConfiguration
            description: Indicates that configuration is of type Enrollment Notification which refers to types of notification a user receives during enrollment.
            name: enrollmentNotificationsConfiguration
    microsoft.graph.enrollmentConfigurationAssignment:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: enrollmentConfigurationAssignment
          type: object
          properties:
            source:
              $ref: '#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentSource'
            sourceId:
              type: string
              description: Identifier for resource used for deployment to a group
              nullable: true
            target:
              $ref: '#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget'
          additionalProperties:
            type: object
          description: Enrollment Configuration Assignment
    microsoft.graph.chassisType:
      title: chassisType
      enum:
        - unknown
        - desktop
        - laptop
        - worksWorkstation
        - enterpriseServer
        - phone
        - tablet
        - mobileOther
        - mobileUnknown
      type: string
      description: Chassis type.
      x-ms-enum:
        name: chassisType
        modelAsString: false
        values:
          - value: unknown
            description: Unknown.
            name: unknown
          - value: desktop
            description: Desktop.
            name: desktop
          - value: laptop
            description: Laptop.
            name: laptop
          - value: worksWorkstation
            description: Workstation.
            name: worksWorkstation
          - value: enterpriseServer
            description: Enterprise server.
            name: enterpriseServer
          - value: phone
            description: Phone.
            name: phone
          - value: tablet
            description: Mobile tablet.
            name: tablet
          - value: mobileOther
            description: Other mobile.
            name: mobileOther
          - value: mobileUnknown
            description: Unknown mobile.
            name: mobileUnknown
    microsoft.graph.chromeOSDeviceProperty:
      title: chromeOSDeviceProperty
      type: object
      properties:
        name:
          type: string
          description: Name of the property
          nullable: true
        updatable:
          type: boolean
          description: Whether this property is updatable
        value:
          type: string
          description: Value of the property
          nullable: true
        valueType:
          type: string
          description: Type of the value
          nullable: true
      additionalProperties:
        type: object
      description: Represents a property of the ChromeOS device.
    microsoft.graph.complianceState:
      title: complianceState
      enum:
        - unknown
        - compliant
        - noncompliant
        - conflict
        - error
        - inGracePeriod
        - configManager
      type: string
      description: Compliance state.
      x-ms-enum:
        name: complianceState
        modelAsString: false
        values:
          - value: unknown
            description: Unknown.
            name: unknown
          - value: compliant
            description: Compliant.
            name: compliant
          - value: noncompliant
            description: Device is non-compliant and is blocked from corporate resources.
            name: noncompliant
          - value: conflict
            description: Conflict with other rules.
            name: conflict
          - value: error
            description: Error.
            name: error
          - value: inGracePeriod
            description: Device is non-compliant but still has access to corporate resources
            name: inGracePeriod
          - value: configManager
            description: Managed by Config Manager
            name: configManager
    microsoft.graph.configurationManagerClientEnabledFeatures:
      title: configurationManagerClientEnabledFeatures
      type: object
      properties:
        compliancePolicy:
          type: boolean
          description: Whether compliance policy is managed by Intune
        deviceConfiguration:
          type: boolean
          description: Whether device configuration is managed by Intune
        endpointProtection:
          type: boolean
          description: Whether Endpoint Protection is managed by Intune
        inventory:
          type: boolean
          description: Whether inventory is managed by Intune
        modernApps:
          type: boolean
          description: Whether modern application is managed by Intune
        officeApps:
          type: boolean
          description: Whether Office application is managed by Intune
        resourceAccess:
          type: boolean
          description: Whether resource access is managed by Intune
        windowsUpdateForBusiness:
          type: boolean
          description: Whether Windows Update for Business is managed by Intune
      additionalProperties:
        type: object
      description: configuration Manager client enabled features
    microsoft.graph.configurationManagerClientHealthState:
      title: configurationManagerClientHealthState
      type: object
      properties:
        errorCode:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Error code for failed state.
          format: int32
        lastSyncDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Datetime for last sync with configuration manager management point.
          format: date-time
        state:
          $ref: '#/components/schemas/microsoft.graph.configurationManagerClientState'
      additionalProperties:
        type: object
      description: Configuration manager client health state
    microsoft.graph.configurationManagerClientInformation:
      title: configurationManagerClientInformation
      type: object
      properties:
        clientIdentifier:
          type: string
          description: Configuration Manager Client Id from SCCM
          nullable: true
        isBlocked:
          type: boolean
          description: Configuration Manager Client blocked status from SCCM
      additionalProperties:
        type: object
      description: Configuration Manager client information synced from SCCM
    microsoft.graph.deviceActionResult:
      title: deviceActionResult
      type: object
      properties:
        actionName:
          type: string
          description: Action name
          nullable: true
        actionState:
          $ref: '#/components/schemas/microsoft.graph.actionState'
        lastUpdatedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Time the action state was last updated
          format: date-time
        startDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Time the action was initiated
          format: date-time
      additionalProperties:
        type: object
      description: Device action result
    microsoft.graph.deviceEnrollmentType:
      title: deviceEnrollmentType
      enum:
        - unknown
        - userEnrollment
        - deviceEnrollmentManager
        - appleBulkWithUser
        - appleBulkWithoutUser
        - windowsAzureADJoin
        - windowsBulkUserless
        - windowsAutoEnrollment
        - windowsBulkAzureDomainJoin
        - windowsCoManagement
        - windowsAzureADJoinUsingDeviceAuth
        - appleUserEnrollment
        - appleUserEnrollmentWithServiceAccount
        - azureAdJoinUsingAzureVmExtension
        - androidEnterpriseDedicatedDevice
        - androidEnterpriseFullyManaged
        - androidEnterpriseCorporateWorkProfile
      type: string
      description: Possible ways of adding a mobile device to management.
      x-ms-enum:
        name: deviceEnrollmentType
        modelAsString: false
        values:
          - value: unknown
            description: 'Default value, enrollment type was not collected.'
            name: unknown
          - value: userEnrollment
            description: User driven enrollment through BYOD channel.
            name: userEnrollment
          - value: deviceEnrollmentManager
            description: User enrollment with a device enrollment manager account.
            name: deviceEnrollmentManager
          - value: appleBulkWithUser
            description: 'Apple bulk enrollment with user challenge. (DEP, Apple Configurator)'
            name: appleBulkWithUser
          - value: appleBulkWithoutUser
            description: 'Apple bulk enrollment without user challenge. (DEP, Apple Configurator, Mobile Config)'
            name: appleBulkWithoutUser
          - value: windowsAzureADJoin
            description: Windows 10 Azure AD Join.
            name: windowsAzureADJoin
          - value: windowsBulkUserless
            description: Windows 10 Bulk enrollment through ICD with certificate.
            name: windowsBulkUserless
          - value: windowsAutoEnrollment
            description: Windows 10 automatic enrollment. (Add work account)
            name: windowsAutoEnrollment
          - value: windowsBulkAzureDomainJoin
            description: Windows 10 bulk Azure AD Join.
            name: windowsBulkAzureDomainJoin
          - value: windowsCoManagement
            description: Windows 10 Co-Management triggered by AutoPilot or Group Policy.
            name: windowsCoManagement
          - value: windowsAzureADJoinUsingDeviceAuth
            description: Windows 10 Azure AD Join using Device Auth.
            name: windowsAzureADJoinUsingDeviceAuth
          - value: appleUserEnrollment
            description: Device managed by Apple user enrollment
            name: appleUserEnrollment
          - value: appleUserEnrollmentWithServiceAccount
            description: Device managed by Apple user enrollment with service account
            name: appleUserEnrollmentWithServiceAccount
          - value: azureAdJoinUsingAzureVmExtension
            description: Azure AD Join enrollment when an Azure VM is provisioned
            name: azureAdJoinUsingAzureVmExtension
          - value: androidEnterpriseDedicatedDevice
            description: Android Enterprise Dedicated Device
            name: androidEnterpriseDedicatedDevice
          - value: androidEnterpriseFullyManaged
            description: Android Enterprise Fully Managed
            name: androidEnterpriseFullyManaged
          - value: androidEnterpriseCorporateWorkProfile
            description: Android Enterprise Corporate Work Profile
            name: androidEnterpriseCorporateWorkProfile
    microsoft.graph.deviceHealthAttestationState:
      title: deviceHealthAttestationState
      type: object
      properties:
        attestationIdentityKey:
          type: string
          description: 'TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.'
          nullable: true
        bitLockerStatus:
          type: string
          description: On or Off of BitLocker Drive Encryption
          nullable: true
        bootAppSecurityVersion:
          type: string
          description: The security version number of the Boot Application
          nullable: true
        bootDebugging:
          type: string
          description: 'When bootDebugging is enabled, the device is used in development and testing'
          nullable: true
        bootManagerSecurityVersion:
          type: string
          description: The security version number of the Boot Application
          nullable: true
        bootManagerVersion:
          type: string
          description: The version of the Boot Manager
          nullable: true
        bootRevisionListInfo:
          type: string
          description: The Boot Revision List that was loaded during initial boot on the attested device
          nullable: true
        codeIntegrity:
          type: string
          description: 'When code integrity is enabled, code execution is restricted to integrity verified code'
          nullable: true
        codeIntegrityCheckVersion:
          type: string
          description: The version of the Boot Manager
          nullable: true
        codeIntegrityPolicy:
          type: string
          description: The Code Integrity policy that is controlling the security of the boot environment
          nullable: true
        contentNamespaceUrl:
          type: string
          description: The DHA report version. (Namespace version)
          nullable: true
        contentVersion:
          type: string
          description: The HealthAttestation state schema version
          nullable: true
        dataExcutionPolicy:
          type: string
          description: DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
          nullable: true
        deviceHealthAttestationStatus:
          type: string
          description: The DHA report version. (Namespace version)
          nullable: true
        earlyLaunchAntiMalwareDriverProtection:
          type: string
          description: ELAM provides protection for the computers in your network when they start up
          nullable: true
        healthAttestationSupportedStatus:
          type: string
          description: This attribute indicates if DHA is supported for the device
          nullable: true
        healthStatusMismatchInfo:
          type: string
          description: This attribute appears if DHA-Service detects an integrity issue
          nullable: true
        issuedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The DateTime when device was evaluated or issued to MDM
          format: date-time
        lastUpdateDateTime:
          type: string
          description: The Timestamp of the last update.
          nullable: true
        operatingSystemKernelDebugging:
          type: string
          description: 'When operatingSystemKernelDebugging is enabled, the device is used in development and testing'
          nullable: true
        operatingSystemRevListInfo:
          type: string
          description: The Operating System Revision List that was loaded during initial boot on the attested device
          nullable: true
        pcr0:
          type: string
          description: 'The measurement that is captured in PCR[0]'
          nullable: true
        pcrHashAlgorithm:
          type: string
          description: Informational attribute that identifies the HASH algorithm that was used by TPM
          nullable: true
        resetCount:
          type: integer
          description: The number of times a PC device has hibernated or resumed
          format: int64
        restartCount:
          type: integer
          description: The number of times a PC device has rebooted
          format: int64
        safeMode:
          type: string
          description: Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
          nullable: true
        secureBoot:
          type: string
          description: 'When Secure Boot is enabled, the core components must have the correct cryptographic signatures'
          nullable: true
        secureBootConfigurationPolicyFingerPrint:
          type: string
          description: Fingerprint of the Custom Secure Boot Configuration Policy
          nullable: true
        testSigning:
          type: string
          description: 'When test signing is allowed, the device does not enforce signature validation during boot'
          nullable: true
        tpmVersion:
          type: string
          description: The security version number of the Boot Application
          nullable: true
        virtualSecureMode:
          type: string
          description: VSM is a container that protects high value assets from a compromised kernel
          nullable: true
        windowsPE:
          type: string
          description: Operating system running with limited services that is used to prepare a computer for Windows
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.deviceRegistrationState:
      title: deviceRegistrationState
      enum:
        - notRegistered
        - registered
        - revoked
        - keyConflict
        - approvalPending
        - certificateReset
        - notRegisteredPendingEnrollment
        - unknown
      type: string
      description: Device registration status.
      x-ms-enum:
        name: deviceRegistrationState
        modelAsString: false
        values:
          - value: notRegistered
            description: The device is not registered.
            name: notRegistered
          - value: registered
            description: The device is registered.
            name: registered
          - value: revoked
            description: 'The device has been blocked, wiped or retired.'
            name: revoked
          - value: keyConflict
            description: The device has a key conflict.
            name: keyConflict
          - value: approvalPending
            description: The device is pending approval.
            name: approvalPending
          - value: certificateReset
            description: The device certificate has been reset.
            name: certificateReset
          - value: notRegisteredPendingEnrollment
            description: The device is not registered and pending enrollment.
            name: notRegisteredPendingEnrollment
          - value: unknown
            description: The device registration status is unknown.
            name: unknown
    microsoft.graph.deviceType:
      title: deviceType
      enum:
        - desktop
        - windowsRT
        - winMO6
        - nokia
        - windowsPhone
        - mac
        - winCE
        - winEmbedded
        - iPhone
        - iPad
        - iPod
        - android
        - iSocConsumer
        - unix
        - macMDM
        - holoLens
        - surfaceHub
        - androidForWork
        - androidEnterprise
        - windows10x
        - androidnGMS
        - chromeOS
        - linux
        - blackberry
        - palm
        - unknown
        - cloudPC
      type: string
      description: Device type.
      x-ms-enum:
        name: deviceType
        modelAsString: false
        values:
          - value: desktop
            description: Desktop.
            name: desktop
          - value: windowsRT
            description: WindowsRT.
            name: windowsRT
          - value: winMO6
            description: WinMO6.
            name: winMO6
          - value: nokia
            description: Nokia.
            name: nokia
          - value: windowsPhone
            description: Windows phone.
            name: windowsPhone
          - value: mac
            description: Mac.
            name: mac
          - value: winCE
            description: WinCE.
            name: winCE
          - value: winEmbedded
            description: WinEmbedded.
            name: winEmbedded
          - value: iPhone
            description: iPhone.
            name: iPhone
          - value: iPad
            description: iPad.
            name: iPad
          - value: iPod
            description: iPodTouch.
            name: iPod
          - value: android
            description: Android.
            name: android
          - value: iSocConsumer
            description: iSocConsumer.
            name: iSocConsumer
          - value: unix
            description: Unix.
            name: unix
          - value: macMDM
            description: Mac OS X client using built in MDM agent.
            name: macMDM
          - value: holoLens
            description: Representing the fancy Windows 10 goggles.
            name: holoLens
          - value: surfaceHub
            description: Surface HUB device.
            name: surfaceHub
          - value: androidForWork
            description: Android for work device.
            name: androidForWork
          - value: androidEnterprise
            description: Android enterprise device.
            name: androidEnterprise
          - value: windows10x
            description: Windows 10x device.
            name: windows10x
          - value: androidnGMS
            description: Android non Google managed device.
            name: androidnGMS
          - value: chromeOS
            description: ChromeOS device.
            name: chromeOS
          - value: linux
            description: Linux device.
            name: linux
          - value: blackberry
            description: Blackberry.
            name: blackberry
          - value: palm
            description: Palm.
            name: palm
          - value: unknown
            description: Represents that the device type is unknown.
            name: unknown
          - value: cloudPC
            description: Cloud PC device.
            name: cloudPC
    microsoft.graph.deviceManagementExchangeAccessState:
      title: deviceManagementExchangeAccessState
      enum:
        - none
        - unknown
        - allowed
        - blocked
        - quarantined
      type: string
      description: Device Exchange Access State.
      x-ms-enum:
        name: deviceManagementExchangeAccessState
        modelAsString: false
        values:
          - value: none
            description: No access state discovered from Exchange
            name: none
          - value: unknown
            description: Device access state to Exchange is unknown
            name: unknown
          - value: allowed
            description: Device has access to Exchange
            name: allowed
          - value: blocked
            description: Device is Blocked in Exchange
            name: blocked
          - value: quarantined
            description: Device is Quarantined in Exchange
            name: quarantined
    microsoft.graph.deviceManagementExchangeAccessStateReason:
      title: deviceManagementExchangeAccessStateReason
      enum:
        - none
        - unknown
        - exchangeGlobalRule
        - exchangeIndividualRule
        - exchangeDeviceRule
        - exchangeUpgrade
        - exchangeMailboxPolicy
        - other
        - compliant
        - notCompliant
        - notEnrolled
        - unknownLocation
        - mfaRequired
        - azureADBlockDueToAccessPolicy
        - compromisedPassword
        - deviceNotKnownWithManagedApp
      type: string
      description: Device Exchange Access State Reason.
      x-ms-enum:
        name: deviceManagementExchangeAccessStateReason
        modelAsString: false
        values:
          - value: none
            description: No access state reason discovered from Exchange
            name: none
          - value: unknown
            description: Unknown access state reason
            name: unknown
          - value: exchangeGlobalRule
            description: Access state determined by Exchange Global rule
            name: exchangeGlobalRule
          - value: exchangeIndividualRule
            description: Access state determined by Exchange Individual rule
            name: exchangeIndividualRule
          - value: exchangeDeviceRule
            description: Access state determined by Exchange Device rule
            name: exchangeDeviceRule
          - value: exchangeUpgrade
            description: Access state due to Exchange upgrade
            name: exchangeUpgrade
          - value: exchangeMailboxPolicy
            description: Access state determined by Exchange Mailbox Policy
            name: exchangeMailboxPolicy
          - value: other
            description: Access state determined by Exchange
            name: other
          - value: compliant
            description: Access state granted by compliance challenge
            name: compliant
          - value: notCompliant
            description: Access state revoked by compliance challenge
            name: notCompliant
          - value: notEnrolled
            description: Access state revoked by management challenge
            name: notEnrolled
          - value: unknownLocation
            description: Access state due to unknown location
            name: unknownLocation
          - value: mfaRequired
            description: Access state due to MFA challenge
            name: mfaRequired
          - value: azureADBlockDueToAccessPolicy
            description: Access State revoked by AAD Access Policy
            name: azureADBlockDueToAccessPolicy
          - value: compromisedPassword
            description: Access State revoked by compromised password
            name: compromisedPassword
          - value: deviceNotKnownWithManagedApp
            description: Access state revoked by managed application challenge
            name: deviceNotKnownWithManagedApp
    microsoft.graph.hardwareInformation:
      title: hardwareInformation
      type: object
      properties:
        batteryChargeCycles:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The number of charge cycles the device’s current battery has gone through. Valid values 0 to 2147483647
          format: int32
        batteryHealthPercentage:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The device’s current battery’s health percentage. Valid values 0 to 100
          format: int32
        batterySerialNumber:
          type: string
          description: The serial number of the device’s current battery
          nullable: true
        cellularTechnology:
          type: string
          description: Cellular technology of the device
          nullable: true
        deviceFullQualifiedDomainName:
          type: string
          description: 'Returns the fully qualified domain name of the device (if any). If the device is not domain-joined, it returns an empty string.'
          nullable: true
        deviceGuardLocalSystemAuthorityCredentialGuardState:
          $ref: '#/components/schemas/microsoft.graph.deviceGuardLocalSystemAuthorityCredentialGuardState'
        deviceGuardVirtualizationBasedSecurityHardwareRequirementState:
          $ref: '#/components/schemas/microsoft.graph.deviceGuardVirtualizationBasedSecurityHardwareRequirementState'
        deviceGuardVirtualizationBasedSecurityState:
          $ref: '#/components/schemas/microsoft.graph.deviceGuardVirtualizationBasedSecurityState'
        esimIdentifier:
          type: string
          description: eSIM identifier
          nullable: true
        freeStorageSpace:
          type: integer
          description: Free storage space of the device.
          format: int64
        imei:
          type: string
          description: IMEI
          nullable: true
        ipAddressV4:
          type: string
          description: IPAddressV4
          nullable: true
        isEncrypted:
          type: boolean
          description: Encryption status of the device
        isSharedDevice:
          type: boolean
          description: Shared iPad
        isSupervised:
          type: boolean
          description: Supervised mode of the device
        manufacturer:
          type: string
          description: Manufacturer of the device
          nullable: true
        meid:
          type: string
          description: MEID
          nullable: true
        model:
          type: string
          description: Model of the device
          nullable: true
        operatingSystemEdition:
          type: string
          description: String that specifies the OS edition.
          nullable: true
        operatingSystemLanguage:
          type: string
          description: Operating system language of the device
          nullable: true
        operatingSystemProductType:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Int that specifies the Windows Operating System ProductType. More details here https://go.microsoft.com/fwlink/?linkid=2126950. Valid values 0 to 2147483647
          format: int32
        osBuildNumber:
          type: string
          description: Operating System Build Number on Android device
          nullable: true
        phoneNumber:
          type: string
          description: Phone number of the device
          nullable: true
        serialNumber:
          type: string
          description: Serial number.
          nullable: true
        sharedDeviceCachedUsers:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.sharedAppleDeviceUser'
          description: All users on the shared Apple device
        subnetAddress:
          type: string
          description: SubnetAddress
          nullable: true
        subscriberCarrier:
          type: string
          description: Subscriber carrier of the device
          nullable: true
        systemManagementBIOSVersion:
          type: string
          description: BIOS version as reported by SMBIOS
          nullable: true
        totalStorageSpace:
          type: integer
          description: Total storage space of the device.
          format: int64
        tpmManufacturer:
          type: string
          description: The identifying information that uniquely names the TPM manufacturer
          nullable: true
        tpmSpecificationVersion:
          type: string
          description: String that specifies the specification version.
          nullable: true
        tpmVersion:
          type: string
          description: 'The version of the TPM, as specified by the manufacturer'
          nullable: true
        wifiMac:
          type: string
          description: WiFi MAC address of the device
          nullable: true
      additionalProperties:
        type: object
      description: Hardware information of a given device.
    microsoft.graph.joinType:
      title: joinType
      enum:
        - unknown
        - azureADJoined
        - azureADRegistered
        - hybridAzureADJoined
      type: string
      description: Device enrollment join type.
      x-ms-enum:
        name: joinType
        modelAsString: false
        values:
          - value: unknown
            description: Unknown enrollment join type.
            name: unknown
          - value: azureADJoined
            description: The device is joined by Azure AD.
            name: azureADJoined
          - value: azureADRegistered
            description: The device is registered by Azure AD.
            name: azureADRegistered
          - value: hybridAzureADJoined
            description: The device is joined by hybrid Azure AD.
            name: hybridAzureADJoined
    microsoft.graph.lostModeState:
      title: lostModeState
      enum:
        - disabled
        - enabled
      type: string
      description: 'State of lost mode, indicating if lost mode is enabled or disabled'
      x-ms-enum:
        name: lostModeState
        modelAsString: false
        values:
          - value: disabled
            description: Lost mode is disabled.
            name: disabled
          - value: enabled
            description: Lost mode is enabled.
            name: enabled
    microsoft.graph.managedDeviceOwnerType:
      title: managedDeviceOwnerType
      enum:
        - unknown
        - company
        - personal
      type: string
      description: Owner type of device.
      x-ms-enum:
        name: managedDeviceOwnerType
        modelAsString: false
        values:
          - value: unknown
            description: Unknown.
            name: unknown
          - value: company
            description: Owned by company.
            name: company
          - value: personal
            description: Owned by person.
            name: personal
    microsoft.graph.managementAgentType:
      title: managementAgentType
      enum:
        - eas
        - mdm
        - easMdm
        - intuneClient
        - easIntuneClient
        - configurationManagerClient
        - configurationManagerClientMdm
        - configurationManagerClientMdmEas
        - unknown
        - jamf
        - googleCloudDevicePolicyController
        - microsoft365ManagedMdm
        - msSense
        - intuneAosp
      type: string
      description: Management agent type.
      x-ms-enum:
        name: managementAgentType
        modelAsString: false
        values:
          - value: eas
            description: The device is managed by Exchange server.
            name: eas
          - value: mdm
            description: The device is managed by Intune MDM.
            name: mdm
          - value: easMdm
            description: The device is managed by both Exchange server and Intune MDM.
            name: easMdm
          - value: intuneClient
            description: Intune client managed.
            name: intuneClient
          - value: easIntuneClient
            description: The device is EAS and Intune client dual managed.
            name: easIntuneClient
          - value: configurationManagerClient
            description: The device is managed by Configuration Manager.
            name: configurationManagerClient
          - value: configurationManagerClientMdm
            description: The device is managed by Configuration Manager and MDM.
            name: configurationManagerClientMdm
          - value: configurationManagerClientMdmEas
            description: 'The device is managed by Configuration Manager, MDM and Eas.'
            name: configurationManagerClientMdmEas
          - value: unknown
            description: Unknown management agent type.
            name: unknown
          - value: jamf
            description: The device attributes are fetched from Jamf.
            name: jamf
          - value: googleCloudDevicePolicyController
            description: The device is managed by Google's CloudDPC.
            name: googleCloudDevicePolicyController
          - value: microsoft365ManagedMdm
            description: This device is managed by Microsoft 365 through Intune.
            name: microsoft365ManagedMdm
          - value: intuneAosp
            description: This device is managed by Intune's MDM for AOSP (Android Open Source Project) devices
            name: intuneAosp
    microsoft.graph.managedDeviceManagementFeatures:
      title: managedDeviceManagementFeatures
      enum:
        - none
        - microsoftManagedDesktop
      type: string
      description: Device management features.
      x-ms-enum:
        name: managedDeviceManagementFeatures
        modelAsString: false
        values:
          - value: none
            description: Unknown device management features.
            name: none
          - value: microsoftManagedDesktop
            description: Microsoft Managed Desktop
            name: microsoftManagedDesktop
    microsoft.graph.managementState:
      title: managementState
      enum:
        - managed
        - retirePending
        - retireFailed
        - wipePending
        - wipeFailed
        - unhealthy
        - deletePending
        - retireIssued
        - wipeIssued
        - wipeCanceled
        - retireCanceled
        - discovered
      type: string
      description: Management state of device in Microsoft Intune.
      x-ms-enum:
        name: managementState
        modelAsString: false
        values:
          - value: managed
            description: The device is under management
            name: managed
          - value: retirePending
            description: A retire command is occuring on the device and in the process of unenrolling from management
            name: retirePending
          - value: retireFailed
            description: Retire command failed on the device
            name: retireFailed
          - value: wipePending
            description: A wipe command is occuring on the device and in the process of unenrolling from management
            name: wipePending
          - value: wipeFailed
            description: Wipe command failed on the device
            name: wipeFailed
          - value: unhealthy
            description: The device is unhealthy.
            name: unhealthy
          - value: deletePending
            description: 'A delete command is occuring on the device '
            name: deletePending
          - value: retireIssued
            description: A retire command was issued for the device
            name: retireIssued
          - value: wipeIssued
            description: A wipe command was issued for the device
            name: wipeIssued
          - value: wipeCanceled
            description: A wipe command for this device has been canceled
            name: wipeCanceled
          - value: retireCanceled
            description: A retire command for this device has been canceled
            name: retireCanceled
          - value: discovered
            description: The device is discovered but not fully enrolled.
            name: discovered
    microsoft.graph.ownerType:
      title: ownerType
      enum:
        - unknown
        - company
        - personal
      type: string
      description: Owner type of device.
      x-ms-enum:
        name: ownerType
        modelAsString: false
        values:
          - value: unknown
            description: Unknown.
            name: unknown
          - value: company
            description: Owned by company.
            name: company
          - value: personal
            description: Owned by person.
            name: personal
    microsoft.graph.managedDevicePartnerReportedHealthState:
      title: managedDevicePartnerReportedHealthState
      enum:
        - unknown
        - activated
        - deactivated
        - secured
        - lowSeverity
        - mediumSeverity
        - highSeverity
        - unresponsive
        - compromised
        - misconfigured
      type: string
      description: Available health states for the Device Health API
      x-ms-enum:
        name: managedDevicePartnerReportedHealthState
        modelAsString: false
        values:
          - value: unknown
            description: Device health state is not yet reported
            name: unknown
          - value: activated
            description: 'Device has been activated by a mobile threat defense partner, but has not yet reported health.'
            name: activated
          - value: deactivated
            description: Device has been deactivated by a mobile threat defense partner. The device health is not known.
            name: deactivated
          - value: secured
            description: Device is considered secured by the mobile threat defense partner.
            name: secured
          - value: lowSeverity
            description: Device is considered low threat by the mobile threat defense partner.
            name: lowSeverity
          - value: mediumSeverity
            description: Device is considered medium threat by the mobile threat defense partner.
            name: mediumSeverity
          - value: highSeverity
            description: Device is considered high threat by the mobile threat defense partner.
            name: highSeverity
          - value: unresponsive
            description: Device is considered unresponsive by the mobile threat defense partner. The device health is not known.
            name: unresponsive
          - value: compromised
            description: Device is considered compromised by the Threat Defense partner. This means the device has an active Threat or Risk which cannot be easily remediated by the end user and the user should contact their IT Admin.
            name: compromised
          - value: misconfigured
            description: Device is considered misconfigured with the Threat Defense partner. This means the device is missing a required profile or configuration for the Threat Defense Partner to function properly and is thus threat or risk analysis is not able to complete.
            name: misconfigured
    microsoft.graph.managedDeviceArchitecture:
      title: managedDeviceArchitecture
      enum:
        - unknown
        - x86
        - x64
        - arm
        - arM64
      type: string
      description: Processor architecture
      x-ms-enum:
        name: managedDeviceArchitecture
        modelAsString: false
        values:
          - value: unknown
            description: Unknown architecture
            name: unknown
          - value: x86
            description: X86
            name: x86
          - value: x64
            description: X64
            name: x64
          - value: arm
            description: ARM
            name: arm
          - value: arM64
            description: ARM64
            name: arM64
    microsoft.graph.loggedOnUser:
      title: loggedOnUser
      type: object
      properties:
        lastLogOnDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date time when user logs on
          format: date-time
        userId:
          type: string
          description: User id
          nullable: true
      additionalProperties:
        type: object
      description: Logged On User
    microsoft.graph.assignmentFilterEvaluationStatusDetails:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: assignmentFilterEvaluationStatusDetails
          type: object
          properties:
            payloadId:
              type: string
              description: PayloadId on which filter has been applied.
              nullable: true
          additionalProperties:
            type: object
          description: A class containing information about the payloads on which filter has been applied.
    microsoft.graph.deviceCompliancePolicyState:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: deviceCompliancePolicyState
          type: object
          properties:
            displayName:
              type: string
              description: The name of the policy for this policyBase
              nullable: true
            platformType:
              $ref: '#/components/schemas/microsoft.graph.policyPlatformType'
            settingCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Count of how many setting a policy holds
              format: int32
            settingStates:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.deviceCompliancePolicySettingState'
            state:
              $ref: '#/components/schemas/microsoft.graph.complianceStatus'
            userId:
              type: string
              description: 'User unique identifier, must be Guid'
              nullable: true
            userPrincipalName:
              type: string
              description: User Principal Name
              nullable: true
            version:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The version of the policy
              format: int32
          additionalProperties:
            type: object
          description: Device Compliance Policy State for a given device.
    microsoft.graph.deviceConfigurationState:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: deviceConfigurationState
          type: object
          properties:
            displayName:
              type: string
              description: The name of the policy for this policyBase
              nullable: true
            platformType:
              $ref: '#/components/schemas/microsoft.graph.policyPlatformType'
            settingCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Count of how many setting a policy holds
              format: int32
            settingStates:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.deviceConfigurationSettingState'
            state:
              $ref: '#/components/schemas/microsoft.graph.complianceStatus'
            userId:
              type: string
              description: 'User unique identifier, must be Guid'
              nullable: true
            userPrincipalName:
              type: string
              description: User Principal Name
              nullable: true
            version:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The version of the policy
              format: int32
          additionalProperties:
            type: object
          description: Device Configuration State for a given device.
    microsoft.graph.managedDeviceMobileAppConfigurationState:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: managedDeviceMobileAppConfigurationState
          type: object
          properties:
            displayName:
              type: string
              description: The name of the policy for this policyBase
              nullable: true
            platformType:
              $ref: '#/components/schemas/microsoft.graph.policyPlatformType'
            settingCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Count of how many setting a policy holds
              format: int32
            settingStates:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationSettingState'
            state:
              $ref: '#/components/schemas/microsoft.graph.complianceStatus'
            userId:
              type: string
              description: 'User unique identifier, must be Guid'
              nullable: true
            userPrincipalName:
              type: string
              description: User Principal Name
              nullable: true
            version:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The version of the policy
              format: int32
          additionalProperties:
            type: object
          description: Managed Device Mobile App Configuration State for a given device.
    microsoft.graph.securityBaselineState:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: securityBaselineState
          type: object
          properties:
            displayName:
              type: string
              description: The display name of the security baseline
            securityBaselineTemplateId:
              type: string
              description: The security baseline template id
              nullable: true
            state:
              $ref: '#/components/schemas/microsoft.graph.securityBaselineComplianceState'
            userPrincipalName:
              type: string
              description: User Principal Name
              nullable: true
            settingStates:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.securityBaselineSettingState'
              description: The security baseline state for different settings for a device
          additionalProperties:
            type: object
          description: Security baseline state for a device.
    microsoft.graph.detectedApp:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: detectedApp
          type: object
          properties:
            deviceCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The number of devices that have installed this application
              format: int32
            displayName:
              type: string
              description: Name of the discovered application. Read-only
              nullable: true
            sizeInByte:
              type: integer
              description: Discovered application size in bytes. Read-only
              format: int64
            version:
              type: string
              description: Version of the discovered application. Read-only
              nullable: true
            managedDevices:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.managedDevice'
              description: The devices that have the discovered application installed
          additionalProperties:
            type: object
          description: A managed or unmanaged app that is installed on a managed device. Unmanaged apps will only appear for devices marked as corporate owned.
    microsoft.graph.deviceCategory:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: deviceCategory
          type: object
          properties:
            description:
              type: string
              description: Optional description for the device category.
              nullable: true
            displayName:
              type: string
              description: Display name for the device category.
              nullable: true
            roleScopeTagIds:
              type: array
              items:
                type: string
                nullable: true
              description: Optional role scope tags for the device category.
          additionalProperties:
            type: object
          description: 'Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.'
    microsoft.graph.deviceLogCollectionResponse:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: deviceLogCollectionResponse
          type: object
          properties:
            errorCode:
              type: integer
              description: 'The error code, if any. Valid values -9.22337203685478E+18 to 9.22337203685478E+18'
              format: int64
            expirationDateTimeUTC:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The DateTime of the expiration of the logs
              format: date-time
              nullable: true
            initiatedByUserPrincipalName:
              type: string
              description: The UPN for who initiated the request
              nullable: true
            managedDeviceId:
              pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
              description: The device Id
              format: uuid
            receivedDateTimeUTC:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The DateTime the request was received
              format: date-time
              nullable: true
            requestedDateTimeUTC:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The DateTime of the request
              format: date-time
              nullable: true
            size:
              type: number
              description: The size of the logs. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
              format: double
            status:
              type: string
              description: The status of the log collection request
              nullable: true
          additionalProperties:
            type: object
          description: Windows Log Collection request entity.
    microsoft.graph.windowsProtectionState:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: windowsProtectionState
          type: object
          properties:
            antiMalwareVersion:
              type: string
              description: Current anti malware version
              nullable: true
            deviceState:
              $ref: '#/components/schemas/microsoft.graph.windowsDeviceHealthState'
            engineVersion:
              type: string
              description: Current endpoint protection engine's version
              nullable: true
            fullScanOverdue:
              type: boolean
              description: Full scan overdue or not?
              nullable: true
            fullScanRequired:
              type: boolean
              description: Full scan required or not?
              nullable: true
            isVirtualMachine:
              type: boolean
              description: Indicates whether the device is a virtual machine.
              nullable: true
            lastFullScanDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Last quick scan datetime
              format: date-time
              nullable: true
            lastFullScanSignatureVersion:
              type: string
              description: Last full scan signature version
              nullable: true
            lastQuickScanDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Last quick scan datetime
              format: date-time
              nullable: true
            lastQuickScanSignatureVersion:
              type: string
              description: Last quick scan signature version
              nullable: true
            lastReportedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Last device health status reported time
              format: date-time
              nullable: true
            malwareProtectionEnabled:
              type: boolean
              description: Anti malware is enabled or not
              nullable: true
            networkInspectionSystemEnabled:
              type: boolean
              description: Network inspection system enabled or not?
              nullable: true
            productStatus:
              $ref: '#/components/schemas/microsoft.graph.windowsDefenderProductStatus'
            quickScanOverdue:
              type: boolean
              description: Quick scan overdue or not?
              nullable: true
            realTimeProtectionEnabled:
              type: boolean
              description: Real time protection is enabled or not?
              nullable: true
            rebootRequired:
              type: boolean
              description: Reboot required or not?
              nullable: true
            signatureUpdateOverdue:
              type: boolean
              description: Signature out of date or not?
              nullable: true
            signatureVersion:
              type: string
              description: Current malware definitions version
              nullable: true
            tamperProtectionEnabled:
              type: boolean
              description: Indicates whether the Windows Defender tamper protection feature is enabled.
              nullable: true
            detectedMalwareState:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.windowsDeviceMalwareState'
              description: Device malware list
          additionalProperties:
            type: object
          description: Device protection status entity.
    microsoft.graph.mobileAppIdentifier:
      title: mobileAppIdentifier
      type: object
      additionalProperties:
        type: object
      description: The identifier for a mobile app.
    microsoft.graph.managedAppFlaggedReason:
      title: managedAppFlaggedReason
      enum:
        - none
        - rootedDevice
        - androidBootloaderUnlocked
        - androidFactoryRomModified
      type: string
      description: The reason for which a user has been flagged
      x-ms-enum:
        name: managedAppFlaggedReason
        modelAsString: false
        values:
          - value: none
            description: No issue.
            name: none
          - value: rootedDevice
            description: The app registration is running on a rooted/unlocked device.
            name: rootedDevice
          - value: androidBootloaderUnlocked
            description: The app registration is running on an Android device on which the bootloader is unlocked.
            name: androidBootloaderUnlocked
          - value: androidFactoryRomModified
            description: The app registration is running on an Android device on which the factory ROM has been modified.
            name: androidFactoryRomModified
    microsoft.graph.managedAppPolicy:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: managedAppPolicy
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date and time the policy was created.
              format: date-time
            description:
              type: string
              description: The policy's description.
              nullable: true
            displayName:
              type: string
              description: Policy display name.
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Last time the policy was modified.
              format: date-time
            roleScopeTagIds:
              type: array
              items:
                type: string
                nullable: true
              description: List of Scope Tags for this Entity instance.
            version:
              type: string
              description: Version of the entity.
              nullable: true
          additionalProperties:
            type: object
          description: The ManagedAppPolicy resource represents a base type for platform specific policies.
    microsoft.graph.managedAppOperation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: managedAppOperation
          type: object
          properties:
            displayName:
              type: string
              description: The operation name.
              nullable: true
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The last time the app operation was modified.
              format: date-time
            state:
              type: string
              description: The current state of the operation
              nullable: true
            version:
              type: string
              description: Version of the entity.
              nullable: true
          additionalProperties:
            type: object
          description: Represents an operation applied against an app registration.
    microsoft.graph.keyValuePair:
      title: keyValuePair
      type: object
      properties:
        name:
          type: string
          description: Name for this key-value pair
        value:
          type: string
          description: Value for this key-value pair
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.deviceManagementTroubleshootingErrorDetails:
      title: deviceManagementTroubleshootingErrorDetails
      type: object
      properties:
        context:
          type: string
          description: Not yet documented
          nullable: true
        failure:
          type: string
          description: Not yet documented
          nullable: true
        failureDetails:
          type: string
          description: The detailed description of what went wrong.
          nullable: true
        remediation:
          type: string
          description: The detailed description of how to remediate this issue.
          nullable: true
        resources:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.deviceManagementTroubleshootingErrorResource'
          description: Links to helpful documentation about this failure.
      additionalProperties:
        type: object
      description: Object containing detailed information about the error and its remediation.
    microsoft.graph.mobileAppIntentAndStateDetail:
      title: mobileAppIntentAndStateDetail
      type: object
      properties:
        applicationId:
          type: string
          description: MobieApp identifier.
          nullable: true
        displayName:
          type: string
          description: The admin provided or imported title of the app.
          nullable: true
        displayVersion:
          type: string
          description: Human readable version of the application
          nullable: true
        installState:
          $ref: '#/components/schemas/microsoft.graph.resultantAppState'
        mobileAppIntent:
          $ref: '#/components/schemas/microsoft.graph.mobileAppIntent'
        supportedDeviceTypes:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.mobileAppSupportedDeviceType'
          description: The supported platforms for the app.
      additionalProperties:
        type: object
      description: Mobile App Intent and Install State for a given device.
    microsoft.graph.mobileAppTroubleshootingHistoryItem:
      title: mobileAppTroubleshootingHistoryItem
      type: object
      properties:
        occurrenceDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Time when the history item occurred.
          format: date-time
        troubleshootingErrorDetails:
          $ref: '#/components/schemas/microsoft.graph.deviceManagementTroubleshootingErrorDetails'
      additionalProperties:
        type: object
      description: History Item contained in the Mobile App Troubleshooting Event.
    microsoft.graph.appLogCollectionRequest:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: appLogCollectionRequest
          type: object
          properties:
            completedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Time at which the upload log request reached a terminal state
              format: date-time
              nullable: true
            customLogFolders:
              type: array
              items:
                type: string
                nullable: true
              description: List of log folders.
            errorMessage:
              type: string
              description: Error message if any during the upload process
              nullable: true
            status:
              $ref: '#/components/schemas/microsoft.graph.appLogUploadState'
          additionalProperties:
            type: object
          description: AppLogCollectionRequest Entity.
    microsoft.graph.payloadTypes:
      title: payloadTypes
      type: object
      properties:
        rawContent:
          type: string
          description: 'The notification content of a raw user notification that will be delivered to and consumed by the app client on all supported platforms (Windows, iOS, Android or WebPush) receiving this notification. At least one of Payload.RawContent or Payload.VisualContent needs to be valid for a POST Notification request.'
          nullable: true
        visualContent:
          $ref: '#/components/schemas/microsoft.graph.visualProperties'
      additionalProperties:
        type: object
    microsoft.graph.priority:
      title: priority
      enum:
        - None
        - High
        - Low
      type: string
    microsoft.graph.targetPolicyEndpoints:
      title: targetPolicyEndpoints
      type: object
      properties:
        platformTypes:
          type: array
          items:
            type: string
            nullable: true
          description: 'Use to filter the notification distribution to a specific platform or platforms. Valid values are Windows, iOS, Android and WebPush. By default, all push endpoint types (Windows, iOS, Android and WebPush) are enabled.'
      additionalProperties:
        type: object
    microsoft.graph.plannerDelta:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: plannerDelta
          type: object
          additionalProperties:
            type: object
    microsoft.graph.plannerFavoritePlanReferenceCollection:
      title: plannerFavoritePlanReferenceCollection
      type: object
      additionalProperties:
        type: object
    microsoft.graph.plannerRecentPlanReferenceCollection:
      title: plannerRecentPlanReferenceCollection
      type: object
      additionalProperties:
        type: object
    microsoft.graph.plannerPlan:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.plannerDelta'
        - title: plannerPlan
          type: object
          properties:
            container:
              $ref: '#/components/schemas/microsoft.graph.plannerPlanContainer'
            contexts:
              $ref: '#/components/schemas/microsoft.graph.plannerPlanContextCollection'
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Read-only. Date and time at which the plan is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            owner:
              type: string
              nullable: true
            title:
              type: string
              description: Required. Title of the plan.
            buckets:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.plannerBucket'
              description: Collection of buckets in the plan. Read-only. Nullable.
            details:
              $ref: '#/components/schemas/microsoft.graph.plannerPlanDetails'
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.plannerTask'
              description: Collection of tasks in the plan. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.plannerTask:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.plannerDelta'
        - title: plannerTask
          type: object
          properties:
            activeChecklistItemCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: 'Number of checklist items with value set to false, representing incomplete items.'
              format: int32
              nullable: true
            appliedCategories:
              $ref: '#/components/schemas/microsoft.graph.plannerAppliedCategories'
            assigneePriority:
              type: string
              description: Hint used to order items of this type in a list view. The format is defined as outlined here.
              nullable: true
            assignments:
              $ref: '#/components/schemas/microsoft.graph.plannerAssignments'
            bucketId:
              type: string
              description: Bucket ID to which the task belongs. The bucket needs to be in the plan that the task is in. It is 28 characters long and case-sensitive. Format validation is done on the service.
              nullable: true
            checklistItemCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Number of checklist items that are present on the task.
              format: int32
              nullable: true
            completedBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            completedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Read-only. Date and time at which the ''percentComplete'' of the task is set to ''100''. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            conversationThreadId:
              type: string
              description: Thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group.
              nullable: true
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            creationSource:
              $ref: '#/components/schemas/microsoft.graph.plannerTaskCreation'
            dueDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            hasDescription:
              type: boolean
              description: Read-only. Value is true if the details object of the task has a non-empty description and false otherwise.
              nullable: true
            orderHint:
              type: string
              description: Hint used to order items of this type in a list view. The format is defined as outlined here.
              nullable: true
            percentComplete:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: 'Percentage of task completion. When set to 100, the task is considered completed.'
              format: int32
              nullable: true
            planId:
              type: string
              description: Plan ID to which the task belongs.
              nullable: true
            previewType:
              $ref: '#/components/schemas/microsoft.graph.plannerPreviewType'
            priority:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: 'Priority of the task. Valid range of values is between 0 and 10 (inclusive), with increasing value being lower priority (0 has the highest priority and 10 has the lowest priority).  Currently, Planner interprets values 0 and 1 as ''urgent'', 2 and 3 and 4 as ''important'', 5, 6, and 7 as ''medium'', and 8, 9, and 10 as ''low''.  Currently, Planner sets the value 1 for ''urgent'', 3 for ''important'', 5 for ''medium'', and 9 for ''low''.'
              format: int32
              nullable: true
            referenceCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Number of external references that exist on the task.
              format: int32
              nullable: true
            startDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            title:
              type: string
              description: Title of the task.
            assignedToTaskBoardFormat:
              $ref: '#/components/schemas/microsoft.graph.plannerAssignedToTaskBoardTaskFormat'
            bucketTaskBoardFormat:
              $ref: '#/components/schemas/microsoft.graph.plannerBucketTaskBoardTaskFormat'
            details:
              $ref: '#/components/schemas/microsoft.graph.plannerTaskDetails'
            progressTaskBoardFormat:
              $ref: '#/components/schemas/microsoft.graph.plannerProgressTaskBoardTaskFormat'
          additionalProperties:
            type: object
    microsoft.graph.officeGraphInsights:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: officeGraphInsights
          type: object
          properties:
            shared:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sharedInsight'
              description: Access this property from the derived type itemInsights.
            trending:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.trending'
              description: Access this property from the derived type itemInsights.
            used:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.usedInsight'
              description: Access this property from the derived type itemInsights.
          additionalProperties:
            type: object
    microsoft.graph.userInsightsSettings:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: userInsightsSettings
          type: object
          properties:
            isEnabled:
              type: boolean
              description: true if user's itemInsights and meeting hours insights are enabled; false if user's itemInsights and meeting hours insights are disabled. Default is true. Optional.
          additionalProperties:
            type: object
    microsoft.graph.contactMergeSuggestions:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: contactMergeSuggestions
          type: object
          properties:
            isEnabled:
              type: boolean
              description: true if the duplicate contact merge suggestions feature is enabled for the user; false if the feature is disabled. Default value is true.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.regionalAndLanguageSettings:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: regionalAndLanguageSettings
          type: object
          properties:
            authoringLanguages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.localeInfo'
              description: Prioritized list of languages the user reads and authors in.Returned by default. Not nullable.
            defaultDisplayLanguage:
              $ref: '#/components/schemas/microsoft.graph.localeInfo'
            defaultRegionalFormat:
              $ref: '#/components/schemas/microsoft.graph.localeInfo'
            defaultSpeechInputLanguage:
              $ref: '#/components/schemas/microsoft.graph.localeInfo'
            defaultTranslationLanguage:
              $ref: '#/components/schemas/microsoft.graph.localeInfo'
            regionalFormatOverrides:
              $ref: '#/components/schemas/microsoft.graph.regionalFormatOverrides'
            translationPreferences:
              $ref: '#/components/schemas/microsoft.graph.translationPreferences'
          additionalProperties:
            type: object
    microsoft.graph.shiftPreferences:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.changeTrackedEntity'
        - title: shiftPreferences
          type: object
          properties:
            availability:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.shiftAvailability'
              description: Availability of the user to be scheduled for work and its recurrence pattern.
          additionalProperties:
            type: object
    microsoft.graph.userAccountInformation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: userAccountInformation
          type: object
          properties:
            ageGroup:
              type: string
              description: 'Shows the age group of user. Allowed values null, minor, notAdult and adult are generated by the directory and cannot be changed.'
            countryCode:
              type: string
              description: Contains the two-character country code associated with the users account.
            preferredLanguageTag:
              $ref: '#/components/schemas/microsoft.graph.localeInfo'
            userPrincipalName:
              type: string
              description: The user principal name (UPN) of the user associated with the account.
          additionalProperties:
            type: object
    microsoft.graph.itemAddress:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: itemAddress
          type: object
          properties:
            detail:
              $ref: '#/components/schemas/microsoft.graph.physicalAddress'
            displayName:
              type: string
              description: Friendly name the user has assigned to this address.
              nullable: true
            geoCoordinates:
              $ref: '#/components/schemas/microsoft.graph.geoCoordinates'
          additionalProperties:
            type: object
    microsoft.graph.personAnnualEvent:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: personAnnualEvent
          type: object
          properties:
            date:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              format: date
              nullable: true
            displayName:
              type: string
              nullable: true
            type:
              $ref: '#/components/schemas/microsoft.graph.personAnnualEventType'
          additionalProperties:
            type: object
    microsoft.graph.personAward:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: personAward
          type: object
          properties:
            description:
              type: string
              description: Descpription of the award or honor.
              nullable: true
            displayName:
              type: string
              description: Name of the award or honor.
            issuedDate:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              description: The date that the award or honor was granted.
              format: date
              nullable: true
            issuingAuthority:
              type: string
              description: Authority which granted the award or honor.
              nullable: true
            thumbnailUrl:
              type: string
              description: URL referencing a thumbnail of the award or honor.
              nullable: true
            webUrl:
              type: string
              description: URL referencing the award or honor.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.personCertification:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: personCertification
          type: object
          properties:
            certificationId:
              type: string
              description: The referenceable identifier for the certification.
              nullable: true
            description:
              type: string
              description: Description of the certification.
              nullable: true
            displayName:
              type: string
              description: Title of the certification.
            endDate:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              description: The date that the certification expires.
              format: date
              nullable: true
            issuedDate:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              description: The date that the certification was issued.
              format: date
              nullable: true
            issuingAuthority:
              type: string
              description: Authority which granted the certification.
              nullable: true
            issuingCompany:
              type: string
              description: Company which granted the certification.
              nullable: true
            startDate:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              description: The date that the certification became valid.
              format: date
              nullable: true
            thumbnailUrl:
              type: string
              description: URL referencing a thumbnail of the certification.
              nullable: true
            webUrl:
              type: string
              description: URL referencing the certification.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.educationalActivity:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: educationalActivity
          type: object
          properties:
            completionMonthYear:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              description: The month and year the user graduated or completed the activity.
              format: date
              nullable: true
            endMonthYear:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              description: The month and year the user completed the educational activity referenced.
              format: date
              nullable: true
            institution:
              $ref: '#/components/schemas/microsoft.graph.institutionData'
            program:
              $ref: '#/components/schemas/microsoft.graph.educationalActivityDetail'
            startMonthYear:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              description: The month and year the user commenced the activity referenced.
              format: date
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.itemEmail:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: itemEmail
          type: object
          properties:
            address:
              type: string
              description: The email address itself.
            displayName:
              type: string
              description: The name or label a user has associated with a particular email address.
              nullable: true
            type:
              $ref: '#/components/schemas/microsoft.graph.emailType'
          additionalProperties:
            type: object
    microsoft.graph.personInterest:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: personInterest
          type: object
          properties:
            categories:
              type: array
              items:
                type: string
                nullable: true
              description: 'Contains categories a user has associated with the interest (for example, personal, recipies).'
            collaborationTags:
              type: array
              items:
                type: string
                nullable: true
              description: 'Contains experience scenario tags a user has associated with the interest. Allowed values in the collection are: askMeAbout, ableToMentor, wantsToLearn, wantsToImprove.'
            description:
              type: string
              description: Contains a description of the interest.
              nullable: true
            displayName:
              type: string
              description: Contains a friendly name for the interest.
            thumbnailUrl:
              type: string
              nullable: true
            webUrl:
              type: string
              description: Contains a link to a web page or resource about the interest.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.languageProficiency:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: languageProficiency
          type: object
          properties:
            displayName:
              type: string
              description: Contains the long-form name for the language.
            proficiency:
              $ref: '#/components/schemas/microsoft.graph.languageProficiencyLevel'
            reading:
              $ref: '#/components/schemas/microsoft.graph.languageProficiencyLevel'
            spoken:
              $ref: '#/components/schemas/microsoft.graph.languageProficiencyLevel'
            tag:
              type: string
              description: 'Contains the four-character BCP47 name for the language (en-US, no-NB, en-AU).'
              nullable: true
            thumbnailUrl:
              type: string
              nullable: true
            written:
              $ref: '#/components/schemas/microsoft.graph.languageProficiencyLevel'
          additionalProperties:
            type: object
    microsoft.graph.personName:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: personName
          type: object
          properties:
            displayName:
              type: string
              description: Provides an ordered rendering of firstName and lastName depending on the locale of the user or their device.
              nullable: true
            first:
              type: string
              description: First name of the user.
              nullable: true
            initials:
              type: string
              description: Initials of the user.
              nullable: true
            languageTag:
              type: string
              description: 'Contains the name for the language (en-US, no-NB, en-AU) following IETF BCP47 format.'
              nullable: true
            last:
              type: string
              description: Last name of the user.
              nullable: true
            maiden:
              type: string
              description: Maiden name of the user.
              nullable: true
            middle:
              type: string
              description: Middle name of the user.
              nullable: true
            nickname:
              type: string
              description: Nickname of the user.
              nullable: true
            pronunciation:
              $ref: '#/components/schemas/microsoft.graph.personNamePronounciation'
            suffix:
              type: string
              description: 'Designators used after the users name (eg: PhD.)'
              nullable: true
            title:
              type: string
              description: 'Honorifics used to prefix a users name (eg: Dr, Sir, Madam, Mrs.)'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.personAnnotation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: personAnnotation
          type: object
          properties:
            detail:
              $ref: '#/components/schemas/microsoft.graph.itemBody'
            displayName:
              type: string
              description: Contains a friendly name for the note.
              nullable: true
            thumbnailUrl:
              type: string
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.itemPatent:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: itemPatent
          type: object
          properties:
            description:
              type: string
              description: Descpription of the patent or filing.
              nullable: true
            displayName:
              type: string
              description: Title of the patent or filing.
            isPending:
              type: boolean
              description: Indicates the patent is pending.
              nullable: true
            issuedDate:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              description: The date that the patent was granted.
              format: date
              nullable: true
            issuingAuthority:
              type: string
              description: Authority which granted the patent.
              nullable: true
            number:
              type: string
              description: The patent number.
              nullable: true
            webUrl:
              type: string
              description: URL referencing the patent or filing.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.itemPhone:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: itemPhone
          type: object
          properties:
            displayName:
              type: string
              description: Friendly name the user has assigned this phone number.
              nullable: true
            number:
              type: string
              description: Phone number provided by the user.
            type:
              $ref: '#/components/schemas/microsoft.graph.phoneType'
          additionalProperties:
            type: object
    microsoft.graph.workPosition:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: workPosition
          type: object
          properties:
            categories:
              type: array
              items:
                type: string
                nullable: true
              description: Categories that the user has associated with this position.
            colleagues:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.relatedPerson'
              description: Colleagues that are associated with this position.
            detail:
              $ref: '#/components/schemas/microsoft.graph.positionDetail'
            isCurrent:
              type: boolean
              description: Denotes whether or not the position is current.
              nullable: true
            manager:
              $ref: '#/components/schemas/microsoft.graph.relatedPerson'
          additionalProperties:
            type: object
    microsoft.graph.projectParticipation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: projectParticipation
          type: object
          properties:
            categories:
              type: array
              items:
                type: string
                nullable: true
              description: 'Contains categories a user has associated with the project (for example, digital transformation, oil rig).'
            client:
              $ref: '#/components/schemas/microsoft.graph.companyDetail'
            collaborationTags:
              type: array
              items:
                type: string
                nullable: true
              description: 'Contains experience scenario tags a user has associated with the interest. Allowed values in the collection are: askMeAbout, ableToMentor, wantsToLearn, wantsToImprove.'
            colleagues:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.relatedPerson'
              description: Lists people that also worked on the project.
            detail:
              $ref: '#/components/schemas/microsoft.graph.positionDetail'
            displayName:
              type: string
              description: Contains a friendly name for the project.
            sponsors:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.relatedPerson'
              description: The Person or people who sponsored the project.
            thumbnailUrl:
              type: string
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.itemPublication:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: itemPublication
          type: object
          properties:
            description:
              type: string
              description: Description of the publication.
              nullable: true
            displayName:
              type: string
              description: Title of the publication.
            publishedDate:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
              type: string
              description: The date that the publication was published.
              format: date
              nullable: true
            publisher:
              type: string
              description: Publication or publisher for the publication.
              nullable: true
            thumbnailUrl:
              type: string
              description: URL referencing a thumbnail of the publication.
              nullable: true
            webUrl:
              type: string
              description: URL referencing the publication.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.skillProficiency:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: skillProficiency
          type: object
          properties:
            categories:
              type: array
              items:
                type: string
                nullable: true
              description: 'Contains categories a user has associated with the skill (for example, personal, professional, hobby).'
            collaborationTags:
              type: array
              items:
                type: string
                nullable: true
              description: 'Contains experience scenario tags a user has associated with the interest. Allowed values in the collection are: askMeAbout, ableToMentor, wantsToLearn, wantsToImprove.'
            displayName:
              type: string
              description: Contains a friendly name for the skill.
            proficiency:
              $ref: '#/components/schemas/microsoft.graph.skillProficiencyLevel'
            thumbnailUrl:
              type: string
              nullable: true
            webUrl:
              type: string
              description: Contains a link to an information source about the skill.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.webAccount:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: webAccount
          type: object
          properties:
            description:
              type: string
              description: Contains the description the user has provided for the account on the service being referenced.
              nullable: true
            service:
              $ref: '#/components/schemas/microsoft.graph.serviceInformation'
            statusMessage:
              type: string
              description: Contains a status message from the cloud service if provided or synchronized.
              nullable: true
            thumbnailUrl:
              type: string
              nullable: true
            userId:
              type: string
              description: The user name  displayed for the webaccount.
            webUrl:
              type: string
              description: Contains a link to the user's profile on the cloud service if one exists.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.personWebsite:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.itemFacet'
        - title: personWebsite
          type: object
          properties:
            categories:
              type: array
              items:
                type: string
                nullable: true
              description: 'Contains categories a user has associated with the website (for example, personal, recipes).'
            description:
              type: string
              description: Contains a description of the website.
              nullable: true
            displayName:
              type: string
              description: Contains a friendly name for the website.
            thumbnailUrl:
              type: string
              nullable: true
            webUrl:
              type: string
              description: Contains a link to the website itself.
          additionalProperties:
            type: object
    microsoft.graph.Json:
      title: Json
      type: object
      additionalProperties:
        type: object
    microsoft.graph.status:
      title: status
      enum:
        - active
        - updated
        - deleted
        - ignored
        - unknownFutureValue
      type: string
    microsoft.graph.visualInfo:
      title: visualInfo
      type: object
      properties:
        attribution:
          $ref: '#/components/schemas/microsoft.graph.imageInfo'
        backgroundColor:
          type: string
          description: Optional. Background color used to render the activity in the UI - brand color for the application source of the activity. Must be a valid hex color
          nullable: true
        content:
          $ref: '#/components/schemas/microsoft.graph.Json'
        description:
          type: string
          description: 'Optional. Longer text description of the user''s unique activity (example: document name, first sentence, and/or metadata)'
          nullable: true
        displayText:
          type: string
          description: 'Required. Short text description of the user''s unique activity (for example, document name in cases where an activity refers to document creation)'
      additionalProperties:
        type: object
    microsoft.graph.activityHistoryItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: activityHistoryItem
          type: object
          properties:
            activeDurationSeconds:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: 'Optional. The duration of active user engagement. if not supplied, this is calculated from the startedDateTime and lastActiveDateTime.'
              format: int32
              nullable: true
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Set by the server. DateTime in UTC when the object was created on the server.
              format: date-time
              nullable: true
            expirationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Optional. UTC DateTime when the historyItem will undergo hard-delete. Can be set by the client.
              format: date-time
              nullable: true
            lastActiveDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Optional. UTC DateTime when the historyItem (activity session) was last understood as active or finished - if null, historyItem status should be Ongoing.'
              format: date-time
              nullable: true
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Set by the server. DateTime in UTC when the object was modified on the server.
              format: date-time
              nullable: true
            startedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Required. UTC DateTime when the historyItem (activity session) was started. Required for timeline history.
              format: date-time
            status:
              $ref: '#/components/schemas/microsoft.graph.status'
            userTimezone:
              type: string
              description: Optional. The timezone in which the user's device used to generate the activity was located at activity creation time. Values supplied as Olson IDs in order to support cross-platform representation.
              nullable: true
            activity:
              $ref: '#/components/schemas/microsoft.graph.userActivity'
          additionalProperties:
            type: object
    microsoft.graph.alternativeSecurityId:
      title: alternativeSecurityId
      type: object
      properties:
        identityProvider:
          type: string
          description: For internal use only
          nullable: true
        key:
          type: string
          description: For internal use only
          format: base64url
          nullable: true
        type:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: For internal use only
          format: int32
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.command:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: command
          type: object
          properties:
            appServiceName:
              type: string
              nullable: true
            error:
              type: string
              nullable: true
            packageFamilyName:
              type: string
              nullable: true
            payload:
              $ref: '#/components/schemas/microsoft.graph.payloadRequest'
            permissionTicket:
              type: string
              nullable: true
            postBackUri:
              type: string
              nullable: true
            status:
              type: string
              nullable: true
            type:
              type: string
              nullable: true
            responsepayload:
              $ref: '#/components/schemas/microsoft.graph.payloadResponse'
          additionalProperties:
            type: object
    microsoft.graph.onlineMeetingPresenters:
      title: onlineMeetingPresenters
      enum:
        - everyone
        - organization
        - roleIsPresenter
        - organizer
        - unknownFutureValue
      type: string
    microsoft.graph.meetingChatMode:
      title: meetingChatMode
      enum:
        - enabled
        - disabled
        - limited
        - unknownFutureValue
      type: string
    microsoft.graph.audioConferencing:
      title: audioConferencing
      type: object
      properties:
        conferenceId:
          type: string
          description: The conference id of the online meeting.
          nullable: true
        dialinUrl:
          type: string
          description: A URL to the externally-accessible web page that contains dial-in information.
          nullable: true
        tollFreeNumber:
          type: string
          nullable: true
        tollFreeNumbers:
          type: array
          items:
            type: string
            nullable: true
          description: List of toll-free numbers that are displayed in the meeting invite.
        tollNumber:
          type: string
          nullable: true
        tollNumbers:
          type: array
          items:
            type: string
            nullable: true
          description: List of toll numbers that are displayed in the meeting invite.
      additionalProperties:
        type: object
    microsoft.graph.broadcastMeetingSettings:
      title: broadcastMeetingSettings
      type: object
      properties:
        allowedAudience:
          $ref: '#/components/schemas/microsoft.graph.broadcastMeetingAudience'
        captions:
          $ref: '#/components/schemas/microsoft.graph.broadcastMeetingCaptionSettings'
        isAttendeeReportEnabled:
          type: boolean
          description: Indicates whether attendee report is enabled for this Teams live event. Default value is false.
          nullable: true
        isQuestionAndAnswerEnabled:
          type: boolean
          description: Indicates whether Q&A is enabled for this Teams live event. Default value is false.
          nullable: true
        isRecordingEnabled:
          type: boolean
          description: Indicates whether recording is enabled for this Teams live event. Default value is false.
          nullable: true
        isVideoOnDemandEnabled:
          type: boolean
          description: Indicates whether video on demand is enabled for this Teams live event. Default value is false.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.meetingCapabilities:
      title: meetingCapabilities
      enum:
        - questionAndAnswer
        - unknownFutureValue
      type: string
    microsoft.graph.chatInfo:
      title: chatInfo
      type: object
      properties:
        messageId:
          type: string
          description: The unique identifier for a message in a Microsoft Teams channel.
          nullable: true
        replyChainMessageId:
          type: string
          description: The ID of the reply message.
          nullable: true
        threadId:
          type: string
          description: The unique identifier for a thread in Microsoft Teams.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.joinMeetingIdSettings:
      title: joinMeetingIdSettings
      type: object
      properties:
        isPasscodeRequired:
          type: boolean
          nullable: true
        joinMeetingId:
          type: string
          nullable: true
        passcode:
          type: string
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.lobbyBypassSettings:
      title: lobbyBypassSettings
      type: object
      properties:
        isDialInBypassEnabled:
          type: boolean
          description: Specifies whether or not to always let dial-in callers bypass the lobby. Optional.
          nullable: true
        scope:
          $ref: '#/components/schemas/microsoft.graph.lobbyBypassScope'
      additionalProperties:
        type: object
    microsoft.graph.meetingParticipants:
      title: meetingParticipants
      type: object
      properties:
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.meetingParticipantInfo'
          description: Information of the meeting attendees.
        contributors:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.meetingParticipantInfo'
        organizer:
          $ref: '#/components/schemas/microsoft.graph.meetingParticipantInfo'
        producers:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.meetingParticipantInfo'
      additionalProperties:
        type: object
    microsoft.graph.meetingAttendanceReport:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: meetingAttendanceReport
          type: object
          properties:
            meetingEndDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: UTC time when the meeting ended. Read-only.
              format: date-time
              nullable: true
            meetingStartDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: UTC time when the meeting started. Read-only.
              format: date-time
              nullable: true
            totalParticipantCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Total number of participants. Read-only.
              format: int32
              nullable: true
            attendanceRecords:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.attendanceRecord'
              description: List of attendance records of an attendance report. Read-only.
          additionalProperties:
            type: object
    microsoft.graph.meetingRegistration:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.meetingRegistrationBase'
        - title: meetingRegistration
          type: object
          properties:
            description:
              type: string
              description: The description of the meeting.
              nullable: true
            endDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The meeting end time in UTC.
              format: date-time
              nullable: true
            registrationPageViewCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The number of times the registration page has been visited. Read-only.
              format: int32
              nullable: true
            registrationPageWebUrl:
              type: string
              description: The URL of the registration page. Read-only.
              nullable: true
            speakers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.meetingSpeaker'
              description: The meeting speaker's information.
            startDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The meeting start time in UTC.
              format: date-time
              nullable: true
            subject:
              type: string
              description: The subject of the meeting.
              nullable: true
            customQuestions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.meetingRegistrationQuestion'
              description: Custom registration questions.
          additionalProperties:
            type: object
    microsoft.graph.outOfOfficeSettings:
      title: outOfOfficeSettings
      type: object
      properties:
        isOutOfOffice:
          type: boolean
          description: 'True if either:It is currently in the out of office time window configured on the Outlook or Teams client.There is currently an event on the user''s calendar that''s marked as Show as Out of OfficeOtherwise, false.'
          nullable: true
        message:
          type: string
          description: The out of office message that the user configured on Outlook client (Automatic Replies (Out of Office)) or the Teams client (Schedule out of office).
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.emailAuthenticationMethod:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.authenticationMethod'
        - title: emailAuthenticationMethod
          type: object
          properties:
            emailAddress:
              type: string
              description: The email address registered to this user.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.fido2AuthenticationMethod:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.authenticationMethod'
        - title: fido2AuthenticationMethod
          type: object
          properties:
            aaGuid:
              type: string
              description: 'Authenticator Attestation GUID, an identifier that indicates the type (e.g. make and model) of the authenticator.'
              nullable: true
            attestationCertificates:
              type: array
              items:
                type: string
                nullable: true
              description: The attestation certificate(s) attached to this security key.
            attestationLevel:
              $ref: '#/components/schemas/microsoft.graph.attestationLevel'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The timestamp when this key was registered to the user.
              format: date-time
              nullable: true
            creationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            displayName:
              type: string
              description: The display name of the key as given by the user.
              nullable: true
            model:
              type: string
              description: The manufacturer-assigned model of the FIDO2 security key.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.authenticationMethod:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: authenticationMethod
          type: object
          additionalProperties:
            type: object
    microsoft.graph.microsoftAuthenticatorAuthenticationMethod:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.authenticationMethod'
        - title: microsoftAuthenticatorAuthenticationMethod
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date and time that this app was registered. This property is null if the device is not registered for passwordless Phone Sign-In.
              format: date-time
              nullable: true
            deviceTag:
              type: string
              description: Tags containing app metadata.
              nullable: true
            displayName:
              type: string
              description: The name of the device on which this app is registered.
              nullable: true
            phoneAppVersion:
              type: string
              description: Numerical version of this instance of the Authenticator app.
              nullable: true
            device:
              $ref: '#/components/schemas/microsoft.graph.device'
          additionalProperties:
            type: object
    microsoft.graph.passwordlessMicrosoftAuthenticatorAuthenticationMethod:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.authenticationMethod'
        - title: passwordlessMicrosoftAuthenticatorAuthenticationMethod
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            creationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The timestamp when this method was registered to the user.
              format: date-time
              nullable: true
            displayName:
              type: string
              description: The display name of the mobile device as given by the user.
              nullable: true
            device:
              $ref: '#/components/schemas/microsoft.graph.device'
          additionalProperties:
            type: object
    microsoft.graph.passwordAuthenticationMethod:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.authenticationMethod'
        - title: passwordAuthenticationMethod
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            creationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when this password was last updated. This property is currently not populated. Read-only. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.'
              format: date-time
              nullable: true
            password:
              type: string
              description: 'For security, the password is always returned as null from a LIST or GET operation.'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.phoneAuthenticationMethod:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.authenticationMethod'
        - title: phoneAuthenticationMethod
          type: object
          properties:
            phoneNumber:
              type: string
              description: 'The phone number to text or call for authentication. Phone numbers use the format ''+<country code> <number>x<extension>'', with extension optional. For example, +1 5555551234 or +1 5555551234x123 are valid. Numbers are rejected when creating/updating if they do not match the required format.'
              nullable: true
            phoneType:
              $ref: '#/components/schemas/microsoft.graph.authenticationPhoneType'
            smsSignInState:
              $ref: '#/components/schemas/microsoft.graph.authenticationMethodSignInState'
          additionalProperties:
            type: object
    microsoft.graph.softwareOathAuthenticationMethod:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.authenticationMethod'
        - title: softwareOathAuthenticationMethod
          type: object
          properties:
            secretKey:
              type: string
              description: The secret key of the method. Always returns null.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.temporaryAccessPassAuthenticationMethod:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.authenticationMethod'
        - title: temporaryAccessPassAuthenticationMethod
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date and time when the temporaryAccessPass was created.
              format: date-time
              nullable: true
            isUsable:
              type: boolean
              description: The state of the authentication method that indicates whether it's currently usable by the user.
              nullable: true
            isUsableOnce:
              type: boolean
              description: 'Determines whether the pass is limited to a one time use. If true, the pass can be used once; if false, the pass can be used multiple times within the temporaryAccessPass lifetime.'
              nullable: true
            lifetimeInMinutes:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: 'The lifetime of the temporaryAccessPass in minutes starting at startDateTime. Minimum 10, Maximum 43200 (equivalent to 30 days).'
              format: int32
              nullable: true
            methodUsabilityReason:
              type: string
              description: 'Details about usability state (isUsable). Reasons can include: enabledByPolicy, disabledByPolicy, expired, notYetValid, oneTimeUsed.'
              nullable: true
            startDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date and time when the temporaryAccessPass becomes available to use.
              format: date-time
              nullable: true
            temporaryAccessPass:
              type: string
              description: The temporaryAccessPass used to authenticate. Returned only on creation of a new temporaryAccessPass; returned as NULL with GET.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.windowsHelloForBusinessAuthenticationMethod:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.authenticationMethod'
        - title: windowsHelloForBusinessAuthenticationMethod
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date and time that this Windows Hello for Business key was registered.
              format: date-time
              nullable: true
            displayName:
              type: string
              description: The name of the device on which Windows Hello for Business is registered
              nullable: true
            keyStrength:
              $ref: '#/components/schemas/microsoft.graph.authenticationMethodKeyStrength'
            device:
              $ref: '#/components/schemas/microsoft.graph.device'
          additionalProperties:
            type: object
    microsoft.graph.baseTask:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: baseTask
          type: object
          properties:
            bodyLastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: ''2020-01-01T00:00:00Z''.'
              format: date-time
            completedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date when the task was finished.
              format: date-time
              nullable: true
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the task was created. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format. For example, midnight UTC on Jan 1, 2020 would look like this: ''2020-01-01T00:00:00Z''.'
              format: date-time
            displayName:
              type: string
              description: The name of the task.
              nullable: true
            dueDateTime:
              $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
            importance:
              $ref: '#/components/schemas/microsoft.graph.importance'
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: ''2020-01-01T00:00:00Z''.'
              format: date-time
            recurrence:
              $ref: '#/components/schemas/microsoft.graph.patternedRecurrence'
            startDateTime:
              $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
            status:
              $ref: '#/components/schemas/microsoft.graph.taskStatus_v2'
            textBody:
              type: string
              description: The task body in text format that typically contains information about the task.
              nullable: true
            viewpoint:
              $ref: '#/components/schemas/microsoft.graph.taskViewpoint'
            checklistItems:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.checklistItem'
              description: A collection of smaller subtasks linked to the more complex parent task.
            extensions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.extension'
              description: The collection of open extensions defined for the task .
            linkedResources:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.linkedResource_v2'
              description: A collection of resources linked to the task.
            parentList:
              $ref: '#/components/schemas/microsoft.graph.baseTaskList'
          additionalProperties:
            type: object
    microsoft.graph.baseTaskList:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: baseTaskList
          type: object
          properties:
            displayName:
              type: string
              description: The name of the task list.
              nullable: true
            extensions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.extension'
              description: The collection of open extensions defined for the task list. Nullable.
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.baseTask'
              description: The tasks in this task list. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.chatType:
      title: chatType
      enum:
        - oneOnOne
        - group
        - meeting
        - unknownFutureValue
      type: string
    microsoft.graph.teamworkOnlineMeetingInfo:
      title: teamworkOnlineMeetingInfo
      type: object
      properties:
        calendarEventId:
          type: string
          description: The identifier of the calendar event associated with the meeting.
          nullable: true
        joinWebUrl:
          type: string
          description: The URL which can be clicked on to join or uniquely identify the meeting.
          nullable: true
        organizer:
          $ref: '#/components/schemas/microsoft.graph.teamworkUserIdentity'
      additionalProperties:
        type: object
    microsoft.graph.chatViewpoint:
      title: chatViewpoint
      type: object
      properties:
        isHidden:
          type: boolean
          description: Indicates whether the chat is hidden for the current user.
          nullable: true
        lastMessageReadDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Represents the dateTime up until which the current user has read chatMessages in a specific chat.
          format: date-time
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.teamsAppInstallation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: teamsAppInstallation
          type: object
          properties:
            teamsApp:
              $ref: '#/components/schemas/microsoft.graph.teamsApp'
            teamsAppDefinition:
              $ref: '#/components/schemas/microsoft.graph.teamsAppDefinition'
          additionalProperties:
            type: object
    microsoft.graph.chatMessageInfo:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: chatMessageInfo
          type: object
          properties:
            body:
              $ref: '#/components/schemas/microsoft.graph.itemBody'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date time object representing the time at which message was created.
              format: date-time
              nullable: true
            eventDetail:
              $ref: '#/components/schemas/microsoft.graph.eventMessageDetail'
            from:
              $ref: '#/components/schemas/microsoft.graph.chatMessageFromIdentitySet'
            isDeleted:
              type: boolean
              description: 'If set to true, the original message has been deleted.'
              nullable: true
            messageType:
              $ref: '#/components/schemas/microsoft.graph.chatMessageType'
          additionalProperties:
            type: object
    microsoft.graph.conversationMember:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: conversationMember
          type: object
          properties:
            displayName:
              type: string
              description: The display name of the user.
              nullable: true
            roles:
              type: array
              items:
                type: string
                nullable: true
              description: The roles for that user.
            visibleHistoryStartDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The timestamp denoting how far back a conversation's history is shared with the conversation member. This property is settable only for members of a chat.
              format: date-time
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.chatMessage:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: chatMessage
          type: object
          properties:
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.chatMessageAttachment'
              description: 'References to attached objects like files, tabs, meetings etc.'
            body:
              $ref: '#/components/schemas/microsoft.graph.itemBody'
            channelIdentity:
              $ref: '#/components/schemas/microsoft.graph.channelIdentity'
            chatId:
              type: string
              description: 'If the message was sent in a chat, represents the identity of the chat.'
              nullable: true
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Timestamp of when the chat message was created.
              format: date-time
              nullable: true
            deletedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Read only. Timestamp at which the chat message was deleted, or null if not deleted.'
              format: date-time
              nullable: true
            etag:
              type: string
              description: Read-only. Version number of the chat message.
              nullable: true
            eventDetail:
              $ref: '#/components/schemas/microsoft.graph.eventMessageDetail'
            from:
              $ref: '#/components/schemas/microsoft.graph.chatMessageFromIdentitySet'
            importance:
              $ref: '#/components/schemas/microsoft.graph.chatMessageImportance'
            lastEditedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Read only. Timestamp when edits to the chat message were made. Triggers an 'Edited' flag in the Teams UI. If no edits are made the value is null.
              format: date-time
              nullable: true
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Read only. Timestamp when the chat message is created (initial setting) or modified, including when a reaction is added or removed.'
              format: date-time
              nullable: true
            locale:
              type: string
              description: Locale of the chat message set by the client. Always set to en-us.
            mentions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.chatMessageMention'
              description: 'List of entities mentioned in the chat message. Supported entities are: user, bot, team, channel, and tag.'
            messageType:
              $ref: '#/components/schemas/microsoft.graph.chatMessageType'
            onBehalfOf:
              $ref: '#/components/schemas/microsoft.graph.chatMessageFromIdentitySet'
            policyViolation:
              $ref: '#/components/schemas/microsoft.graph.chatMessagePolicyViolation'
            reactions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.chatMessageReaction'
              description: 'Reactions for this chat message (for example, Like).'
            replyToId:
              type: string
              description: 'Read-only. ID of the parent chat message or root chat message of the thread. (Only applies to chat messages in channels, not chats.)'
              nullable: true
            subject:
              type: string
              description: 'The subject of the chat message, in plaintext.'
              nullable: true
            summary:
              type: string
              description: 'Summary text of the chat message that could be used for push notifications and summary views or fall back views. Only applies to channel chat messages, not chat messages in a chat.'
              nullable: true
            webUrl:
              type: string
              description: Read-only. Link to the message in Microsoft Teams.
              nullable: true
            hostedContents:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.chatMessageHostedContent'
              description: 'Content in a message hosted by Microsoft Teams - for example, images or code snippets.'
            replies:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.chatMessage'
              description: Replies for a specified message. Supports $expand for channel messages.
          additionalProperties:
            type: object
    microsoft.graph.teamsAsyncOperation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: teamsAsyncOperation
          type: object
          properties:
            attemptsCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Number of times the operation was attempted before being marked successful or failed.
              format: int32
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Time when the operation was created.
              format: date-time
            error:
              $ref: '#/components/schemas/microsoft.graph.operationError'
            lastActionDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Time when the async operation was last updated.
              format: date-time
            operationType:
              $ref: '#/components/schemas/microsoft.graph.teamsAsyncOperationType'
            status:
              $ref: '#/components/schemas/microsoft.graph.teamsAsyncOperationStatus'
            targetResourceId:
              type: string
              description: 'The ID of the object that''s created or modified as result of this async operation, typically a team.'
              nullable: true
            targetResourceLocation:
              type: string
              description: The location of the object that's created or modified as result of this async operation. This URL should be treated as an opaque value and not parsed into its component paths.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.pinnedChatMessageInfo:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: pinnedChatMessageInfo
          type: object
          properties:
            message:
              $ref: '#/components/schemas/microsoft.graph.chatMessage'
          additionalProperties:
            type: object
    microsoft.graph.teamsTab:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: teamsTab
          type: object
          properties:
            configuration:
              $ref: '#/components/schemas/microsoft.graph.teamsTabConfiguration'
            displayName:
              type: string
              description: Name of the tab.
              nullable: true
            messageId:
              type: string
              nullable: true
            sortOrderIndex:
              type: string
              description: Index of the order used for sorting tabs.
              nullable: true
            teamsAppId:
              type: string
              nullable: true
            webUrl:
              type: string
              description: Deep link URL of the tab instance. Read only.
              nullable: true
            teamsApp:
              $ref: '#/components/schemas/microsoft.graph.teamsApp'
          additionalProperties:
            type: object
    microsoft.graph.teamDiscoverySettings:
      title: teamDiscoverySettings
      type: object
      properties:
        showInTeamsSearchAndSuggestions:
          type: boolean
          description: 'If set to true, the team is visible via search and suggestions from the Teams client.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.teamFunSettings:
      title: teamFunSettings
      type: object
      properties:
        allowCustomMemes:
          type: boolean
          description: 'If set to true, enables users to include custom memes.'
          nullable: true
        allowGiphy:
          type: boolean
          description: 'If set to true, enables Giphy use.'
          nullable: true
        allowStickersAndMemes:
          type: boolean
          description: 'If set to true, enables users to include stickers and memes.'
          nullable: true
        giphyContentRating:
          $ref: '#/components/schemas/microsoft.graph.giphyRatingType'
      additionalProperties:
        type: object
    microsoft.graph.teamGuestSettings:
      title: teamGuestSettings
      type: object
      properties:
        allowCreateUpdateChannels:
          type: boolean
          description: 'If set to true, guests can add and update channels.'
          nullable: true
        allowDeleteChannels:
          type: boolean
          description: 'If set to true, guests can delete channels.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.teamMemberSettings:
      title: teamMemberSettings
      type: object
      properties:
        allowAddRemoveApps:
          type: boolean
          description: 'If set to true, members can add and remove apps.'
          nullable: true
        allowCreatePrivateChannels:
          type: boolean
          description: 'If set to true, members can add and update private channels.'
          nullable: true
        allowCreateUpdateChannels:
          type: boolean
          description: 'If set to true, members can add and update any channels.'
          nullable: true
        allowCreateUpdateRemoveConnectors:
          type: boolean
          description: 'If set to true, members can add, update, and remove connectors.'
          nullable: true
        allowCreateUpdateRemoveTabs:
          type: boolean
          description: 'If set to true, members can add, update, and remove tabs.'
          nullable: true
        allowDeleteChannels:
          type: boolean
          description: 'If set to true, members can delete channels.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.teamMessagingSettings:
      title: teamMessagingSettings
      type: object
      properties:
        allowChannelMentions:
          type: boolean
          description: 'If set to true, @channel mentions are allowed.'
          nullable: true
        allowOwnerDeleteMessages:
          type: boolean
          description: 'If set to true, owners can delete any message.'
          nullable: true
        allowTeamMentions:
          type: boolean
          description: 'If set to true, @team mentions are allowed.'
          nullable: true
        allowUserDeleteMessages:
          type: boolean
          description: 'If set to true, users can delete their messages.'
          nullable: true
        allowUserEditMessages:
          type: boolean
          description: 'If set to true, users can edit their messages.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.teamSpecialization:
      title: teamSpecialization
      enum:
        - none
        - educationStandard
        - educationClass
        - educationProfessionalLearningCommunity
        - educationStaff
        - healthcareStandard
        - healthcareCareCoordination
        - unknownFutureValue
      type: string
    microsoft.graph.teamSummary:
      title: teamSummary
      type: object
      properties:
        guestsCount:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Count of guests in a team.
          format: int32
          nullable: true
        membersCount:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Count of members in a team.
          format: int32
          nullable: true
        ownersCount:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Count of owners in a team.
          format: int32
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.teamVisibilityType:
      title: teamVisibilityType
      enum:
        - private
        - public
        - hiddenMembership
        - unknownFutureValue
      type: string
    microsoft.graph.channel:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: channel
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Read only. Timestamp at which the channel was created.
              format: date-time
              nullable: true
            description:
              type: string
              description: Optional textual description for the channel.
              nullable: true
            displayName:
              type: string
              description: Channel name as it will appear to the user in Microsoft Teams.
            email:
              type: string
              description: The email address for sending messages to the channel. Read-only.
              nullable: true
            isFavoriteByDefault:
              type: boolean
              description: 'Indicates whether the channel should automatically be marked ''favorite'' for all members of the team. Can only be set programmatically with Create team. Default: false.'
              nullable: true
            membershipType:
              $ref: '#/components/schemas/microsoft.graph.channelMembershipType'
            moderationSettings:
              $ref: '#/components/schemas/microsoft.graph.channelModerationSettings'
            tenantId:
              type: string
              description: The ID of the Azure Active Directory tenant.
              nullable: true
            webUrl:
              type: string
              description: 'A hyperlink that will go to the channel in Microsoft Teams. This is the URL that you get when you right-click a channel in Microsoft Teams and select Get link to channel. This URL should be treated as an opaque blob, and not parsed. Read-only.'
              nullable: true
            filesFolder:
              $ref: '#/components/schemas/microsoft.graph.driveItem'
            members:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.conversationMember'
              description: A collection of membership records associated with the channel.
            messages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.chatMessage'
              description: A collection of all the messages in the channel. A navigation property. Nullable.
            sharedWithTeams:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sharedWithChannelTeamInfo'
              description: A collection of teams with which a channel is shared.
            tabs:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.teamsTab'
              description: A collection of all the tabs in the channel. A navigation property.
          additionalProperties:
            type: object
    microsoft.graph.teamworkTag:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: teamworkTag
          type: object
          properties:
            description:
              type: string
              description: Tag description as it will appear to the user in Microsoft Teams.
              nullable: true
            displayName:
              type: string
              description: Tag name as it will appear to the user in Microsoft Teams.
              nullable: true
            memberCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The number of users assigned to the tag.
              format: int32
              nullable: true
            tagType:
              $ref: '#/components/schemas/microsoft.graph.teamworkTagType'
            teamId:
              type: string
              description: ID of the team in which the tag is defined.
              nullable: true
            members:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.teamworkTagMember'
              description: Users assigned to the tag.
          additionalProperties:
            type: object
    microsoft.graph.teamsTemplate:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: teamsTemplate
          type: object
          additionalProperties:
            type: object
    microsoft.graph.schedule:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: schedule
          type: object
          properties:
            enabled:
              type: boolean
              description: Indicates whether the schedule is enabled for the team. Required.
              nullable: true
            offerShiftRequestsEnabled:
              type: boolean
              description: Indicates whether offer shift requests are enabled for the schedule.
              nullable: true
            openShiftsEnabled:
              type: boolean
              description: Indicates whether open shifts are enabled for the schedule.
              nullable: true
            provisionStatus:
              $ref: '#/components/schemas/microsoft.graph.operationStatus'
            provisionStatusCode:
              type: string
              description: Additional information about why schedule provisioning failed.
              nullable: true
            swapShiftsRequestsEnabled:
              type: boolean
              description: Indicates whether swap shifts requests are enabled for the schedule.
              nullable: true
            timeClockEnabled:
              type: boolean
              description: Indicates whether time clock is enabled for the schedule.
              nullable: true
            timeClockSettings:
              $ref: '#/components/schemas/microsoft.graph.timeClockSettings'
            timeOffRequestsEnabled:
              type: boolean
              description: Indicates whether time off requests are enabled for the schedule.
              nullable: true
            timeZone:
              type: string
              description: Indicates the time zone of the schedule team using tz database format. Required.
              nullable: true
            workforceIntegrationIds:
              type: array
              items:
                type: string
                nullable: true
            offerShiftRequests:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.offerShiftRequest'
            openShiftChangeRequests:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.openShiftChangeRequest'
            openShifts:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.openShift'
            schedulingGroups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.schedulingGroup'
              description: The logical grouping of users in the schedule (usually by role).
            shifts:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.shift'
              description: The shifts in the schedule.
            swapShiftsChangeRequests:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.swapShiftsChangeRequest'
            timeCards:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.timeCard'
            timeOffReasons:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.timeOffReason'
              description: The set of reasons for a time off in the schedule.
            timeOffRequests:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.timeOffRequest'
            timesOff:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.timeOff'
              description: The instances of times off in the schedule.
          additionalProperties:
            type: object
    microsoft.graph.associatedTeamInfo:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.teamInfo'
        - title: associatedTeamInfo
          type: object
          additionalProperties:
            type: object
    microsoft.graph.userScopeTeamsAppInstallation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.teamsAppInstallation'
        - title: userScopeTeamsAppInstallation
          type: object
          properties:
            chat:
              $ref: '#/components/schemas/microsoft.graph.chat'
          additionalProperties:
            type: object
    microsoft.graph.todoTaskList:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: todoTaskList
          type: object
          properties:
            displayName:
              type: string
              description: The name of the task list.
              nullable: true
            isOwner:
              type: boolean
              description: True if the user is owner of the given task list.
            isShared:
              type: boolean
              description: True if the task list is shared with other users
            wellknownListName:
              $ref: '#/components/schemas/microsoft.graph.wellknownListName'
            extensions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.extension'
              description: The collection of open extensions defined for the task list. Nullable.
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.todoTask'
              description: The tasks in this task list. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.mediaSourceContentCategory:
      title: mediaSourceContentCategory
      enum:
        - meeting
        - liveStream
        - presentation
        - screenRecording
        - unknownFutureValue
      type: string
    microsoft.graph.workbookCommentReply:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookCommentReply
          type: object
          properties:
            content:
              type: string
              description: The content of replied comment.
              nullable: true
            contentType:
              type: string
              description: Indicates the type for the replied comment.
          additionalProperties:
            type: object
    microsoft.graph.workbookOperationError:
      title: workbookOperationError
      type: object
      properties:
        code:
          type: string
          description: The error code.
          nullable: true
        innerError:
          $ref: '#/components/schemas/microsoft.graph.workbookOperationError'
        message:
          type: string
          description: The error message.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.workbookOperationStatus:
      title: workbookOperationStatus
      enum:
        - notStarted
        - running
        - succeeded
        - failed
      type: string
    microsoft.graph.workbookTableColumn:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookTableColumn
          type: object
          properties:
            index:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.
              format: int32
            name:
              type: string
              description: Returns the name of the table column.
              nullable: true
            values:
              $ref: '#/components/schemas/microsoft.graph.Json'
            filter:
              $ref: '#/components/schemas/microsoft.graph.workbookFilter'
          additionalProperties:
            type: object
    microsoft.graph.workbookTableRow:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookTableRow
          type: object
          properties:
            index:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only.
              format: int32
            values:
              $ref: '#/components/schemas/microsoft.graph.Json'
          additionalProperties:
            type: object
    microsoft.graph.workbookTableSort:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookTableSort
          type: object
          properties:
            fields:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookSortField'
              description: Represents the current conditions used to last sort the table. Read-only.
            matchCase:
              type: boolean
              description: Represents whether the casing impacted the last sort of the table. Read-only.
            method:
              type: string
              description: 'Represents Chinese character ordering method last used to sort the table. Possible values are: PinYin, StrokeCount. Read-only.'
          additionalProperties:
            type: object
    microsoft.graph.workbookChart:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChart
          type: object
          properties:
            height:
              type: number
              description: 'Represents the height, in points, of the chart object.'
              format: double
            left:
              type: number
              description: 'The distance, in points, from the left side of the chart to the worksheet origin.'
              format: double
            name:
              type: string
              description: Represents the name of a chart object.
              nullable: true
            top:
              type: number
              description: 'Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).'
              format: double
            width:
              type: number
              description: 'Represents the width, in points, of the chart object.'
              format: double
            axes:
              $ref: '#/components/schemas/microsoft.graph.workbookChartAxes'
            dataLabels:
              $ref: '#/components/schemas/microsoft.graph.workbookChartDataLabels'
            format:
              $ref: '#/components/schemas/microsoft.graph.workbookChartAreaFormat'
            legend:
              $ref: '#/components/schemas/microsoft.graph.workbookChartLegend'
            series:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookChartSeries'
              description: Represents either a single series or collection of series in the chart. Read-only.
            title:
              $ref: '#/components/schemas/microsoft.graph.workbookChartTitle'
            worksheet:
              $ref: '#/components/schemas/microsoft.graph.workbookWorksheet'
          additionalProperties:
            type: object
    microsoft.graph.workbookPivotTable:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookPivotTable
          type: object
          properties:
            name:
              type: string
              description: Name of the PivotTable.
              nullable: true
            worksheet:
              $ref: '#/components/schemas/microsoft.graph.workbookWorksheet'
          additionalProperties:
            type: object
    microsoft.graph.workbookWorksheetProtection:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookWorksheetProtection
          type: object
          properties:
            options:
              $ref: '#/components/schemas/microsoft.graph.workbookWorksheetProtectionOptions'
            protected:
              type: boolean
              description: Indicates if the worksheet is protected.  Read-only.
          additionalProperties:
            type: object
    microsoft.graph.ODataErrors.ErrorDetails:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.ODataErrors.InnerError:
      type: object
      additionalProperties:
        type: object
      description: The structure of this object is service-specific
    microsoft.graph.externalAudienceScope:
      title: externalAudienceScope
      enum:
        - none
        - contactsOnly
        - all
      type: string
    microsoft.graph.automaticRepliesStatus:
      title: automaticRepliesStatus
      enum:
        - disabled
        - alwaysEnabled
        - scheduled
      type: string
    microsoft.graph.dayOfWeek:
      title: dayOfWeek
      enum:
        - sunday
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
      type: string
    microsoft.graph.timeZoneBase:
      title: timeZoneBase
      type: object
      properties:
        name:
          type: string
          description: 'The name of a time zone. It can be a standard time zone name such as ''Hawaii-Aleutian Standard Time'', or ''Customized Time Zone'' for a custom time zone.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.printerBase:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: printerBase
          type: object
          properties:
            capabilities:
              $ref: '#/components/schemas/microsoft.graph.printerCapabilities'
            defaults:
              $ref: '#/components/schemas/microsoft.graph.printerDefaults'
            displayName:
              type: string
              description: The name of the printer/printerShare.
              nullable: true
            isAcceptingJobs:
              type: boolean
              description: Whether the printer/printerShare is currently accepting new print jobs.
              nullable: true
            location:
              $ref: '#/components/schemas/microsoft.graph.printerLocation'
            manufacturer:
              type: string
              description: The manufacturer of the printer/printerShare.
              nullable: true
            model:
              type: string
              description: The model name of the printer/printerShare.
              nullable: true
            name:
              type: string
              nullable: true
            status:
              $ref: '#/components/schemas/microsoft.graph.printerStatus'
            jobs:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.printJob'
              description: The list of jobs that are queued for printing by the printer/printerShare.
          additionalProperties:
            type: object
    microsoft.graph.printerShareViewpoint:
      title: printerShareViewpoint
      type: object
      properties:
        lastUsedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.printer:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.printerBase'
        - title: printer
          type: object
          properties:
            acceptingJobs:
              type: boolean
              nullable: true
            hasPhysicalDevice:
              type: boolean
              description: True if the printer has a physical device for printing. Read-only.
            isShared:
              type: boolean
              description: True if the printer is shared; false otherwise. Read-only.
            lastSeenDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The most recent dateTimeOffset when a printer interacted with Universal Print. Read-only.
              format: date-time
              nullable: true
            registeredDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The DateTimeOffset when the printer was registered. Read-only.
              format: date-time
            connectors:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.printConnector'
              description: The connectors that are associated with the printer.
            share:
              $ref: '#/components/schemas/microsoft.graph.printerShare'
            shares:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.printerShare'
              description: 'The list of printerShares that are associated with the printer. Currently, only one printerShare can be associated with the printer. Read-only. Nullable.'
            taskTriggers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.printTaskTrigger'
              description: A list of task triggers that are associated with the printer.
          additionalProperties:
            type: object
    microsoft.graph.analyticsActivityType:
      title: analyticsActivityType
      enum:
        - Email
        - Meeting
        - Focus
        - Chat
        - Call
      type: string
    microsoft.graph.actionState:
      title: actionState
      enum:
        - none
        - pending
        - canceled
        - active
        - done
        - failed
        - notSupported
      type: string
    microsoft.graph.bitlockerRecoveryKey:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: bitlockerRecoveryKey
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date and time when the key was originally backed up to Azure Active Directory.
              format: date-time
            deviceId:
              type: string
              description: ID of the device the BitLocker key is originally backed up from.
              nullable: true
            key:
              type: string
              description: The BitLocker recovery key.
            volumeType:
              $ref: '#/components/schemas/microsoft.graph.volumeType'
          additionalProperties:
            type: object
    microsoft.graph.sensitivityLabelTarget:
      title: sensitivityLabelTarget
      enum:
        - email
        - site
        - unifiedGroup
        - unknownFutureValue
        - teamwork
      type: string
    microsoft.graph.applicationMode:
      title: applicationMode
      enum:
        - manual
        - automatic
        - recommended
      type: string
    microsoft.graph.labelPolicy:
      title: labelPolicy
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.autoLabeling:
      title: autoLabeling
      type: object
      properties:
        message:
          type: string
          nullable: true
        sensitiveTypeIds:
          type: array
          items:
            type: string
            nullable: true
      additionalProperties:
        type: object
    microsoft.graph.labelActionBase:
      title: labelActionBase
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.informationProtectionLabel:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: informationProtectionLabel
          type: object
          properties:
            color:
              type: string
              description: 'The color that the UI should display for the label, if configured.'
              nullable: true
            description:
              type: string
              description: The admin-defined description for the label.
              nullable: true
            isActive:
              type: boolean
              description: Indicates whether the label is active or not. Active labels should be hidden or disabled in UI.
            name:
              type: string
              description: The plaintext name of the label.
              nullable: true
            parent:
              $ref: '#/components/schemas/microsoft.graph.parentLabelDetails'
            sensitivity:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: 'The sensitivity value of the label, where lower is less sensitive.'
              format: int32
            tooltip:
              type: string
              description: The tooltip that should be displayed for the label in a UI.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.threatCategory:
      title: threatCategory
      enum:
        - undefined
        - spam
        - phishing
        - malware
        - unknownFutureValue
      type: string
    microsoft.graph.threatAssessmentContentType:
      title: threatAssessmentContentType
      enum:
        - mail
        - url
        - file
      type: string
    microsoft.graph.threatExpectedAssessment:
      title: threatExpectedAssessment
      enum:
        - block
        - unblock
      type: string
    microsoft.graph.threatAssessmentRequestSource:
      title: threatAssessmentRequestSource
      enum:
        - undefined
        - user
        - administrator
      type: string
    microsoft.graph.threatAssessmentStatus:
      title: threatAssessmentStatus
      enum:
        - pending
        - completed
      type: string
    microsoft.graph.threatAssessmentResult:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: threatAssessmentResult
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.'
              format: date-time
              nullable: true
            message:
              type: string
              description: The result message for each threat assessment.
              nullable: true
            resultType:
              $ref: '#/components/schemas/microsoft.graph.threatAssessmentResultType'
          additionalProperties:
            type: object
    microsoft.graph.calendarRoleType:
      title: calendarRoleType
      enum:
        - none
        - freeBusyRead
        - limitedRead
        - read
        - write
        - delegateWithoutPrivateEventAccess
        - delegateWithPrivateEventAccess
        - custom
      type: string
    microsoft.graph.attendeeBase:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.recipient'
        - title: attendeeBase
          type: object
          properties:
            type:
              $ref: '#/components/schemas/microsoft.graph.attendeeType'
          additionalProperties:
            type: object
    microsoft.graph.timeSlot:
      title: timeSlot
      type: object
      properties:
        end:
          $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
        start:
          $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
      additionalProperties:
        type: object
    microsoft.graph.bodyType:
      title: bodyType
      enum:
        - text
        - html
      type: string
    microsoft.graph.outlookGeoCoordinates:
      title: outlookGeoCoordinates
      type: object
      properties:
        accuracy:
          type: number
          description: 'The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters.'
          format: double
          nullable: true
        altitude:
          type: number
          description: The altitude of the location.
          format: double
          nullable: true
        altitudeAccuracy:
          type: number
          description: The accuracy of the altitude.
          format: double
          nullable: true
        latitude:
          type: number
          description: The latitude of the location.
          format: double
          nullable: true
        longitude:
          type: number
          description: The longitude of the location.
          format: double
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.locationType:
      title: locationType
      enum:
        - default
        - conferenceRoom
        - homeAddress
        - businessAddress
        - geoCoordinates
        - streetAddress
        - hotel
        - restaurant
        - localBusiness
        - postalAddress
      type: string
    microsoft.graph.locationUniqueIdType:
      title: locationUniqueIdType
      enum:
        - unknown
        - locationStore
        - directory
        - private
        - bing
      type: string
    microsoft.graph.recurrencePattern:
      title: recurrencePattern
      type: object
      properties:
        dayOfMonth:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.
          format: int32
        daysOfWeek:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.dayOfWeek'
          description: 'A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly.'
        firstDayOfWeek:
          $ref: '#/components/schemas/microsoft.graph.dayOfWeek'
        index:
          $ref: '#/components/schemas/microsoft.graph.weekIndex'
        interval:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required.'
          format: int32
        month:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The month in which the event occurs.  This is a number from 1 to 12.
          format: int32
        type:
          $ref: '#/components/schemas/microsoft.graph.recurrencePatternType'
      additionalProperties:
        type: object
    microsoft.graph.recurrenceRange:
      title: recurrenceRange
      type: object
      properties:
        endDate:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
          type: string
          description: 'The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate.'
          format: date
          nullable: true
        numberOfOccurrences:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The number of times to repeat the event. Required and must be positive if type is numbered.
          format: int32
        recurrenceTimeZone:
          type: string
          description: 'Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.'
          nullable: true
        startDate:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
          type: string
          description: 'The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.'
          format: date
          nullable: true
        type:
          $ref: '#/components/schemas/microsoft.graph.recurrenceRangeType'
      additionalProperties:
        type: object
    microsoft.graph.responseType:
      title: responseType
      enum:
        - none
        - organizer
        - tentativelyAccepted
        - accepted
        - declined
        - notResponded
      type: string
    microsoft.graph.emailType:
      title: emailType
      enum:
        - unknown
        - work
        - personal
        - main
        - other
      type: string
    microsoft.graph.followupFlagStatus:
      title: followupFlagStatus
      enum:
        - notFlagged
        - complete
        - flagged
      type: string
    microsoft.graph.phoneType:
      title: phoneType
      enum:
        - home
        - business
        - mobile
        - other
        - assistant
        - homeFax
        - businessFax
        - otherFax
        - pager
        - radio
      type: string
    microsoft.graph.physicalAddressType:
      title: physicalAddressType
      enum:
        - unknown
        - home
        - business
        - other
      type: string
    microsoft.graph.websiteType:
      title: websiteType
      enum:
        - other
        - home
        - work
        - blog
        - profile
      type: string
    microsoft.graph.writebackConfiguration:
      title: writebackConfiguration
      type: object
      properties:
        isEnabled:
          type: boolean
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.MembershipRuleProcessingStatusDetails:
      title: MembershipRuleProcessingStatusDetails
      enum:
        - NotStarted
        - Running
        - Failed
        - Succeeded
        - UnsupportedFutureValue
      type: string
    microsoft.graph.settingValue:
      title: settingValue
      type: object
      properties:
        name:
          type: string
          description: Name of the setting (as defined by the directorySettingTemplate).
          nullable: true
        value:
          type: string
          description: Value of the setting.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.post:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.outlookItem'
        - title: post
          type: object
          properties:
            body:
              $ref: '#/components/schemas/microsoft.graph.itemBody'
            conversationId:
              type: string
              description: Unique ID of the conversation. Read-only.
              nullable: true
            conversationThreadId:
              type: string
              description: Unique ID of the conversation thread. Read-only.
              nullable: true
            from:
              $ref: '#/components/schemas/microsoft.graph.recipient'
            hasAttachments:
              type: boolean
              description: Indicates whether the post has at least one attachment. This is a default property.
            importance:
              $ref: '#/components/schemas/microsoft.graph.importance'
            newParticipants:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.recipient'
              description: Conversation participants that were added to the thread as part of this post.
            receivedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Specifies when the post was received. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
            sender:
              $ref: '#/components/schemas/microsoft.graph.recipient'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.attachment'
              description: 'The collection of fileAttachment, itemAttachment, and referenceAttachment attachments for the post. Read-only. Nullable. Supports $expand.'
            extensions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.extension'
              description: The collection of open extensions defined for the post. Read-only. Nullable. Supports $expand.
            inReplyTo:
              $ref: '#/components/schemas/microsoft.graph.post'
            mentions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.mention'
            multiValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty'
              description: The collection of multi-value extended properties defined for the post. Read-only. Nullable.
            singleValueExtendedProperties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty'
              description: The collection of single-value extended properties defined for the post. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.messageRuleActions:
      title: messageRuleActions
      type: object
      properties:
        assignCategories:
          type: array
          items:
            type: string
            nullable: true
          description: A list of categories to be assigned to a message.
        copyToFolder:
          type: string
          description: The ID of a folder that a message is to be copied to.
          nullable: true
        delete:
          type: boolean
          description: Indicates whether a message should be moved to the Deleted Items folder.
          nullable: true
        forwardAsAttachmentTo:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.recipient'
          description: The email addresses of the recipients to which a message should be forwarded as an attachment.
        forwardTo:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.recipient'
          description: The email addresses of the recipients to which a message should be forwarded.
        markAsRead:
          type: boolean
          description: Indicates whether a message should be marked as read.
          nullable: true
        markImportance:
          $ref: '#/components/schemas/microsoft.graph.importance'
        moveToFolder:
          type: string
          description: The ID of the folder that a message will be moved to.
          nullable: true
        permanentDelete:
          type: boolean
          description: Indicates whether a message should be permanently deleted and not saved to the Deleted Items folder.
          nullable: true
        redirectTo:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.recipient'
          description: The email address to which a message should be redirected.
        stopProcessingRules:
          type: boolean
          description: Indicates whether subsequent rules should be evaluated.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.messageRulePredicates:
      title: messageRulePredicates
      type: object
      properties:
        bodyContains:
          type: array
          items:
            type: string
            nullable: true
          description: Represents the strings that should appear in the body of an incoming message in order for the condition or exception to apply.
        bodyOrSubjectContains:
          type: array
          items:
            type: string
            nullable: true
          description: Represents the strings that should appear in the body or subject of an incoming message in order for the condition or exception to apply.
        categories:
          type: array
          items:
            type: string
            nullable: true
          description: Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply.
        fromAddresses:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.recipient'
          description: Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply.
        hasAttachments:
          type: boolean
          description: Indicates whether an incoming message must have attachments in order for the condition or exception to apply.
          nullable: true
        headerContains:
          type: array
          items:
            type: string
            nullable: true
          description: Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply.
        importance:
          $ref: '#/components/schemas/microsoft.graph.importance'
        isApprovalRequest:
          type: boolean
          description: Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.
          nullable: true
        isAutomaticForward:
          type: boolean
          description: Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.
          nullable: true
        isAutomaticReply:
          type: boolean
          description: Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.
          nullable: true
        isEncrypted:
          type: boolean
          description: Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.
          nullable: true
        isMeetingRequest:
          type: boolean
          description: Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.
          nullable: true
        isMeetingResponse:
          type: boolean
          description: Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.
          nullable: true
        isNonDeliveryReport:
          type: boolean
          description: Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.
          nullable: true
        isPermissionControlled:
          type: boolean
          description: Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception to apply.
          nullable: true
        isReadReceipt:
          type: boolean
          description: Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.
          nullable: true
        isSigned:
          type: boolean
          description: Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.
          nullable: true
        isVoicemail:
          type: boolean
          description: Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.
          nullable: true
        messageActionFlag:
          $ref: '#/components/schemas/microsoft.graph.messageActionFlag'
        notSentToMe:
          type: boolean
          description: Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or exception to apply.
          nullable: true
        recipientContains:
          type: array
          items:
            type: string
            nullable: true
          description: Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order for the condition or exception to apply.
        senderContains:
          type: array
          items:
            type: string
            nullable: true
          description: Represents the strings that appear in the from property of an incoming message in order for the condition or exception to apply.
        sensitivity:
          $ref: '#/components/schemas/microsoft.graph.sensitivity'
        sentCcMe:
          type: boolean
          description: Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the condition or exception to apply.
          nullable: true
        sentOnlyToMe:
          type: boolean
          description: Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition or exception to apply.
          nullable: true
        sentToAddresses:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.recipient'
          description: Represents the email addresses that an incoming message must have been sent to in order for the condition or exception to apply.
        sentToMe:
          type: boolean
          description: Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the condition or exception to apply.
          nullable: true
        sentToOrCcMe:
          type: boolean
          description: Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message in order for the condition or exception to apply.
          nullable: true
        subjectContains:
          type: array
          items:
            type: string
            nullable: true
          description: Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply.
        withinSizeRange:
          $ref: '#/components/schemas/microsoft.graph.sizeRange'
      additionalProperties:
        type: object
    microsoft.graph.categoryColor:
      title: categoryColor
      enum:
        - none
        - preset0
        - preset1
        - preset2
        - preset3
        - preset4
        - preset5
        - preset6
        - preset7
        - preset8
        - preset9
        - preset10
        - preset11
        - preset12
        - preset13
        - preset14
        - preset15
        - preset16
        - preset17
        - preset18
        - preset19
        - preset20
        - preset21
        - preset22
        - preset23
        - preset24
      type: string
    microsoft.graph.taskStatus:
      title: taskStatus
      enum:
        - notStarted
        - inProgress
        - completed
        - waitingOnOthers
        - deferred
      type: string
    microsoft.graph.request:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: request
          type: object
          properties:
            approvalId:
              type: string
              description: The identifier of the approval of the request.
              nullable: true
            completedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The request completion date time.
              format: date-time
              nullable: true
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The request creation date time.
              format: date-time
              nullable: true
            customData:
              type: string
              description: Free text field to define any custom data for the request. Not used.
              nullable: true
            status:
              type: string
              description: 'The status of the request. Not nullable. The possible values are: Canceled, Denied, Failed, Granted, PendingAdminDecision, PendingApproval, PendingProvisioning, PendingScheduleCreation, Provisioned, Revoked, and ScheduleCreated. Not nullable.'
          additionalProperties:
            type: object
    microsoft.graph.genericError:
      title: genericError
      type: object
      properties:
        code:
          type: string
          description: The error code.
          nullable: true
        message:
          type: string
          description: The error message.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.userIdentity:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.identity'
        - title: userIdentity
          type: object
          properties:
            ipAddress:
              type: string
              description: Indicates the client IP address used by user performing the activity (audit log only).
              nullable: true
            userPrincipalName:
              type: string
              description: The userPrincipalName attribute of the user.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.decisionItemPrincipalResourceMembership:
      title: decisionItemPrincipalResourceMembership
      type: object
      properties:
        membershipType:
          $ref: '#/components/schemas/microsoft.graph.decisionItemPrincipalResourceMembershipType'
      additionalProperties:
        type: object
    microsoft.graph.accessReviewInstanceDecisionItemResource:
      title: accessReviewInstanceDecisionItemResource
      type: object
      properties:
        displayName:
          type: string
          description: Display name of the resource
          nullable: true
        id:
          type: string
          description: Resource ID
          nullable: true
        type:
          type: string
          description: 'Type of resource. Types include: Group, ServicePrincipal, DirectoryRole, AzureRole, AccessPackageAssignmentPolicy.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.accessReviewInstanceDecisionItemTarget:
      title: accessReviewInstanceDecisionItemTarget
      type: object
      additionalProperties:
        type: object
    microsoft.graph.governanceInsight:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: governanceInsight
          type: object
          properties:
            insightCreatedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Indicates when the insight was created.
              format: date-time
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.accessReviewNotificationRecipientItem:
      title: accessReviewNotificationRecipientItem
      type: object
      properties:
        notificationRecipientScope:
          $ref: '#/components/schemas/microsoft.graph.accessReviewNotificationRecipientScope'
        notificationTemplateType:
          type: string
          description: Indicates the type of access review email to be sent. Supported template type is CompletedAdditionalRecipients which sends review completion notifications to the recipients.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.accessReviewScheduleSettings:
      title: accessReviewScheduleSettings
      type: object
      properties:
        applyActions:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.accessReviewApplyAction'
          description: 'Optional field. Describes the  actions to take once a review is complete. There are two types that are currently supported: removeAccessApplyAction (default) and disableAndDeleteUserApplyAction. Field only needs to be specified in the case of disableAndDeleteUserApplyAction.'
        autoApplyDecisionsEnabled:
          type: boolean
          description: 'Indicates whether decisions are automatically applied. When set to false, an admin must apply the decisions manually once the reviewer completes the access review. When set to true, decisions are applied automatically after the access review instance duration ends, whether or not the reviewers have responded. Default value is false.'
        decisionHistoriesForReviewersEnabled:
          type: boolean
          description: 'Indicates whether decisions on previous access review stages are available for reviewers on an accessReviewInstance with multiple subsequent stages. If not provided, the default is disabled (false).'
          nullable: true
        defaultDecision:
          type: string
          description: 'Decision chosen if defaultDecisionEnabled is enabled. Can be one of Approve, Deny, or Recommendation.'
          nullable: true
        defaultDecisionEnabled:
          type: boolean
          description: Indicates whether the default decision is enabled or disabled when reviewers do not respond. Default value is false.
        instanceDurationInDays:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'Duration of each recurrence of review (accessReviewInstance) in number of days. NOTE: If the stageSettings of the accessReviewScheduleDefinition object is defined, its durationInDays setting will be used instead of the value of this property.'
          format: int32
        justificationRequiredOnApproval:
          type: boolean
          description: Indicates whether reviewers are required to provide justification with their decision. Default value is false.
        mailNotificationsEnabled:
          type: boolean
          description: Indicates whether emails are enabled or disabled. Default value is false.
        recommendationInsightSettings:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.accessReviewRecommendationInsightSetting'
          description: 'Optional. Describes the types of insights that aid reviewers to make access review decisions. NOTE: If the stageSettings of the accessReviewScheduleDefinition object is defined, its recommendationInsightSettings setting will be used instead of the value of this property.'
        recommendationLookBackDuration:
          pattern: '^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$'
          type: string
          description: 'Optional field. Indicates the period of inactivity (with respect to the start date of the review instance) that recommendations will be configured from. The recommendation will be to deny if the user is inactive during the look-back duration. For reviews of groups and Azure AD roles, any duration is accepted. For reviews of applications, 30 days is the maximum duration. If not specified, the duration is 30 days. NOTE: If the stageSettings of the accessReviewScheduleDefinition object is defined, its recommendationLookBackDuration setting will be used instead of the value of this property.'
          format: duration
          nullable: true
        recommendationsEnabled:
          type: boolean
          description: 'Indicates whether decision recommendations are enabled or disabled. NOTE: If the stageSettings of the accessReviewScheduleDefinition object is defined, its recommendationsEnabled setting will be used instead of the value of this property.'
        recurrence:
          $ref: '#/components/schemas/microsoft.graph.patternedRecurrence'
        reminderNotificationsEnabled:
          type: boolean
          description: Indicates whether reminders are enabled or disabled. Default value is false.
      additionalProperties:
        type: object
    microsoft.graph.accessReviewStageSettings:
      title: accessReviewStageSettings
      type: object
      properties:
        decisionsThatWillMoveToNextStage:
          type: array
          items:
            type: string
            nullable: true
          description: 'Indicate which decisions will go to the next stage. Can be a sub-set of Approve, Deny, Recommendation, or NotReviewed. If not provided, all decisions will go to the next stage. Optional.'
        dependsOn:
          type: array
          items:
            type: string
          description: 'Defines the sequential or parallel order of the stages and depends on the stageId. Only sequential stages are currently supported. For example, if stageId is 2, then dependsOn must be 1. If stageId is 1, do not specify dependsOn. Required if stageId is not 1.'
        durationInDays:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'The duration of the stage. Required.  NOTE: The cumulative value of this property across all stages  1. Will override the instanceDurationInDays setting on the accessReviewScheduleDefinition object. 2. Cannot exceed the length of one recurrence. That is, if the review recurs weekly, the cumulative durationInDays cannot exceed 7.'
          format: int32
        fallbackReviewers:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.accessReviewReviewerScope'
          description: 'If provided, the fallback reviewers are asked to complete a review if the primary reviewers do not exist. For example, if managers are selected as reviewers and a principal under review does not have a manager in Azure AD, the fallback reviewers are asked to review that principal. NOTE: The value of this property will override the corresponding setting on the accessReviewScheduleDefinition object.'
        recommendationInsightSettings:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.accessReviewRecommendationInsightSetting'
        recommendationLookBackDuration:
          pattern: '^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$'
          type: string
          description: 'Optional field. Indicates the time period of inactivity (with respect to the start date of the review instance) that recommendations will be configured from. The recommendation will be to deny if the user is inactive during the look back duration. For reviews of groups and Azure AD roles, any duration is accepted. For reviews of applications, 30 days is the maximum duration. If not specified, the duration is 30 days. NOTE: The value of this property will override the corresponding setting on the accessReviewScheduleDefinition object.'
          format: duration
          nullable: true
        recommendationsEnabled:
          type: boolean
          description: 'Indicates whether showing recommendations to reviewers is enabled. Required. NOTE: The value of this property will override override the corresponding setting on the accessReviewScheduleDefinition object.'
        reviewers:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.accessReviewReviewerScope'
          description: 'Defines who the reviewers are. If none are specified, the review is a self-review (users review their own access).  For examples of options for assigning reviewers, see Assign reviewers to your access review definition using the Microsoft Graph API. NOTE: The value of this property will override the corresponding setting on the accessReviewScheduleDefinition.'
        stageId:
          type: string
          description: Unique identifier of the accessReviewStageSettings. The stageId will be used in dependsOn property to indicate the stage relationship. Required.
      additionalProperties:
        type: object
    microsoft.graph.security.informationProtectionPolicySetting:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: informationProtectionPolicySetting
          type: object
          properties:
            defaultLabelId:
              type: string
              nullable: true
            isDowngradeJustificationRequired:
              type: boolean
            isMandatory:
              type: boolean
            moreInfoUrl:
              type: string
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.security.sensitivityLabel:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: sensitivityLabel
          type: object
          properties:
            color:
              type: string
              nullable: true
            contentFormats:
              type: array
              items:
                type: string
                nullable: true
            description:
              type: string
              nullable: true
            hasProtection:
              type: boolean
            isActive:
              type: boolean
            isAppliable:
              type: boolean
            name:
              type: string
              nullable: true
            sensitivity:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              format: int32
            tooltip:
              type: string
              nullable: true
            parent:
              $ref: '#/components/schemas/microsoft.graph.security.sensitivityLabel'
          additionalProperties:
            type: object
    microsoft.graph.deviceAndAppManagementAssignmentSource:
      title: deviceAndAppManagementAssignmentSource
      enum:
        - direct
        - policySets
      type: string
      description: Represents source of assignment.
      x-ms-enum:
        name: deviceAndAppManagementAssignmentSource
        modelAsString: false
        values:
          - value: direct
            description: Direct indicates a direct assignment.
            name: direct
          - value: policySets
            description: PolicySets indicates assignment was made via PolicySet assignment.
            name: policySets
    microsoft.graph.deviceAndAppManagementAssignmentTarget:
      title: deviceAndAppManagementAssignmentTarget
      type: object
      properties:
        deviceAndAppManagementAssignmentFilterId:
          type: string
          description: The Id of the filter for the target assignment.
          nullable: true
        deviceAndAppManagementAssignmentFilterType:
          $ref: '#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentFilterType'
      additionalProperties:
        type: object
      description: Base type for assignment targets.
    microsoft.graph.configurationManagerClientState:
      title: configurationManagerClientState
      enum:
        - unknown
        - installed
        - healthy
        - installFailed
        - updateFailed
        - communicationError
      type: string
      description: Configuration manager client state
      x-ms-enum:
        name: configurationManagerClientState
        modelAsString: false
        values:
          - value: unknown
            description: Configuration manager agent is older than 1806 or not installed or this device has not checked into Intune for over 30 days.
            name: unknown
          - value: installed
            description: The configuration manager agent is installed but may not be showing up in the configuration manager console yet. Wait a few hours for it to refresh.
            name: installed
          - value: healthy
            description: This device was able to check in with the configuration manager service successfully.
            name: healthy
          - value: installFailed
            description: The configuration manager agent failed to install.
            name: installFailed
          - value: updateFailed
            description: 'The update from version x to version y of the configuration manager agent failed. '
            name: updateFailed
          - value: communicationError
            description: 'The configuration manager agent was able to reach the configuration manager service in the past but is now no longer able to. '
            name: communicationError
    microsoft.graph.deviceGuardLocalSystemAuthorityCredentialGuardState:
      title: deviceGuardLocalSystemAuthorityCredentialGuardState
      enum:
        - running
        - rebootRequired
        - notLicensed
        - notConfigured
        - virtualizationBasedSecurityNotRunning
      type: string
      x-ms-enum:
        name: deviceGuardLocalSystemAuthorityCredentialGuardState
        modelAsString: false
        values:
          - value: running
            description: Running
            name: running
          - value: rebootRequired
            description: Reboot required
            name: rebootRequired
          - value: notLicensed
            description: Not licensed for Credential Guard
            name: notLicensed
          - value: notConfigured
            description: Not configured
            name: notConfigured
          - value: virtualizationBasedSecurityNotRunning
            description: Virtualization Based security is not running
            name: virtualizationBasedSecurityNotRunning
    microsoft.graph.deviceGuardVirtualizationBasedSecurityHardwareRequirementState:
      title: deviceGuardVirtualizationBasedSecurityHardwareRequirementState
      enum:
        - meetHardwareRequirements
        - secureBootRequired
        - dmaProtectionRequired
        - hyperVNotSupportedForGuestVM
        - hyperVNotAvailable
      type: string
      x-ms-enum:
        name: deviceGuardVirtualizationBasedSecurityHardwareRequirementState
        modelAsString: false
        values:
          - value: meetHardwareRequirements
            description: System meets hardware configuration requirements
            name: meetHardwareRequirements
          - value: secureBootRequired
            description: Secure boot required
            name: secureBootRequired
          - value: dmaProtectionRequired
            description: DMA protection required
            name: dmaProtectionRequired
          - value: hyperVNotSupportedForGuestVM
            description: HyperV not supported for Guest VM
            name: hyperVNotSupportedForGuestVM
          - value: hyperVNotAvailable
            description: HyperV feature is not available
            name: hyperVNotAvailable
    microsoft.graph.deviceGuardVirtualizationBasedSecurityState:
      title: deviceGuardVirtualizationBasedSecurityState
      enum:
        - running
        - rebootRequired
        - require64BitArchitecture
        - notLicensed
        - notConfigured
        - doesNotMeetHardwareRequirements
        - other
      type: string
      x-ms-enum:
        name: deviceGuardVirtualizationBasedSecurityState
        modelAsString: false
        values:
          - value: running
            description: Running
            name: running
          - value: rebootRequired
            description: Root required
            name: rebootRequired
          - value: require64BitArchitecture
            description: 64 bit architecture required
            name: require64BitArchitecture
          - value: notLicensed
            description: Not licensed
            name: notLicensed
          - value: notConfigured
            description: Not configured
            name: notConfigured
          - value: doesNotMeetHardwareRequirements
            description: System does not meet hardware requirements
            name: doesNotMeetHardwareRequirements
          - value: other
            description: Other. Event logs in microsoft-Windows-DeviceGuard have more details.
            name: other
    microsoft.graph.sharedAppleDeviceUser:
      title: sharedAppleDeviceUser
      type: object
      properties:
        dataQuota:
          type: integer
          description: Data quota
          format: int64
          nullable: true
        dataToSync:
          type: boolean
          description: Data to sync
        dataUsed:
          type: integer
          description: Data quota
          format: int64
        userPrincipalName:
          type: string
          description: User name
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.policyPlatformType:
      title: policyPlatformType
      enum:
        - android
        - androidForWork
        - iOS
        - macOS
        - windowsPhone81
        - windows81AndLater
        - windows10AndLater
        - androidWorkProfile
        - windows10XProfile
        - androidAOSP
        - all
      type: string
      description: Supported platform types for policies.
      x-ms-enum:
        name: policyPlatformType
        modelAsString: false
        values:
          - value: android
            description: Android.
            name: android
          - value: androidForWork
            description: AndroidForWork.
            name: androidForWork
          - value: iOS
            description: iOS.
            name: iOS
          - value: macOS
            description: MacOS.
            name: macOS
          - value: windowsPhone81
            description: WindowsPhone 8.1.
            name: windowsPhone81
          - value: windows81AndLater
            description: Windows 8.1 and later
            name: windows81AndLater
          - value: windows10AndLater
            description: Windows 10 and later.
            name: windows10AndLater
          - value: androidWorkProfile
            description: AndroidWorkProfile.
            name: androidWorkProfile
          - value: windows10XProfile
            description: Windows10XProfile.
            name: windows10XProfile
          - value: androidAOSP
            description: AndroidAOSPProfile.
            name: androidAOSP
          - value: all
            description: All platforms.
            name: all
    microsoft.graph.deviceCompliancePolicySettingState:
      title: deviceCompliancePolicySettingState
      type: object
      properties:
        currentValue:
          type: string
          description: Current value of setting on device
          nullable: true
        errorCode:
          type: integer
          description: Error code for the setting
          format: int64
        errorDescription:
          type: string
          description: Error description
          nullable: true
        instanceDisplayName:
          type: string
          description: Name of setting instance that is being reported.
          nullable: true
        setting:
          type: string
          description: The setting that is being reported
          nullable: true
        settingInstanceId:
          type: string
          description: SettingInstanceId
          nullable: true
        settingName:
          type: string
          description: Localized/user friendly setting name that is being reported
          nullable: true
        sources:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.settingSource'
          description: Contributing policies
        state:
          $ref: '#/components/schemas/microsoft.graph.complianceStatus'
        userEmail:
          type: string
          description: UserEmail
          nullable: true
        userId:
          type: string
          description: UserId
          nullable: true
        userName:
          type: string
          description: UserName
          nullable: true
        userPrincipalName:
          type: string
          description: UserPrincipalName.
          nullable: true
      additionalProperties:
        type: object
      description: Device Compilance Policy Setting State for a given device.
    microsoft.graph.complianceStatus:
      title: complianceStatus
      enum:
        - unknown
        - notApplicable
        - compliant
        - remediated
        - nonCompliant
        - error
        - conflict
        - notAssigned
      type: string
    microsoft.graph.deviceConfigurationSettingState:
      title: deviceConfigurationSettingState
      type: object
      properties:
        currentValue:
          type: string
          description: Current value of setting on device
          nullable: true
        errorCode:
          type: integer
          description: Error code for the setting
          format: int64
        errorDescription:
          type: string
          description: Error description
          nullable: true
        instanceDisplayName:
          type: string
          description: Name of setting instance that is being reported.
          nullable: true
        setting:
          type: string
          description: The setting that is being reported
          nullable: true
        settingInstanceId:
          type: string
          description: SettingInstanceId
          nullable: true
        settingName:
          type: string
          description: Localized/user friendly setting name that is being reported
          nullable: true
        sources:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.settingSource'
          description: Contributing policies
        state:
          $ref: '#/components/schemas/microsoft.graph.complianceStatus'
        userEmail:
          type: string
          description: UserEmail
          nullable: true
        userId:
          type: string
          description: UserId
          nullable: true
        userName:
          type: string
          description: UserName
          nullable: true
        userPrincipalName:
          type: string
          description: UserPrincipalName.
          nullable: true
      additionalProperties:
        type: object
      description: Device Configuration Setting State for a given device.
    microsoft.graph.managedDeviceMobileAppConfigurationSettingState:
      title: managedDeviceMobileAppConfigurationSettingState
      type: object
      properties:
        currentValue:
          type: string
          description: Current value of setting on device
          nullable: true
        errorCode:
          type: integer
          description: Error code for the setting
          format: int64
        errorDescription:
          type: string
          description: Error description
          nullable: true
        instanceDisplayName:
          type: string
          description: Name of setting instance that is being reported.
          nullable: true
        setting:
          type: string
          description: The setting that is being reported
          nullable: true
        settingInstanceId:
          type: string
          description: SettingInstanceId
          nullable: true
        settingName:
          type: string
          description: Localized/user friendly setting name that is being reported
          nullable: true
        sources:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.settingSource'
          description: Contributing policies
        state:
          $ref: '#/components/schemas/microsoft.graph.complianceStatus'
        userEmail:
          type: string
          description: UserEmail
          nullable: true
        userId:
          type: string
          description: UserId
          nullable: true
        userName:
          type: string
          description: UserName
          nullable: true
        userPrincipalName:
          type: string
          description: UserPrincipalName.
          nullable: true
      additionalProperties:
        type: object
      description: Managed Device Mobile App Configuration Setting State for a given device.
    microsoft.graph.securityBaselineComplianceState:
      title: securityBaselineComplianceState
      enum:
        - unknown
        - secure
        - notApplicable
        - notSecure
        - error
        - conflict
      type: string
      description: Security Baseline Compliance State
      x-ms-enum:
        name: securityBaselineComplianceState
        modelAsString: false
        values:
          - value: unknown
            description: Unknown state
            name: unknown
          - value: secure
            description: Secure state
            name: secure
          - value: notApplicable
            description: Not applicable state
            name: notApplicable
          - value: notSecure
            description: Not secure state
            name: notSecure
          - value: error
            description: Error state
            name: error
          - value: conflict
            description: Conflict state
            name: conflict
    microsoft.graph.securityBaselineSettingState:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: securityBaselineSettingState
          type: object
          properties:
            contributingPolicies:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.securityBaselineContributingPolicy'
              description: The policies that contribute to this setting instance
            errorCode:
              type: string
              description: The error code if the setting is in error state
              nullable: true
            settingCategoryId:
              type: string
              description: The setting category id which this setting belongs to
              nullable: true
            settingCategoryName:
              type: string
              description: The setting category name which this setting belongs to
              nullable: true
            settingId:
              type: string
              description: The setting id guid
              nullable: true
            settingName:
              type: string
              description: The setting name that is being reported
            sourcePolicies:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.settingSource'
              description: The policies that contribute to this setting instance
            state:
              $ref: '#/components/schemas/microsoft.graph.securityBaselineComplianceState'
          additionalProperties:
            type: object
          description: The security baseline compliance state of a setting for a device
    microsoft.graph.windowsDeviceHealthState:
      title: windowsDeviceHealthState
      enum:
        - clean
        - fullScanPending
        - rebootPending
        - manualStepsPending
        - offlineScanPending
        - critical
      type: string
      description: Computer endpoint protection state
      x-ms-enum:
        name: windowsDeviceHealthState
        modelAsString: false
        values:
          - value: clean
            description: Computer is clean and no action is required
            name: clean
          - value: fullScanPending
            description: Computer is in pending full scan state
            name: fullScanPending
          - value: rebootPending
            description: Computer is in pending reboot state
            name: rebootPending
          - value: manualStepsPending
            description: Computer is in pending manual steps state
            name: manualStepsPending
          - value: offlineScanPending
            description: Computer is in pending offline scan state
            name: offlineScanPending
          - value: critical
            description: Computer is in critical failure state
            name: critical
    microsoft.graph.windowsDefenderProductStatus:
      title: windowsDefenderProductStatus
      enum:
        - noStatus
        - serviceNotRunning
        - serviceStartedWithoutMalwareProtection
        - pendingFullScanDueToThreatAction
        - pendingRebootDueToThreatAction
        - pendingManualStepsDueToThreatAction
        - avSignaturesOutOfDate
        - asSignaturesOutOfDate
        - noQuickScanHappenedForSpecifiedPeriod
        - noFullScanHappenedForSpecifiedPeriod
        - systemInitiatedScanInProgress
        - systemInitiatedCleanInProgress
        - samplesPendingSubmission
        - productRunningInEvaluationMode
        - productRunningInNonGenuineMode
        - productExpired
        - offlineScanRequired
        - serviceShutdownAsPartOfSystemShutdown
        - threatRemediationFailedCritically
        - threatRemediationFailedNonCritically
        - noStatusFlagsSet
        - platformOutOfDate
        - platformUpdateInProgress
        - platformAboutToBeOutdated
        - signatureOrPlatformEndOfLifeIsPastOrIsImpending
        - windowsSModeSignaturesInUseOnNonWin10SInstall
      type: string
      description: Product Status of Windows Defender
      x-ms-enum:
        name: windowsDefenderProductStatus
        modelAsString: false
        values:
          - value: noStatus
            description: No status
            name: noStatus
          - value: serviceNotRunning
            description: Service not running
            name: serviceNotRunning
          - value: serviceStartedWithoutMalwareProtection
            description: Service started without any malware protection engine
            name: serviceStartedWithoutMalwareProtection
          - value: pendingFullScanDueToThreatAction
            description: Pending full scan due to threat action
            name: pendingFullScanDueToThreatAction
          - value: pendingRebootDueToThreatAction
            description: Pending reboot due to threat action
            name: pendingRebootDueToThreatAction
          - value: pendingManualStepsDueToThreatAction
            description: 'Pending manual steps due to threat action '
            name: pendingManualStepsDueToThreatAction
          - value: avSignaturesOutOfDate
            description: AV signatures out of date
            name: avSignaturesOutOfDate
          - value: asSignaturesOutOfDate
            description: AS signatures out of date
            name: asSignaturesOutOfDate
          - value: noQuickScanHappenedForSpecifiedPeriod
            description: No quick scan has happened for a specified period
            name: noQuickScanHappenedForSpecifiedPeriod
          - value: noFullScanHappenedForSpecifiedPeriod
            description: No full scan has happened for a specified period
            name: noFullScanHappenedForSpecifiedPeriod
          - value: systemInitiatedScanInProgress
            description: System initiated scan in progress
            name: systemInitiatedScanInProgress
          - value: systemInitiatedCleanInProgress
            description: System initiated clean in progress
            name: systemInitiatedCleanInProgress
          - value: samplesPendingSubmission
            description: There are samples pending submission
            name: samplesPendingSubmission
          - value: productRunningInEvaluationMode
            description: Product running in evaluation mode
            name: productRunningInEvaluationMode
          - value: productRunningInNonGenuineMode
            description: Product running in non-genuine Windows mode
            name: productRunningInNonGenuineMode
          - value: productExpired
            description: Product expired
            name: productExpired
          - value: offlineScanRequired
            description: Off-line scan required
            name: offlineScanRequired
          - value: serviceShutdownAsPartOfSystemShutdown
            description: Service is shutting down as part of system shutdown
            name: serviceShutdownAsPartOfSystemShutdown
          - value: threatRemediationFailedCritically
            description: Threat remediation failed critically
            name: threatRemediationFailedCritically
          - value: threatRemediationFailedNonCritically
            description: Threat remediation failed non-critically
            name: threatRemediationFailedNonCritically
          - value: noStatusFlagsSet
            description: No status flags set (well initialized state)
            name: noStatusFlagsSet
          - value: platformOutOfDate
            description: Platform is out of date
            name: platformOutOfDate
          - value: platformUpdateInProgress
            description: Platform update is in progress
            name: platformUpdateInProgress
          - value: platformAboutToBeOutdated
            description: Platform is about to be outdated
            name: platformAboutToBeOutdated
          - value: signatureOrPlatformEndOfLifeIsPastOrIsImpending
            description: Signature or platform end of life is past or is impending
            name: signatureOrPlatformEndOfLifeIsPastOrIsImpending
          - value: windowsSModeSignaturesInUseOnNonWin10SInstall
            description: Windows SMode signatures still in use on non-Win10S install
            name: windowsSModeSignaturesInUseOnNonWin10SInstall
    microsoft.graph.windowsDeviceMalwareState:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: windowsDeviceMalwareState
          type: object
          properties:
            additionalInformationUrl:
              type: string
              description: Information URL to learn more about the malware
              nullable: true
            category:
              $ref: '#/components/schemas/microsoft.graph.windowsMalwareCategory'
            detectionCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Number of times the malware is detected
              format: int32
              nullable: true
            displayName:
              type: string
              description: Malware name
              nullable: true
            executionState:
              $ref: '#/components/schemas/microsoft.graph.windowsMalwareExecutionState'
            initialDetectionDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Initial detection datetime of the malware
              format: date-time
              nullable: true
            lastStateChangeDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The last time this particular threat was changed
              format: date-time
              nullable: true
            severity:
              $ref: '#/components/schemas/microsoft.graph.windowsMalwareSeverity'
            state:
              $ref: '#/components/schemas/microsoft.graph.windowsMalwareState'
            threatState:
              $ref: '#/components/schemas/microsoft.graph.windowsMalwareThreatState'
          additionalProperties:
            type: object
          description: Malware detection entity.
    microsoft.graph.deviceManagementTroubleshootingErrorResource:
      title: deviceManagementTroubleshootingErrorResource
      type: object
      properties:
        link:
          type: string
          description: 'The link to the web resource. Can contain any of the following formatters: {{UPN}}, {{DeviceGUID}}, {{UserGUID}}'
          nullable: true
        text:
          type: string
          description: Not yet documented
          nullable: true
      additionalProperties:
        type: object
      description: 'Object representing a link to troubleshooting information, the link could be to the Azure Portal or a Microsoft doc.'
    microsoft.graph.resultantAppState:
      title: resultantAppState
      enum:
        - notApplicable
        - installed
        - failed
        - notInstalled
        - uninstallFailed
        - pendingInstall
        - unknown
      type: string
      description: 'A list of possible states for application status on an individual device. When devices contact the Intune service and find targeted application enforcement intent, the status of the enforcement is recorded and becomes accessible in the Graph API. Since the application status is identified during device interaction with the Intune service, status records do not immediately appear upon application group assignment; it is created only after the assignment is evaluated in the service and devices start receiving the policy during check-ins.'
      x-ms-enum:
        name: resultantAppState
        modelAsString: false
        values:
          - value: notApplicable
            description: The application is not applicable.
            name: notApplicable
          - value: installed
            description: The application is installed with no errors.
            name: installed
          - value: failed
            description: The application failed to install.
            name: failed
          - value: notInstalled
            description: The application is not installed.
            name: notInstalled
          - value: uninstallFailed
            description: The application failed to uninstall.
            name: uninstallFailed
          - value: pendingInstall
            description: The installation of the application is in progress.
            name: pendingInstall
          - value: unknown
            description: The status of the application is unknown.
            name: unknown
    microsoft.graph.mobileAppIntent:
      title: mobileAppIntent
      enum:
        - available
        - notAvailable
        - requiredInstall
        - requiredUninstall
        - requiredAndAvailableInstall
        - availableInstallWithoutEnrollment
        - exclude
      type: string
      description: Indicates the status of the mobile app on the device.
      x-ms-enum:
        name: mobileAppIntent
        modelAsString: false
        values:
          - value: available
            description: Available
            name: available
          - value: notAvailable
            description: Not Available
            name: notAvailable
          - value: requiredInstall
            description: Required Install
            name: requiredInstall
          - value: requiredUninstall
            description: Required Uninstall
            name: requiredUninstall
          - value: requiredAndAvailableInstall
            description: RequiredAndAvailableInstall
            name: requiredAndAvailableInstall
          - value: availableInstallWithoutEnrollment
            description: AvailableInstallWithoutEnrollment
            name: availableInstallWithoutEnrollment
          - value: exclude
            description: Exclude
            name: exclude
    microsoft.graph.mobileAppSupportedDeviceType:
      title: mobileAppSupportedDeviceType
      type: object
      properties:
        maximumOperatingSystemVersion:
          type: string
          description: Maximum OS version
          nullable: true
        minimumOperatingSystemVersion:
          type: string
          description: Minimum OS version
          nullable: true
        type:
          $ref: '#/components/schemas/microsoft.graph.deviceType'
      additionalProperties:
        type: object
      description: Device properties
    microsoft.graph.appLogUploadState:
      title: appLogUploadState
      enum:
        - pending
        - completed
        - failed
      type: string
      description: AppLogUploadStatus
      x-ms-enum:
        name: appLogUploadState
        modelAsString: false
        values:
          - value: pending
            description: Request is waiting to be processed or under processing
            name: pending
          - value: completed
            description: Request is completed with file uploaded to Azure blob for download.
            name: completed
          - value: failed
            description: Request finished processing and in error state.
            name: failed
    microsoft.graph.visualProperties:
      title: visualProperties
      type: object
      properties:
        body:
          type: string
          description: The body of a visual user notification. Body is optional.
          nullable: true
        title:
          type: string
          description: The title of a visual user notification. This field is required for visual notification payloads.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.plannerPlanContainer:
      title: plannerPlanContainer
      type: object
      properties:
        containerId:
          type: string
          description: The identifier of the resource that contains the plan.
        type:
          $ref: '#/components/schemas/microsoft.graph.plannerContainerType'
        url:
          type: string
          description: The full canonical URL of the container.
      additionalProperties:
        type: object
    microsoft.graph.plannerPlanContextCollection:
      title: plannerPlanContextCollection
      type: object
      additionalProperties:
        type: object
    microsoft.graph.plannerBucket:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.plannerDelta'
        - title: plannerBucket
          type: object
          properties:
            name:
              type: string
              description: Name of the bucket.
            orderHint:
              type: string
              description: Hint used to order items of this type in a list view. The format is defined as outlined here.
              nullable: true
            planId:
              type: string
              description: Plan ID to which the bucket belongs.
              nullable: true
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.plannerTask'
              description: Read-only. Nullable. The collection of tasks in the bucket.
          additionalProperties:
            type: object
    microsoft.graph.plannerPlanDetails:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.plannerDelta'
        - title: plannerPlanDetails
          type: object
          properties:
            categoryDescriptions:
              $ref: '#/components/schemas/microsoft.graph.plannerCategoryDescriptions'
            contextDetails:
              $ref: '#/components/schemas/microsoft.graph.plannerPlanContextDetailsCollection'
            sharedWith:
              $ref: '#/components/schemas/microsoft.graph.plannerUserIds'
          additionalProperties:
            type: object
    microsoft.graph.plannerAppliedCategories:
      title: plannerAppliedCategories
      type: object
      additionalProperties:
        type: object
    microsoft.graph.plannerAssignments:
      title: plannerAssignments
      type: object
      additionalProperties:
        type: object
    microsoft.graph.plannerTaskCreation:
      title: plannerTaskCreation
      type: object
      properties:
        teamsPublicationInfo:
          $ref: '#/components/schemas/microsoft.graph.plannerTeamsPublicationInfo'
      additionalProperties:
        type: object
    microsoft.graph.plannerPreviewType:
      title: plannerPreviewType
      enum:
        - automatic
        - noPreview
        - checklist
        - description
        - reference
      type: string
    microsoft.graph.plannerAssignedToTaskBoardTaskFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.plannerDelta'
        - title: plannerAssignedToTaskBoardTaskFormat
          type: object
          properties:
            orderHintsByAssignee:
              $ref: '#/components/schemas/microsoft.graph.plannerOrderHintsByAssignee'
            unassignedOrderHint:
              type: string
              description: 'Hint value used to order the task on the AssignedTo view of the Task Board when the task is not assigned to anyone, or if the orderHintsByAssignee dictionary does not provide an order hint for the user the task is assigned to. The format is defined as outlined here.'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.plannerBucketTaskBoardTaskFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.plannerDelta'
        - title: plannerBucketTaskBoardTaskFormat
          type: object
          properties:
            orderHint:
              type: string
              description: Hint used to order tasks in the Bucket view of the Task Board. The format is defined as outlined here.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.plannerTaskDetails:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.plannerDelta'
        - title: plannerTaskDetails
          type: object
          properties:
            checklist:
              $ref: '#/components/schemas/microsoft.graph.plannerChecklistItems'
            description:
              type: string
              description: Description of the task.
              nullable: true
            previewType:
              $ref: '#/components/schemas/microsoft.graph.plannerPreviewType'
            references:
              $ref: '#/components/schemas/microsoft.graph.plannerExternalReferences'
          additionalProperties:
            type: object
    microsoft.graph.plannerProgressTaskBoardTaskFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.plannerDelta'
        - title: plannerProgressTaskBoardTaskFormat
          type: object
          properties:
            orderHint:
              type: string
              description: Hint value used to order the task on the Progress view of the Task Board. The format is defined as outlined here.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.sharedInsight:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: sharedInsight
          type: object
          properties:
            lastShared:
              $ref: '#/components/schemas/microsoft.graph.sharingDetail'
            resourceReference:
              $ref: '#/components/schemas/microsoft.graph.resourceReference'
            resourceVisualization:
              $ref: '#/components/schemas/microsoft.graph.resourceVisualization'
            sharingHistory:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sharingDetail'
            lastSharedMethod:
              $ref: '#/components/schemas/microsoft.graph.entity'
            resource:
              $ref: '#/components/schemas/microsoft.graph.entity'
          additionalProperties:
            type: object
    microsoft.graph.trending:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: trending
          type: object
          properties:
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            resourceReference:
              $ref: '#/components/schemas/microsoft.graph.resourceReference'
            resourceVisualization:
              $ref: '#/components/schemas/microsoft.graph.resourceVisualization'
            weight:
              type: number
              description: 'Value indicating how much the document is currently trending. The larger the number, the more the document is currently trending around the user (the more relevant it is). Returned documents are sorted by this value.'
              format: double
            resource:
              $ref: '#/components/schemas/microsoft.graph.entity'
          additionalProperties:
            type: object
    microsoft.graph.usedInsight:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: usedInsight
          type: object
          properties:
            lastUsed:
              $ref: '#/components/schemas/microsoft.graph.usageDetails'
            resourceReference:
              $ref: '#/components/schemas/microsoft.graph.resourceReference'
            resourceVisualization:
              $ref: '#/components/schemas/microsoft.graph.resourceVisualization'
            resource:
              $ref: '#/components/schemas/microsoft.graph.entity'
          additionalProperties:
            type: object
    microsoft.graph.regionalFormatOverrides:
      title: regionalFormatOverrides
      type: object
      properties:
        calendar:
          type: string
          description: 'The calendar to use, e.g., Gregorian Calendar.Returned by default.'
          nullable: true
        firstDayOfWeek:
          type: string
          description: 'The first day of the week to use, e.g., Sunday.Returned by default.'
          nullable: true
        longDateFormat:
          type: string
          description: The long date time format to be used for displaying dates.Returned by default.
          nullable: true
        longTimeFormat:
          type: string
          description: The long time format to be used for displaying time.Returned by default.
          nullable: true
        shortDateFormat:
          type: string
          description: The short date time format to be used for displaying dates.Returned by default.
          nullable: true
        shortTimeFormat:
          type: string
          description: The short time format to be used for displaying time.Returned by default.
          nullable: true
        timeZone:
          type: string
          description: The timezone to be used for displaying time.Returned by default.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.translationPreferences:
      title: translationPreferences
      type: object
      properties:
        languageOverrides:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.translationLanguageOverride'
          description: 'Translation override behavior for languages, if any.Returned by default.'
        translationBehavior:
          $ref: '#/components/schemas/microsoft.graph.translationBehavior'
        untranslatedLanguages:
          type: array
          items:
            type: string
            nullable: true
          description: 'The list of languages the user does not need translated. This is computed from the authoringLanguages collection in regionalAndLanguageSettings, and the languageOverrides collection in translationPreferences. The list specifies neutral culture values that include the language code without any country or region association. For example, it would specify ''fr'' for the neutral French culture, but not ''fr-FR'' for the French culture in France. Returned by default. Read only.'
      additionalProperties:
        type: object
    microsoft.graph.changeTrackedEntity:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: changeTrackedEntity
          type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            lastModifiedBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.shiftAvailability:
      title: shiftAvailability
      type: object
      properties:
        recurrence:
          $ref: '#/components/schemas/microsoft.graph.patternedRecurrence'
        timeSlots:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.timeRange'
          description: The time slot(s) preferred by the user.
        timeZone:
          type: string
          description: Specifies the time zone for the indicated time.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.itemFacet:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: itemFacet
          type: object
          properties:
            allowedAudiences:
              $ref: '#/components/schemas/microsoft.graph.allowedAudiences'
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Provides the dateTimeOffset for when the entity was created.
              format: date-time
            inference:
              $ref: '#/components/schemas/microsoft.graph.inferenceData'
            isSearchable:
              type: boolean
              nullable: true
            lastModifiedBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Provides the dateTimeOffset for when the entity was created.
              format: date-time
            source:
              $ref: '#/components/schemas/microsoft.graph.personDataSources'
          additionalProperties:
            type: object
    microsoft.graph.personAnnualEventType:
      title: personAnnualEventType
      enum:
        - birthday
        - wedding
        - work
        - other
        - unknownFutureValue
      type: string
    microsoft.graph.institutionData:
      title: institutionData
      type: object
      properties:
        description:
          type: string
          description: Short description of the institution the user studied at.
          nullable: true
        displayName:
          type: string
          description: Name of the institution the user studied at.
        location:
          $ref: '#/components/schemas/microsoft.graph.physicalAddress'
        webUrl:
          type: string
          description: Link to the institution or department homepage.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.educationalActivityDetail:
      title: educationalActivityDetail
      type: object
      properties:
        abbreviation:
          type: string
          description: 'Shortened name of the degree or program (example: PhD, MBA)'
          nullable: true
        activities:
          type: array
          items:
            type: string
            nullable: true
          description: Extracurricular activities undertaken alongside the program.
        awards:
          type: array
          items:
            type: string
            nullable: true
          description: Any awards or honors associated with the program.
        description:
          type: string
          description: Short description of the program provided by the user.
          nullable: true
        displayName:
          type: string
          description: Long-form name of the program that the user has provided.
        fieldsOfStudy:
          type: array
          items:
            type: string
            nullable: true
          description: Majors and minors associated with the program. (if applicable)
        grade:
          type: string
          description: 'The final grade, class, GPA or score.'
          nullable: true
        notes:
          type: string
          description: Additional notes the user has provided.
          nullable: true
        webUrl:
          type: string
          description: Link to the degree or program page.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.languageProficiencyLevel:
      title: languageProficiencyLevel
      enum:
        - elementary
        - conversational
        - limitedWorking
        - professionalWorking
        - fullProfessional
        - nativeOrBilingual
        - unknownFutureValue
      type: string
    microsoft.graph.personNamePronounciation:
      title: personNamePronounciation
      type: object
      properties:
        displayName:
          type: string
          nullable: true
        first:
          type: string
          nullable: true
        last:
          type: string
          nullable: true
        maiden:
          type: string
          nullable: true
        middle:
          type: string
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.relatedPerson:
      title: relatedPerson
      type: object
      properties:
        displayName:
          type: string
          description: Name of the person.
          nullable: true
        relationship:
          $ref: '#/components/schemas/microsoft.graph.personRelationship'
        userPrincipalName:
          type: string
          description: Email address or reference to person within organization.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.positionDetail:
      title: positionDetail
      type: object
      properties:
        company:
          $ref: '#/components/schemas/microsoft.graph.companyDetail'
        description:
          type: string
          description: Description of the position in question.
          nullable: true
        endMonthYear:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
          type: string
          description: When the position ended.
          format: date
          nullable: true
        jobTitle:
          type: string
          description: The title held when in that position.
          nullable: true
        role:
          type: string
          description: The role the position entailed.
          nullable: true
        startMonthYear:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
          type: string
          description: The start month and year of the position.
          format: date
          nullable: true
        summary:
          type: string
          description: Short summary of the position.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.companyDetail:
      title: companyDetail
      type: object
      properties:
        address:
          $ref: '#/components/schemas/microsoft.graph.physicalAddress'
        department:
          type: string
          description: Department Name within a company.
          nullable: true
        displayName:
          type: string
          description: Company name.
        officeLocation:
          type: string
          description: Office Location of the person referred to.
          nullable: true
        pronunciation:
          type: string
          description: Pronunciation guide for the company name.
          nullable: true
        webUrl:
          type: string
          description: Link to the company home page.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.skillProficiencyLevel:
      title: skillProficiencyLevel
      enum:
        - elementary
        - limitedWorking
        - generalProfessional
        - advancedProfessional
        - expert
        - unknownFutureValue
      type: string
    microsoft.graph.serviceInformation:
      title: serviceInformation
      type: object
      properties:
        name:
          type: string
          description: 'The name of the cloud service (for example, Twitter, Instagram).'
        webUrl:
          type: string
          description: Contains the URL for the service being referenced.
      additionalProperties:
        type: object
    microsoft.graph.imageInfo:
      title: imageInfo
      type: object
      properties:
        addImageQuery:
          type: boolean
          description: Optional; parameter used to indicate the server is able to render image dynamically in response to parameterization. For example – a high contrast image
          nullable: true
        alternateText:
          type: string
          description: Optional; alt-text accessible content for the image
          nullable: true
        alternativeText:
          type: string
          nullable: true
        iconUrl:
          type: string
          description: Optional; URI that points to an icon which represents the application used to generate the activity
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.payloadRequest:
      title: payloadRequest
      type: object
      additionalProperties:
        type: object
    microsoft.graph.payloadResponse:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: payloadResponse
          type: object
          additionalProperties:
            type: object
    microsoft.graph.broadcastMeetingAudience:
      title: broadcastMeetingAudience
      enum:
        - roleIsAttendee
        - organization
        - everyone
        - unknownFutureValue
      type: string
    microsoft.graph.broadcastMeetingCaptionSettings:
      title: broadcastMeetingCaptionSettings
      type: object
      properties:
        isCaptionEnabled:
          type: boolean
          description: Indicates whether caption is enabled for this Teams live event.
          nullable: true
        spokenLanguage:
          type: string
          description: The spoken language.
          nullable: true
        translationLanguages:
          type: array
          items:
            type: string
            nullable: true
          description: The translation languages (choose up to 6).
      additionalProperties:
        type: object
    microsoft.graph.lobbyBypassScope:
      title: lobbyBypassScope
      enum:
        - organizer
        - organization
        - organizationAndFederated
        - everyone
        - unknownFutureValue
        - invited
        - organizationExcludingGuests
      type: string
    microsoft.graph.meetingParticipantInfo:
      title: meetingParticipantInfo
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/microsoft.graph.identitySet'
        role:
          $ref: '#/components/schemas/microsoft.graph.onlineMeetingRole'
        upn:
          type: string
          description: User principal name of the participant.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.attendanceRecord:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: attendanceRecord
          type: object
          properties:
            attendanceIntervals:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.attendanceInterval'
              description: List of time periods between joining and leaving a meeting.
            emailAddress:
              type: string
              description: Email address of the user associated with this atttendance record.
              nullable: true
            identity:
              $ref: '#/components/schemas/microsoft.graph.identity'
            registrantId:
              type: string
              description: Unique identifier of a meetingRegistrant. Presents when the participant has registered for the meeting.
              nullable: true
            role:
              type: string
              description: 'Role of the attendee. Possible values are: None, Attendee, Presenter, and Organizer.'
              nullable: true
            totalAttendanceInSeconds:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Total duration of the attendances in seconds.
              format: int32
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.meetingRegistrationBase:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: meetingRegistrationBase
          type: object
          properties:
            allowedRegistrant:
              $ref: '#/components/schemas/microsoft.graph.meetingAudience'
            registrants:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.meetingRegistrantBase'
              description: Registrants of the online meeting.
          additionalProperties:
            type: object
    microsoft.graph.meetingSpeaker:
      title: meetingSpeaker
      type: object
      properties:
        bio:
          type: string
          description: Bio of the speaker.
          nullable: true
        displayName:
          type: string
          description: Display name of the speaker.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.meetingRegistrationQuestion:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: meetingRegistrationQuestion
          type: object
          properties:
            answerInputType:
              $ref: '#/components/schemas/microsoft.graph.answerInputType'
            answerOptions:
              type: array
              items:
                type: string
                nullable: true
              description: Answer options when answerInputType is radioButton.
            displayName:
              type: string
              description: Display name of the custom registration question.
              nullable: true
            isRequired:
              type: boolean
              description: Indicates whether the question is required. Default value is false.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.attestationLevel:
      title: attestationLevel
      enum:
        - attested
        - notAttested
        - unknownFutureValue
      type: string
    microsoft.graph.authenticationPhoneType:
      title: authenticationPhoneType
      enum:
        - mobile
        - alternateMobile
        - office
        - unknownFutureValue
      type: string
    microsoft.graph.authenticationMethodSignInState:
      title: authenticationMethodSignInState
      enum:
        - notSupported
        - notAllowedByPolicy
        - notEnabled
        - phoneNumberNotUnique
        - ready
        - notConfigured
        - unknownFutureValue
      type: string
    microsoft.graph.authenticationMethodKeyStrength:
      title: authenticationMethodKeyStrength
      enum:
        - normal
        - weak
        - unknown
      type: string
    microsoft.graph.taskStatus_v2:
      title: taskStatus_v2
      enum:
        - notStarted
        - inProgress
        - completed
        - unknownFutureValue
      type: string
    microsoft.graph.taskViewpoint:
      title: taskViewpoint
      type: object
      properties:
        categories:
          type: array
          items:
            type: string
            nullable: true
          description: The categories associated with the task. Each category corresponds to the displayName property of an outlookCategory that the user has defined.
        reminderDateTime:
          $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
      additionalProperties:
        type: object
    microsoft.graph.checklistItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: checklistItem
          type: object
          properties:
            checkedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date and time when the checklistItem was finished.
              format: date-time
              nullable: true
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The date and time when the checklistItem was created.
              format: date-time
            displayName:
              type: string
              description: Field indicating the title of checklistItem.
              nullable: true
            isChecked:
              type: boolean
              description: State indicating whether the item is checked off or not.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.linkedResource_v2:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: linkedResource_v2
          type: object
          properties:
            applicationName:
              type: string
              description: Field indicating the app name of the source that is sending the linkedResource.
              nullable: true
            displayName:
              type: string
              description: Field indicating the title of the linkedResource.
              nullable: true
            externalId:
              type: string
              description: Id of the object that is associated with this task on the third-party/partner system.
              nullable: true
            webUrl:
              type: string
              description: Deep link to the linkedResource.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.teamworkUserIdentity:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.identity'
        - title: teamworkUserIdentity
          type: object
          properties:
            userIdentityType:
              $ref: '#/components/schemas/microsoft.graph.teamworkUserIdentityType'
          additionalProperties:
            type: object
    microsoft.graph.teamsApp:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: teamsApp
          type: object
          properties:
            displayName:
              type: string
              description: The name of the catalog app provided by the app developer in the Microsoft Teams zip app package.
              nullable: true
            distributionMethod:
              $ref: '#/components/schemas/microsoft.graph.teamsAppDistributionMethod'
            externalId:
              type: string
              description: The ID of the catalog provided by the app developer in the Microsoft Teams zip app package.
              nullable: true
            appDefinitions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.teamsAppDefinition'
              description: The details for each version of the app.
          additionalProperties:
            type: object
    microsoft.graph.teamsAppDefinition:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: teamsAppDefinition
          type: object
          properties:
            allowedInstallationScopes:
              $ref: '#/components/schemas/microsoft.graph.teamsAppInstallationScopes'
            azureADAppId:
              type: string
              description: The WebApplicationInfo.Id from the Teams app manifest.
              nullable: true
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            description:
              type: string
              description: Verbose description of the application.
              nullable: true
            displayName:
              type: string
              description: The name of the app provided by the app developer.
              nullable: true
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            publishingState:
              $ref: '#/components/schemas/microsoft.graph.teamsAppPublishingState'
            shortdescription:
              type: string
              nullable: true
            teamsAppId:
              type: string
              description: The ID from the Teams app manifest.
              nullable: true
            version:
              type: string
              description: The version number of the application.
              nullable: true
            bot:
              $ref: '#/components/schemas/microsoft.graph.teamworkBot'
            colorIcon:
              $ref: '#/components/schemas/microsoft.graph.teamsAppIcon'
            outlineIcon:
              $ref: '#/components/schemas/microsoft.graph.teamsAppIcon'
          additionalProperties:
            type: object
    microsoft.graph.eventMessageDetail:
      title: eventMessageDetail
      type: object
      additionalProperties:
        type: object
    microsoft.graph.chatMessageFromIdentitySet:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.identitySet'
        - title: chatMessageFromIdentitySet
          type: object
          additionalProperties:
            type: object
    microsoft.graph.chatMessageType:
      title: chatMessageType
      enum:
        - message
        - chatEvent
        - typing
        - unknownFutureValue
        - systemEventMessage
      type: string
    microsoft.graph.chatMessageAttachment:
      title: chatMessageAttachment
      type: object
      properties:
        content:
          type: string
          description: 'The content of the attachment. If the attachment is a rich card, set the property to the rich card object. This property and contentUrl are mutually exclusive.'
          nullable: true
        contentType:
          type: string
          description: 'The media type of the content attachment. It can have the following values: reference: Attachment is a link to another file. Populate the contentURL with the link to the object.Any contentTypes supported by the Bot Framework''s Attachment objectapplication/vnd.microsoft.card.codesnippet: A code snippet. application/vnd.microsoft.card.announcement: An announcement header.'
          nullable: true
        contentUrl:
          type: string
          description: 'URL for the content of the attachment. Supported protocols: http, https, file and data.'
          nullable: true
        id:
          type: string
          description: Read-only. Unique id of the attachment.
          nullable: true
        name:
          type: string
          description: Name of the attachment.
          nullable: true
        teamsAppId:
          type: string
          description: The ID of the Teams app that is associated with the attachment. The property is specifically used to attribute a Teams message card to the specified app.
          nullable: true
        thumbnailUrl:
          type: string
          description: 'URL to a thumbnail image that the channel can use if it supports using an alternative, smaller form of content or contentUrl. For example, if you set contentType to application/word and set contentUrl to the location of the Word document, you might include a thumbnail image that represents the document. The channel could display the thumbnail image instead of the document. When the user clicks the image, the channel would open the document.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.channelIdentity:
      title: channelIdentity
      type: object
      properties:
        channelId:
          type: string
          description: The identity of the channel in which the message was posted.
          nullable: true
        teamId:
          type: string
          description: The identity of the team in which the message was posted.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.chatMessageImportance:
      title: chatMessageImportance
      enum:
        - normal
        - high
        - urgent
      type: string
    microsoft.graph.chatMessageMention:
      title: chatMessageMention
      type: object
      properties:
        id:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'Index of an entity being mentioned in the specified chatMessage. Matches the {index} value in the corresponding <at id=''{index}''> tag in the message body.'
          format: int32
          nullable: true
        mentioned:
          $ref: '#/components/schemas/microsoft.graph.chatMessageMentionedIdentitySet'
        mentionText:
          type: string
          description: 'String used to represent the mention. For example, a user''s display name, a team name.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.chatMessagePolicyViolation:
      title: chatMessagePolicyViolation
      type: object
      properties:
        dlpAction:
          $ref: '#/components/schemas/microsoft.graph.chatMessagePolicyViolationDlpActionTypes'
        justificationText:
          type: string
          description: Justification text provided by the sender of the message when overriding a policy violation.
          nullable: true
        policyTip:
          $ref: '#/components/schemas/microsoft.graph.chatMessagePolicyViolationPolicyTip'
        userAction:
          $ref: '#/components/schemas/microsoft.graph.chatMessagePolicyViolationUserActionTypes'
        verdictDetails:
          $ref: '#/components/schemas/microsoft.graph.chatMessagePolicyViolationVerdictDetailsTypes'
      additionalProperties:
        type: object
    microsoft.graph.chatMessageReaction:
      title: chatMessageReaction
      type: object
      properties:
        createdDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
          format: date-time
        reactionType:
          type: string
          description: 'Supported values are like, angry, sad, laugh, heart, surprised.'
        user:
          $ref: '#/components/schemas/microsoft.graph.chatMessageReactionIdentitySet'
      additionalProperties:
        type: object
    microsoft.graph.chatMessageHostedContent:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.teamworkHostedContent'
        - title: chatMessageHostedContent
          type: object
          additionalProperties:
            type: object
    microsoft.graph.operationError:
      title: operationError
      type: object
      properties:
        code:
          type: string
          description: Operation error code.
          nullable: true
        message:
          type: string
          description: Operation error message.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.teamsAsyncOperationType:
      title: teamsAsyncOperationType
      enum:
        - invalid
        - cloneTeam
        - archiveTeam
        - unarchiveTeam
        - createTeam
        - unknownFutureValue
        - teamifyGroup
        - createChannel
        - createChat
      type: string
    microsoft.graph.teamsAsyncOperationStatus:
      title: teamsAsyncOperationStatus
      enum:
        - invalid
        - notStarted
        - inProgress
        - succeeded
        - failed
        - unknownFutureValue
      type: string
    microsoft.graph.teamsTabConfiguration:
      title: teamsTabConfiguration
      type: object
      properties:
        contentUrl:
          type: string
          description: Url used for rendering tab contents in Teams. Required.
          nullable: true
        entityId:
          type: string
          description: Identifier for the entity hosted by the tab provider.
          nullable: true
        removeUrl:
          type: string
          description: Url called by Teams client when a Tab is removed using the Teams Client.
          nullable: true
        websiteUrl:
          type: string
          description: Url for showing tab contents outside of Teams.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.giphyRatingType:
      title: giphyRatingType
      enum:
        - strict
        - moderate
        - unknownFutureValue
      type: string
    microsoft.graph.channelMembershipType:
      title: channelMembershipType
      enum:
        - standard
        - private
        - unknownFutureValue
        - shared
      type: string
    microsoft.graph.channelModerationSettings:
      title: channelModerationSettings
      type: object
      properties:
        allowNewMessageFromBots:
          type: boolean
          description: Indicates whether bots are allowed to post messages.
          nullable: true
        allowNewMessageFromConnectors:
          type: boolean
          description: Indicates whether connectors are allowed to post messages.
          nullable: true
        replyRestriction:
          $ref: '#/components/schemas/microsoft.graph.replyRestriction'
        userNewMessageRestriction:
          $ref: '#/components/schemas/microsoft.graph.userNewMessageRestriction'
      additionalProperties:
        type: object
    microsoft.graph.sharedWithChannelTeamInfo:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.teamInfo'
        - title: sharedWithChannelTeamInfo
          type: object
          properties:
            isHostTeam:
              type: boolean
              description: Indicates whether the team is the host of the channel.
              nullable: true
            allowedMembers:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.conversationMember'
              description: A collection of team members who have access to the shared channel.
          additionalProperties:
            type: object
    microsoft.graph.teamworkTagType:
      title: teamworkTagType
      enum:
        - standard
      type: string
    microsoft.graph.teamworkTagMember:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: teamworkTagMember
          type: object
          properties:
            displayName:
              type: string
              description: The member's display name.
              nullable: true
            tenantId:
              type: string
              nullable: true
            userId:
              type: string
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.timeClockSettings:
      title: timeClockSettings
      type: object
      properties:
        approvedLocation:
          $ref: '#/components/schemas/microsoft.graph.geoCoordinates'
      additionalProperties:
        type: object
    microsoft.graph.offerShiftRequest:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.scheduleChangeRequest'
        - title: offerShiftRequest
          type: object
          properties:
            recipientActionDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            recipientActionMessage:
              type: string
              description: Custom message sent by recipient of the offer shift request.
              nullable: true
            recipientUserId:
              type: string
              description: User id of the recipient of the offer shift request.
              nullable: true
            senderShiftId:
              type: string
              description: User id of the sender of the offer shift request.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.openShiftChangeRequest:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.scheduleChangeRequest'
        - title: openShiftChangeRequest
          type: object
          properties:
            openShiftId:
              type: string
              description: ID for the open shift.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.openShift:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.changeTrackedEntity'
        - title: openShift
          type: object
          properties:
            draftOpenShift:
              $ref: '#/components/schemas/microsoft.graph.openShiftItem'
            isStagedForDeletion:
              type: boolean
              nullable: true
            schedulingGroupId:
              type: string
              description: ID for the scheduling group that the open shift belongs to.
              nullable: true
            sharedOpenShift:
              $ref: '#/components/schemas/microsoft.graph.openShiftItem'
          additionalProperties:
            type: object
    microsoft.graph.schedulingGroup:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.changeTrackedEntity'
        - title: schedulingGroup
          type: object
          properties:
            displayName:
              type: string
              description: The display name for the schedulingGroup. Required.
              nullable: true
            isActive:
              type: boolean
              description: Indicates whether the schedulingGroup can be used when creating new entities or updating existing ones. Required.
              nullable: true
            userIds:
              type: array
              items:
                type: string
                nullable: true
              description: The list of user IDs that are a member of the schedulingGroup. Required.
          additionalProperties:
            type: object
    microsoft.graph.shift:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.changeTrackedEntity'
        - title: shift
          type: object
          properties:
            draftShift:
              $ref: '#/components/schemas/microsoft.graph.shiftItem'
            isStagedForDeletion:
              type: boolean
              nullable: true
            schedulingGroupId:
              type: string
              description: ID of the scheduling group the shift is part of. Required.
              nullable: true
            sharedShift:
              $ref: '#/components/schemas/microsoft.graph.shiftItem'
            userId:
              type: string
              description: ID of the user assigned to the shift. Required.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.swapShiftsChangeRequest:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.offerShiftRequest'
        - title: swapShiftsChangeRequest
          type: object
          properties:
            recipientShiftId:
              type: string
              description: Shift ID for the recipient user with whom the request is to swap.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.timeCard:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.changeTrackedEntity'
        - title: timeCard
          type: object
          properties:
            breaks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.timeCardBreak'
              description: The list of breaks associated with the timeCard.
            clockInEvent:
              $ref: '#/components/schemas/microsoft.graph.timeCardEvent'
            clockOutEvent:
              $ref: '#/components/schemas/microsoft.graph.timeCardEvent'
            confirmedBy:
              $ref: '#/components/schemas/microsoft.graph.confirmedBy'
            notes:
              $ref: '#/components/schemas/microsoft.graph.itemBody'
            originalEntry:
              $ref: '#/components/schemas/microsoft.graph.timeCardEntry'
            state:
              $ref: '#/components/schemas/microsoft.graph.timeCardState'
            userId:
              type: string
              description: User ID to which  the timeCard belongs.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.timeOffReason:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.changeTrackedEntity'
        - title: timeOffReason
          type: object
          properties:
            displayName:
              type: string
              description: The name of the timeOffReason. Required.
              nullable: true
            iconType:
              $ref: '#/components/schemas/microsoft.graph.timeOffReasonIconType'
            isActive:
              type: boolean
              description: Indicates whether the timeOffReason can be used when creating new entities or updating existing ones. Required.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.timeOffRequest:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.scheduleChangeRequest'
        - title: timeOffRequest
          type: object
          properties:
            endDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            startDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z'
              format: date-time
              nullable: true
            timeOffReasonId:
              type: string
              description: The reason for the time off.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.timeOff:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.changeTrackedEntity'
        - title: timeOff
          type: object
          properties:
            draftTimeOff:
              $ref: '#/components/schemas/microsoft.graph.timeOffItem'
            isStagedForDeletion:
              type: boolean
              nullable: true
            sharedTimeOff:
              $ref: '#/components/schemas/microsoft.graph.timeOffItem'
            userId:
              type: string
              description: ID of the user assigned to the timeOff. Required.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.teamInfo:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: teamInfo
          type: object
          properties:
            displayName:
              type: string
              description: The name of the team.
              nullable: true
            tenantId:
              type: string
              description: The ID of the Azure Active Directory tenant.
              nullable: true
            team:
              $ref: '#/components/schemas/microsoft.graph.team'
          additionalProperties:
            type: object
    microsoft.graph.wellknownListName:
      title: wellknownListName
      enum:
        - none
        - defaultList
        - flaggedEmails
        - unknownFutureValue
      type: string
    microsoft.graph.todoTask:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: todoTask
          type: object
          properties:
            body:
              $ref: '#/components/schemas/microsoft.graph.itemBody'
            bodyLastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: ''2020-01-01T00:00:00Z''.'
              format: date-time
            categories:
              type: array
              items:
                type: string
                nullable: true
              description: The categories associated with the task. Each category corresponds to the displayName property of an outlookCategory that the user has defined.
            completedDateTime:
              $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the task was created. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format. For example, midnight UTC on Jan 1, 2020 would look like this: ''2020-01-01T00:00:00Z''.'
              format: date-time
            dueDateTime:
              $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
            hasAttachments:
              type: boolean
              nullable: true
            importance:
              $ref: '#/components/schemas/microsoft.graph.importance'
            isReminderOn:
              type: boolean
              description: Set to true if an alert is set to remind the user of the task.
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: ''2020-01-01T00:00:00Z''.'
              format: date-time
            recurrence:
              $ref: '#/components/schemas/microsoft.graph.patternedRecurrence'
            reminderDateTime:
              $ref: '#/components/schemas/microsoft.graph.dateTimeTimeZone'
            status:
              $ref: '#/components/schemas/microsoft.graph.taskStatus'
            title:
              type: string
              description: A brief description of the task.
              nullable: true
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.attachment_v2'
            attachmentSessions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.attachmentSession'
            checklistItems:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.checklistItem'
              description: A collection of smaller subtasks linked to the more complex parent task.
            extensions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.extension'
              description: The collection of open extensions defined for the task. Nullable.
            linkedResources:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.linkedResource'
              description: A collection of resources linked to the task.
          additionalProperties:
            type: object
    microsoft.graph.workbookFilter:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookFilter
          type: object
          properties:
            criteria:
              $ref: '#/components/schemas/microsoft.graph.workbookFilterCriteria'
          additionalProperties:
            type: object
    microsoft.graph.workbookSortField:
      title: workbookSortField
      type: object
      properties:
        ascending:
          type: boolean
          description: Represents whether the sorting is done in an ascending fashion.
        color:
          type: string
          description: Represents the color that is the target of the condition if the sorting is on font or cell color.
          nullable: true
        dataOption:
          type: string
          description: 'Represents additional sorting options for this field. Possible values are: Normal, TextAsNumber.'
        icon:
          $ref: '#/components/schemas/microsoft.graph.workbookIcon'
        key:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'Represents the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).'
          format: int32
        sortOn:
          type: string
          description: 'Represents the type of sorting of this condition. Possible values are: Value, CellColor, FontColor, Icon.'
      additionalProperties:
        type: object
    microsoft.graph.workbookChartAxes:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartAxes
          type: object
          properties:
            categoryAxis:
              $ref: '#/components/schemas/microsoft.graph.workbookChartAxis'
            seriesAxis:
              $ref: '#/components/schemas/microsoft.graph.workbookChartAxis'
            valueAxis:
              $ref: '#/components/schemas/microsoft.graph.workbookChartAxis'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartDataLabels:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartDataLabels
          type: object
          properties:
            position:
              type: string
              description: 'DataLabelPosition value that represents the position of the data label. The possible values are: None, Center, InsideEnd, InsideBase, OutsideEnd, Left, Right, Top, Bottom, BestFit, Callout.'
              nullable: true
            separator:
              type: string
              description: String representing the separator used for the data labels on a chart.
              nullable: true
            showBubbleSize:
              type: boolean
              description: Boolean value representing if the data label bubble size is visible or not.
              nullable: true
            showCategoryName:
              type: boolean
              description: Boolean value representing if the data label category name is visible or not.
              nullable: true
            showLegendKey:
              type: boolean
              description: Boolean value representing if the data label legend key is visible or not.
              nullable: true
            showPercentage:
              type: boolean
              description: Boolean value representing if the data label percentage is visible or not.
              nullable: true
            showSeriesName:
              type: boolean
              description: Boolean value representing if the data label series name is visible or not.
              nullable: true
            showValue:
              type: boolean
              description: Boolean value representing if the data label value is visible or not.
              nullable: true
            format:
              $ref: '#/components/schemas/microsoft.graph.workbookChartDataLabelFormat'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartAreaFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartAreaFormat
          type: object
          properties:
            fill:
              $ref: '#/components/schemas/microsoft.graph.workbookChartFill'
            font:
              $ref: '#/components/schemas/microsoft.graph.workbookChartFont'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartLegend:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartLegend
          type: object
          properties:
            overlay:
              type: boolean
              description: Boolean value for whether the chart legend should overlap with the main body of the chart.
              nullable: true
            position:
              type: string
              description: 'Represents the position of the legend on the chart. The possible values are: Top, Bottom, Left, Right, Corner, Custom.'
              nullable: true
            visible:
              type: boolean
              description: A boolean value the represents the visibility of a ChartLegend object.
            format:
              $ref: '#/components/schemas/microsoft.graph.workbookChartLegendFormat'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartSeries:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartSeries
          type: object
          properties:
            name:
              type: string
              description: Represents the name of a series in a chart.
              nullable: true
            format:
              $ref: '#/components/schemas/microsoft.graph.workbookChartSeriesFormat'
            points:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.workbookChartPoint'
              description: Represents a collection of all points in the series. Read-only.
          additionalProperties:
            type: object
    microsoft.graph.workbookChartTitle:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartTitle
          type: object
          properties:
            overlay:
              type: boolean
              description: Boolean value representing if the chart title will overlay the chart or not.
              nullable: true
            text:
              type: string
              description: Represents the title text of a chart.
              nullable: true
            visible:
              type: boolean
              description: A boolean value the represents the visibility of a chart title object.
            format:
              $ref: '#/components/schemas/microsoft.graph.workbookChartTitleFormat'
          additionalProperties:
            type: object
    microsoft.graph.workbookWorksheetProtectionOptions:
      title: workbookWorksheetProtectionOptions
      type: object
      properties:
        allowAutoFilter:
          type: boolean
          description: Represents the worksheet protection option of allowing using auto filter feature.
        allowDeleteColumns:
          type: boolean
          description: Represents the worksheet protection option of allowing deleting columns.
        allowDeleteRows:
          type: boolean
          description: Represents the worksheet protection option of allowing deleting rows.
        allowFormatCells:
          type: boolean
          description: Represents the worksheet protection option of allowing formatting cells.
        allowFormatColumns:
          type: boolean
          description: Represents the worksheet protection option of allowing formatting columns.
        allowFormatRows:
          type: boolean
          description: Represents the worksheet protection option of allowing formatting rows.
        allowInsertColumns:
          type: boolean
          description: Represents the worksheet protection option of allowing inserting columns.
        allowInsertHyperlinks:
          type: boolean
          description: Represents the worksheet protection option of allowing inserting hyperlinks.
        allowInsertRows:
          type: boolean
          description: Represents the worksheet protection option of allowing inserting rows.
        allowPivotTables:
          type: boolean
          description: Represents the worksheet protection option of allowing using pivot table feature.
        allowSort:
          type: boolean
          description: Represents the worksheet protection option of allowing using sort feature.
      additionalProperties:
        type: object
    microsoft.graph.printerCapabilities:
      title: printerCapabilities
      type: object
      properties:
        bottomMargins:
          type: array
          items:
            maximum: 2147483647
            minimum: -2147483648
            type: integer
            format: int32
            nullable: true
          description: A list of supported bottom margins(in microns) for the printer.
        collation:
          type: boolean
          description: True if the printer supports collating when printing muliple copies of a multi-page document; false otherwise.
          nullable: true
        colorModes:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printColorMode'
          description: The color modes supported by the printer. Valid values are described in the following table.
        contentTypes:
          type: array
          items:
            type: string
            nullable: true
          description: A list of supported content (MIME) types that the printer supports. It is not guaranteed that the Universal Print service supports printing all of these MIME types.
        copiesPerJob:
          $ref: '#/components/schemas/microsoft.graph.integerRange'
        dpis:
          type: array
          items:
            maximum: 2147483647
            minimum: -2147483648
            type: integer
            format: int32
            nullable: true
          description: The list of print resolutions in DPI that are supported by the printer.
        duplexModes:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printDuplexMode'
          description: The list of duplex modes that are supported by the printer. Valid values are described in the following table.
        feedDirections:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printerFeedDirection'
        feedOrientations:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printerFeedOrientation'
          description: The list of feed orientations that are supported by the printer.
        finishings:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printFinishing'
          description: Finishing processes the printer supports for a printed document.
        inputBins:
          type: array
          items:
            type: string
            nullable: true
          description: Supported input bins for the printer.
        isColorPrintingSupported:
          type: boolean
          description: True if color printing is supported by the printer; false otherwise. Read-only.
          nullable: true
        isPageRangeSupported:
          type: boolean
          description: True if the printer supports printing by page ranges; false otherwise.
          nullable: true
        leftMargins:
          type: array
          items:
            maximum: 2147483647
            minimum: -2147483648
            type: integer
            format: int32
            nullable: true
          description: A list of supported left margins(in microns) for the printer.
        mediaColors:
          type: array
          items:
            type: string
            nullable: true
          description: 'The media (i.e., paper) colors supported by the printer.'
        mediaSizes:
          type: array
          items:
            type: string
            nullable: true
          description: The media sizes supported by the printer. Supports standard size names for ISO and ANSI media sizes. Valid values are in the following table.
        mediaTypes:
          type: array
          items:
            type: string
            nullable: true
          description: The media types supported by the printer.
        multipageLayouts:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printMultipageLayout'
          description: The presentation directions supported by the printer. Supported values are described in the following table.
        orientations:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printOrientation'
          description: The print orientations supported by the printer. Valid values are described in the following table.
        outputBins:
          type: array
          items:
            type: string
            nullable: true
          description: The printer's supported output bins (trays).
        pagesPerSheet:
          type: array
          items:
            maximum: 2147483647
            minimum: -2147483648
            type: integer
            format: int32
            nullable: true
          description: Supported number of Input Pages to impose upon a single Impression.
        qualities:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printQuality'
          description: The print qualities supported by the printer.
        rightMargins:
          type: array
          items:
            maximum: 2147483647
            minimum: -2147483648
            type: integer
            format: int32
            nullable: true
          description: A list of supported right margins(in microns) for the printer.
        scalings:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printScaling'
          description: Supported print scalings.
        supportedColorConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printColorConfiguration'
        supportedCopiesPerJob:
          $ref: '#/components/schemas/microsoft.graph.integerRange'
        supportedDocumentMimeTypes:
          type: array
          items:
            type: string
            nullable: true
        supportedDuplexConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printDuplexConfiguration'
        supportedFinishings:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printFinishing'
        supportedMediaColors:
          type: array
          items:
            type: string
            nullable: true
        supportedMediaSizes:
          type: array
          items:
            type: string
            nullable: true
        supportedMediaTypes:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printMediaType'
        supportedOrientations:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printOrientation'
        supportedOutputBins:
          type: array
          items:
            type: string
            nullable: true
        supportedPagesPerSheet:
          $ref: '#/components/schemas/microsoft.graph.integerRange'
        supportedPresentationDirections:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printPresentationDirection'
        supportedPrintQualities:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printQuality'
        supportsFitPdfToPage:
          type: boolean
          description: True if the printer supports scaling PDF pages to match the print media size; false otherwise.
          nullable: true
        topMargins:
          type: array
          items:
            maximum: 2147483647
            minimum: -2147483648
            type: integer
            format: int32
            nullable: true
          description: A list of supported top margins(in microns) for the printer.
      additionalProperties:
        type: object
    microsoft.graph.printerDefaults:
      title: printerDefaults
      type: object
      properties:
        colorMode:
          $ref: '#/components/schemas/microsoft.graph.printColorMode'
        contentType:
          type: string
          description: The default content (MIME) type to use when processing documents.
          nullable: true
        copiesPerJob:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The default number of copies printed per job.
          format: int32
          nullable: true
        documentMimeType:
          type: string
          nullable: true
        dpi:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The default resolution in DPI to use when printing the job.
          format: int32
          nullable: true
        duplexConfiguration:
          $ref: '#/components/schemas/microsoft.graph.printDuplexConfiguration'
        duplexMode:
          $ref: '#/components/schemas/microsoft.graph.printDuplexMode'
        finishings:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printFinishing'
          description: The default set of finishings to apply to print jobs. Valid values are described in the following table.
        fitPdfToPage:
          type: boolean
          description: The default fitPdfToPage setting. True to fit each page of a PDF document to a physical sheet of media; false to let the printer decide how to lay out impressions.
          nullable: true
        inputBin:
          type: string
          description: The default input bin that serves as the paper source.
          nullable: true
        mediaColor:
          type: string
          description: The default media (such as paper) color to print the document on.
          nullable: true
        mediaSize:
          type: string
          description: The default media size to use. Supports standard size names for ISO and ANSI media sizes. Valid values are listed in the printerCapabilities topic.
          nullable: true
        mediaType:
          type: string
          description: The default media (such as paper) type to print the document on.
          nullable: true
        multipageLayout:
          $ref: '#/components/schemas/microsoft.graph.printMultipageLayout'
        orientation:
          $ref: '#/components/schemas/microsoft.graph.printOrientation'
        outputBin:
          type: string
          description: The default output bin to place completed prints into. See the printer's capabilities for a list of supported output bins.
          nullable: true
        pagesPerSheet:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The default number of document pages to print on each sheet.
          format: int32
          nullable: true
        pdfFitToPage:
          type: boolean
          nullable: true
        presentationDirection:
          $ref: '#/components/schemas/microsoft.graph.printPresentationDirection'
        printColorConfiguration:
          $ref: '#/components/schemas/microsoft.graph.printColorConfiguration'
        printQuality:
          $ref: '#/components/schemas/microsoft.graph.printQuality'
        quality:
          $ref: '#/components/schemas/microsoft.graph.printQuality'
        scaling:
          $ref: '#/components/schemas/microsoft.graph.printScaling'
      additionalProperties:
        type: object
    microsoft.graph.printerLocation:
      title: printerLocation
      type: object
      properties:
        altitudeInMeters:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'The altitude, in meters, that the printer is located at.'
          format: int32
          nullable: true
        building:
          type: string
          description: The building that the printer is located in.
          nullable: true
        city:
          type: string
          description: The city that the printer is located in.
          nullable: true
        countryOrRegion:
          type: string
          description: The country or region that the printer is located in.
          nullable: true
        floor:
          type: string
          description: The floor that the printer is located on. Only numerical values are supported right now.
          nullable: true
        floorDescription:
          type: string
          description: The description of the floor that the printer is located on.
          nullable: true
        floorNumber:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          format: int32
          nullable: true
        latitude:
          type: number
          description: The latitude that the printer is located at.
          format: double
          nullable: true
        longitude:
          type: number
          description: The longitude that the printer is located at.
          format: double
          nullable: true
        organization:
          type: array
          items:
            type: string
            nullable: true
          description: The organizational hierarchy that the printer belongs to. The elements should be in hierarchical order.
        postalCode:
          type: string
          description: The postal code that the printer is located in.
          nullable: true
        roomDescription:
          type: string
          description: The description of the room that the printer is located in.
          nullable: true
        roomName:
          type: string
          description: The room that the printer is located in. Only numerical values are supported right now.
          nullable: true
        roomNumber:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          format: int32
          nullable: true
        site:
          type: string
          description: The site that the printer is located in.
          nullable: true
        stateOrProvince:
          type: string
          description: The state or province that the printer is located in.
          nullable: true
        streetAddress:
          type: string
          description: The street address where the printer is located.
          nullable: true
        subdivision:
          type: array
          items:
            type: string
            nullable: true
          description: The subdivision that the printer is located in. The elements should be in hierarchical order.
        subunit:
          type: array
          items:
            type: string
            nullable: true
      additionalProperties:
        type: object
    microsoft.graph.printerStatus:
      title: printerStatus
      type: object
      properties:
        description:
          type: string
          description: A human-readable description of the printer's current processing state. Read-only.
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printerProcessingStateDetail'
          description: The list of details describing why the printer is in the current state. Valid values are described in the following table. Read-only.
        processingState:
          $ref: '#/components/schemas/microsoft.graph.printerProcessingState'
        processingStateDescription:
          type: string
          nullable: true
        processingStateReasons:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printerProcessingStateReason'
        state:
          $ref: '#/components/schemas/microsoft.graph.printerProcessingState'
      additionalProperties:
        type: object
    microsoft.graph.printJob:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: printJob
          type: object
          properties:
            configuration:
              $ref: '#/components/schemas/microsoft.graph.printJobConfiguration'
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.userIdentity'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The DateTimeOffset when the job was created. Read-only.
              format: date-time
            isFetchable:
              type: boolean
              description: 'If true, document can be fetched by printer.'
              nullable: true
            redirectedFrom:
              type: string
              description: 'Contains the source job URL, if the job has been redirected from another printer.'
              nullable: true
            redirectedTo:
              type: string
              description: 'Contains the destination job URL, if the job has been redirected to another printer.'
              nullable: true
            status:
              $ref: '#/components/schemas/microsoft.graph.printJobStatus'
            documents:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.printDocument'
              description: Read-only.
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.printTask'
              description: A list of printTasks that were triggered by this print job.
          additionalProperties:
            type: object
    microsoft.graph.printConnector:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: printConnector
          type: object
          properties:
            appVersion:
              type: string
              description: The connector's version.
              nullable: true
            deviceHealth:
              $ref: '#/components/schemas/microsoft.graph.deviceHealth'
            displayName:
              type: string
              description: The name of the connector.
              nullable: true
            fullyQualifiedDomainName:
              type: string
              description: The connector machine's hostname.
              nullable: true
            location:
              $ref: '#/components/schemas/microsoft.graph.printerLocation'
            name:
              type: string
              nullable: true
            operatingSystem:
              type: string
              description: The connector machine's operating system version.
              nullable: true
            registeredDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The DateTimeOffset when the connector was registered.
              format: date-time
          additionalProperties:
            type: object
    microsoft.graph.printTaskTrigger:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: printTaskTrigger
          type: object
          properties:
            event:
              $ref: '#/components/schemas/microsoft.graph.printEvent'
            definition:
              $ref: '#/components/schemas/microsoft.graph.printTaskDefinition'
          additionalProperties:
            type: object
    microsoft.graph.volumeType:
      title: volumeType
      enum:
        - operatingSystemVolume
        - fixedDataVolume
        - removableDataVolume
        - unknownFutureValue
      type: string
    microsoft.graph.parentLabelDetails:
      title: parentLabelDetails
      type: object
      properties:
        color:
          type: string
          description: 'The color that the user interface should display for the label, if configured.'
          nullable: true
        description:
          type: string
          description: The admin-defined description for the label.
          nullable: true
        id:
          type: string
          description: The label ID is a globally unique identifier (GUID).
          nullable: true
        isActive:
          type: boolean
          description: Indicates whether the label is active or not. Active labels should be hidden or disabled in user interfaces.
        name:
          type: string
          description: The plaintext name of the label.
          nullable: true
        parent:
          $ref: '#/components/schemas/microsoft.graph.parentLabelDetails'
        sensitivity:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'The sensitivity value of the label, where lower is less sensitive.'
          format: int32
        tooltip:
          type: string
          description: The tooltip that should be displayed for the label in a user interface.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.threatAssessmentResultType:
      title: threatAssessmentResultType
      enum:
        - checkPolicy
        - rescan
        - unknownFutureValue
      type: string
    microsoft.graph.attendeeType:
      title: attendeeType
      enum:
        - required
        - optional
        - resource
      type: string
    microsoft.graph.weekIndex:
      title: weekIndex
      enum:
        - first
        - second
        - third
        - fourth
        - last
      type: string
    microsoft.graph.recurrencePatternType:
      title: recurrencePatternType
      enum:
        - daily
        - weekly
        - absoluteMonthly
        - relativeMonthly
        - absoluteYearly
        - relativeYearly
      type: string
    microsoft.graph.recurrenceRangeType:
      title: recurrenceRangeType
      enum:
        - endDate
        - noEnd
        - numbered
      type: string
    microsoft.graph.messageActionFlag:
      title: messageActionFlag
      enum:
        - any
        - call
        - doNotForward
        - followUp
        - fyi
        - forward
        - noResponseNecessary
        - read
        - reply
        - replyToAll
        - review
      type: string
    microsoft.graph.sizeRange:
      title: sizeRange
      type: object
      properties:
        maximumSize:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The maximum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
          format: int32
          nullable: true
        minimumSize:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The minimum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
          format: int32
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.decisionItemPrincipalResourceMembershipType:
      title: decisionItemPrincipalResourceMembershipType
      enum:
        - direct
        - indirect
        - unknownFutureValue
      type: string
    microsoft.graph.accessReviewNotificationRecipientScope:
      title: accessReviewNotificationRecipientScope
      type: object
      additionalProperties:
        type: object
    microsoft.graph.accessReviewApplyAction:
      title: accessReviewApplyAction
      type: object
      additionalProperties:
        type: object
    microsoft.graph.accessReviewRecommendationInsightSetting:
      title: accessReviewRecommendationInsightSetting
      type: object
      additionalProperties:
        type: object
    microsoft.graph.deviceAndAppManagementAssignmentFilterType:
      title: deviceAndAppManagementAssignmentFilterType
      enum:
        - none
        - include
        - exclude
      type: string
      description: Represents type of the assignment filter.
      x-ms-enum:
        name: deviceAndAppManagementAssignmentFilterType
        modelAsString: false
        values:
          - value: none
            description: Default value. Do not use.
            name: none
          - value: include
            description: 'Indicates in-filter, rule matching will offer the payload to devices.'
            name: include
          - value: exclude
            description: 'Indicates out-filter, rule matching will not offer the payload to devices.'
            name: exclude
    microsoft.graph.settingSource:
      title: settingSource
      type: object
      properties:
        displayName:
          type: string
          description: Not yet documented
          nullable: true
        id:
          type: string
          description: Not yet documented
          nullable: true
        sourceType:
          $ref: '#/components/schemas/microsoft.graph.settingSourceType'
      additionalProperties:
        type: object
    microsoft.graph.securityBaselineContributingPolicy:
      title: securityBaselineContributingPolicy
      type: object
      properties:
        displayName:
          type: string
          description: Name of the policy
          nullable: true
        sourceId:
          type: string
          description: Unique identifier of the policy
          nullable: true
        sourceType:
          $ref: '#/components/schemas/microsoft.graph.securityBaselinePolicySourceType'
      additionalProperties:
        type: object
      description: The security baseline compliance state of a setting for a device
    microsoft.graph.windowsMalwareCategory:
      title: windowsMalwareCategory
      enum:
        - invalid
        - adware
        - spyware
        - passwordStealer
        - trojanDownloader
        - worm
        - backdoor
        - remoteAccessTrojan
        - trojan
        - emailFlooder
        - keylogger
        - dialer
        - monitoringSoftware
        - browserModifier
        - cookie
        - browserPlugin
        - aolExploit
        - nuker
        - securityDisabler
        - jokeProgram
        - hostileActiveXControl
        - softwareBundler
        - stealthNotifier
        - settingsModifier
        - toolBar
        - remoteControlSoftware
        - trojanFtp
        - potentialUnwantedSoftware
        - icqExploit
        - trojanTelnet
        - exploit
        - filesharingProgram
        - malwareCreationTool
        - remote_Control_Software
        - tool
        - trojanDenialOfService
        - trojanDropper
        - trojanMassMailer
        - trojanMonitoringSoftware
        - trojanProxyServer
        - virus
        - known
        - unknown
        - spp
        - behavior
        - vulnerability
        - policy
        - enterpriseUnwantedSoftware
        - ransom
        - hipsRule
      type: string
      description: Malware category id
      x-ms-enum:
        name: windowsMalwareCategory
        modelAsString: false
        values:
          - value: invalid
            description: Invalid
            name: invalid
          - value: adware
            description: Adware
            name: adware
          - value: spyware
            description: Spyware
            name: spyware
          - value: passwordStealer
            description: Password stealer
            name: passwordStealer
          - value: trojanDownloader
            description: Trojan downloader
            name: trojanDownloader
          - value: worm
            description: Worm
            name: worm
          - value: backdoor
            description: Backdoor
            name: backdoor
          - value: remoteAccessTrojan
            description: Remote access Trojan
            name: remoteAccessTrojan
          - value: trojan
            description: Trojan
            name: trojan
          - value: emailFlooder
            description: Email flooder
            name: emailFlooder
          - value: keylogger
            description: Keylogger
            name: keylogger
          - value: dialer
            description: Dialer
            name: dialer
          - value: monitoringSoftware
            description: Monitoring software
            name: monitoringSoftware
          - value: browserModifier
            description: Browser modifier
            name: browserModifier
          - value: cookie
            description: Cookie
            name: cookie
          - value: browserPlugin
            description: Browser plugin
            name: browserPlugin
          - value: aolExploit
            description: AOL exploit
            name: aolExploit
          - value: nuker
            description: Nuker
            name: nuker
          - value: securityDisabler
            description: Security disabler
            name: securityDisabler
          - value: jokeProgram
            description: Joke program
            name: jokeProgram
          - value: hostileActiveXControl
            description: Hostile ActiveX control
            name: hostileActiveXControl
          - value: softwareBundler
            description: Software bundler
            name: softwareBundler
          - value: stealthNotifier
            description: Stealth modifier
            name: stealthNotifier
          - value: settingsModifier
            description: Settings modifier
            name: settingsModifier
          - value: toolBar
            description: Toolbar
            name: toolBar
          - value: remoteControlSoftware
            description: Remote control software
            name: remoteControlSoftware
          - value: trojanFtp
            description: Trojan FTP
            name: trojanFtp
          - value: potentialUnwantedSoftware
            description: Potential unwanted software
            name: potentialUnwantedSoftware
          - value: icqExploit
            description: ICQ exploit
            name: icqExploit
          - value: trojanTelnet
            description: Trojan telnet
            name: trojanTelnet
          - value: exploit
            description: Exploit
            name: exploit
          - value: filesharingProgram
            description: File sharing program
            name: filesharingProgram
          - value: malwareCreationTool
            description: Malware creation tool
            name: malwareCreationTool
          - value: remote_Control_Software
            description: Remote control software
            name: remote_Control_Software
          - value: tool
            description: Tool
            name: tool
          - value: trojanDenialOfService
            description: Trojan denial of service
            name: trojanDenialOfService
          - value: trojanDropper
            description: Trojan dropper
            name: trojanDropper
          - value: trojanMassMailer
            description: Trojan mass mailer
            name: trojanMassMailer
          - value: trojanMonitoringSoftware
            description: Trojan monitoring software
            name: trojanMonitoringSoftware
          - value: trojanProxyServer
            description: Trojan proxy server
            name: trojanProxyServer
          - value: virus
            description: Virus
            name: virus
          - value: known
            description: Known
            name: known
          - value: unknown
            description: Unknown
            name: unknown
          - value: spp
            description: SPP
            name: spp
          - value: behavior
            description: Behavior
            name: behavior
          - value: vulnerability
            description: Vulnerability
            name: vulnerability
          - value: policy
            description: Policy
            name: policy
          - value: enterpriseUnwantedSoftware
            description: Enterprise Unwanted Software
            name: enterpriseUnwantedSoftware
          - value: ransom
            description: Ransom
            name: ransom
          - value: hipsRule
            description: HIPS Rule
            name: hipsRule
    microsoft.graph.windowsMalwareExecutionState:
      title: windowsMalwareExecutionState
      enum:
        - unknown
        - blocked
        - allowed
        - running
        - notRunning
      type: string
      description: Malware execution status
      x-ms-enum:
        name: windowsMalwareExecutionState
        modelAsString: false
        values:
          - value: unknown
            description: Unknown
            name: unknown
          - value: blocked
            description: Blocked
            name: blocked
          - value: allowed
            description: Allowed
            name: allowed
          - value: running
            description: Running
            name: running
          - value: notRunning
            description: Not running
            name: notRunning
    microsoft.graph.windowsMalwareSeverity:
      title: windowsMalwareSeverity
      enum:
        - unknown
        - low
        - moderate
        - high
        - severe
      type: string
      description: Malware severity
      x-ms-enum:
        name: windowsMalwareSeverity
        modelAsString: false
        values:
          - value: unknown
            description: Unknown
            name: unknown
          - value: low
            description: Low
            name: low
          - value: moderate
            description: Moderate
            name: moderate
          - value: high
            description: High
            name: high
          - value: severe
            description: Severe
            name: severe
    microsoft.graph.windowsMalwareState:
      title: windowsMalwareState
      enum:
        - unknown
        - detected
        - cleaned
        - quarantined
        - removed
        - allowed
        - blocked
        - cleanFailed
        - quarantineFailed
        - removeFailed
        - allowFailed
        - abandoned
        - blockFailed
      type: string
      description: Malware current status
      x-ms-enum:
        name: windowsMalwareState
        modelAsString: false
        values:
          - value: unknown
            description: Unknown
            name: unknown
          - value: detected
            description: Detected
            name: detected
          - value: cleaned
            description: Cleaned
            name: cleaned
          - value: quarantined
            description: Quarantined
            name: quarantined
          - value: removed
            description: Removed
            name: removed
          - value: allowed
            description: Allowed
            name: allowed
          - value: blocked
            description: Blocked
            name: blocked
          - value: cleanFailed
            description: Clean failed
            name: cleanFailed
          - value: quarantineFailed
            description: Quarantine failed
            name: quarantineFailed
          - value: removeFailed
            description: Remove failed
            name: removeFailed
          - value: allowFailed
            description: Allow failed
            name: allowFailed
          - value: abandoned
            description: Abandoned
            name: abandoned
          - value: blockFailed
            description: Block failed
            name: blockFailed
    microsoft.graph.windowsMalwareThreatState:
      title: windowsMalwareThreatState
      enum:
        - active
        - actionFailed
        - manualStepsRequired
        - fullScanRequired
        - rebootRequired
        - remediatedWithNonCriticalFailures
        - quarantined
        - removed
        - cleaned
        - allowed
        - noStatusCleared
      type: string
      description: Malware threat status
      x-ms-enum:
        name: windowsMalwareThreatState
        modelAsString: false
        values:
          - value: active
            description: Active
            name: active
          - value: actionFailed
            description: Action failed
            name: actionFailed
          - value: manualStepsRequired
            description: Manual steps required
            name: manualStepsRequired
          - value: fullScanRequired
            description: Full scan required
            name: fullScanRequired
          - value: rebootRequired
            description: Reboot required
            name: rebootRequired
          - value: remediatedWithNonCriticalFailures
            description: 'Remediated with non critical failures '
            name: remediatedWithNonCriticalFailures
          - value: quarantined
            description: Quarantined
            name: quarantined
          - value: removed
            description: Removed
            name: removed
          - value: cleaned
            description: Cleaned
            name: cleaned
          - value: allowed
            description: Allowed
            name: allowed
          - value: noStatusCleared
            description: No status cleared
            name: noStatusCleared
    microsoft.graph.plannerContainerType:
      title: plannerContainerType
      enum:
        - group
        - unknownFutureValue
        - roster
      type: string
    microsoft.graph.plannerCategoryDescriptions:
      title: plannerCategoryDescriptions
      type: object
      properties:
        category1:
          type: string
          description: The label associated with Category 1
          nullable: true
        category10:
          type: string
          description: The label associated with Category 10
          nullable: true
        category11:
          type: string
          description: The label associated with Category 11
          nullable: true
        category12:
          type: string
          description: The label associated with Category 12
          nullable: true
        category13:
          type: string
          description: The label associated with Category 13
          nullable: true
        category14:
          type: string
          description: The label associated with Category 14
          nullable: true
        category15:
          type: string
          description: The label associated with Category 15
          nullable: true
        category16:
          type: string
          description: The label associated with Category 16
          nullable: true
        category17:
          type: string
          description: The label associated with Category 17
          nullable: true
        category18:
          type: string
          description: The label associated with Category 18
          nullable: true
        category19:
          type: string
          description: The label associated with Category 19
          nullable: true
        category2:
          type: string
          description: The label associated with Category 2
          nullable: true
        category20:
          type: string
          description: The label associated with Category 20
          nullable: true
        category21:
          type: string
          description: The label associated with Category 21
          nullable: true
        category22:
          type: string
          description: The label associated with Category 22
          nullable: true
        category23:
          type: string
          description: The label associated with Category 23
          nullable: true
        category24:
          type: string
          description: The label associated with Category 24
          nullable: true
        category25:
          type: string
          description: The label associated with Category 25
          nullable: true
        category3:
          type: string
          description: The label associated with Category 3
          nullable: true
        category4:
          type: string
          description: The label associated with Category 4
          nullable: true
        category5:
          type: string
          description: The label associated with Category 5
          nullable: true
        category6:
          type: string
          description: The label associated with Category 6
          nullable: true
        category7:
          type: string
          description: The label associated with Category 7
          nullable: true
        category8:
          type: string
          description: The label associated with Category 8
          nullable: true
        category9:
          type: string
          description: The label associated with Category 9
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.plannerPlanContextDetailsCollection:
      title: plannerPlanContextDetailsCollection
      type: object
      additionalProperties:
        type: object
    microsoft.graph.plannerUserIds:
      title: plannerUserIds
      type: object
      additionalProperties:
        type: object
    microsoft.graph.plannerTeamsPublicationInfo:
      title: plannerTeamsPublicationInfo
      type: object
      properties:
        lastModifiedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The date and time when this task was last modified by the publication process. Read-only.
          format: date-time
          nullable: true
        publicationId:
          type: string
          description: The identifier of the publication. Read-only.
          nullable: true
        publishedToPlanId:
          type: string
          description: The identifier of the plannerPlan this task was originally placed in. Read-only.
          nullable: true
        publishingTeamId:
          type: string
          description: The identifier of the team that initiated the publication process. Read-only.
          nullable: true
        publishingTeamName:
          type: string
          description: 'The display name of the team that initiated the publication process. This display name is for reference only, and might not represent the most up-to-date name of the team. Read-only.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.plannerOrderHintsByAssignee:
      title: plannerOrderHintsByAssignee
      type: object
      additionalProperties:
        type: object
    microsoft.graph.plannerChecklistItems:
      title: plannerChecklistItems
      type: object
      additionalProperties:
        type: object
    microsoft.graph.plannerExternalReferences:
      title: plannerExternalReferences
      type: object
      additionalProperties:
        type: object
    microsoft.graph.sharingDetail:
      title: sharingDetail
      type: object
      properties:
        sharedBy:
          $ref: '#/components/schemas/microsoft.graph.insightIdentity'
        sharedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The date and time the file was last shared. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
          format: date-time
          nullable: true
        sharingReference:
          $ref: '#/components/schemas/microsoft.graph.resourceReference'
        sharingSubject:
          type: string
          description: The subject with which the document was shared.
          nullable: true
        sharingType:
          type: string
          description: 'Determines the way the document was shared, can be by a ''Link'', ''Attachment'', ''Group'', ''Site''.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.resourceReference:
      title: resourceReference
      type: object
      properties:
        id:
          type: string
          description: The item's unique identifier.
          nullable: true
        type:
          type: string
          description: 'A string value that can be used to classify the item, such as ''microsoft.graph.driveItem'''
          nullable: true
        webUrl:
          type: string
          description: A URL leading to the referenced item.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.resourceVisualization:
      title: resourceVisualization
      type: object
      properties:
        containerDisplayName:
          type: string
          description: 'A string describing where the item is stored. For example, the name of a SharePoint site or the user name identifying the owner of the OneDrive storing the item.'
          nullable: true
        containerType:
          type: string
          description: Can be used for filtering by the type of container in which the file is stored. Such as Site or OneDriveBusiness.
          nullable: true
        containerWebUrl:
          type: string
          description: A path leading to the folder in which the item is stored.
          nullable: true
        mediaType:
          type: string
          description: The item's media type. Can be used for filtering for a specific type of file based on supported IANA Media Mime Types. Note that not all Media Mime Types are supported.
          nullable: true
        previewImageUrl:
          type: string
          description: A URL leading to the preview image for the item.
          nullable: true
        previewText:
          type: string
          description: A preview text for the item.
          nullable: true
        title:
          type: string
          description: The item's title text.
          nullable: true
        type:
          type: string
          description: The item's media type. Can be used for filtering for a specific file based on a specific type. See below for supported types.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.usageDetails:
      title: usageDetails
      type: object
      properties:
        lastAccessedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The date and time the resource was last accessed by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
          format: date-time
          nullable: true
        lastModifiedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The date and time the resource was last modified by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
          format: date-time
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.translationLanguageOverride:
      title: translationLanguageOverride
      type: object
      properties:
        languageTag:
          type: string
          description: The language to apply the override.Returned by default. Not nullable.
        translationBehavior:
          $ref: '#/components/schemas/microsoft.graph.translationBehavior'
      additionalProperties:
        type: object
    microsoft.graph.translationBehavior:
      title: translationBehavior
      enum:
        - Ask
        - Yes
        - No
      type: string
    microsoft.graph.timeRange:
      title: timeRange
      type: object
      properties:
        endTime:
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$'
          type: string
          description: End time for the time range.
          format: time
          nullable: true
        startTime:
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$'
          type: string
          description: Start time for the time range.
          format: time
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.allowedAudiences:
      title: allowedAudiences
      enum:
        - me
        - family
        - contacts
        - groupMembers
        - organization
        - federatedOrganizations
        - everyone
        - unknownFutureValue
      type: string
    microsoft.graph.inferenceData:
      title: inferenceData
      type: object
      properties:
        confidenceScore:
          type: number
          description: Confidence score reflecting the accuracy of the data inferred about the user.
          format: double
          nullable: true
        userHasVerifiedAccuracy:
          type: boolean
          description: Records if the user has confirmed this inference as being True or False.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.personDataSources:
      title: personDataSources
      type: object
      properties:
        type:
          type: array
          items:
            type: string
            nullable: true
      additionalProperties:
        type: object
    microsoft.graph.personRelationship:
      title: personRelationship
      enum:
        - manager
        - colleague
        - directReport
        - dotLineReport
        - assistant
        - dotLineManager
        - alternateContact
        - friend
        - spouse
        - sibling
        - child
        - parent
        - sponsor
        - emergencyContact
        - other
        - unknownFutureValue
      type: string
    microsoft.graph.onlineMeetingRole:
      title: onlineMeetingRole
      enum:
        - attendee
        - presenter
        - unknownFutureValue
        - producer
        - coorganizer
      type: string
    microsoft.graph.attendanceInterval:
      title: attendanceInterval
      type: object
      properties:
        durationInSeconds:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'Duration of the meeting interval in seconds; that is, the difference between joinDateTime and leaveDateTime.'
          format: int32
          nullable: true
        joinDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The time the attendee joined in UTC.
          format: date-time
          nullable: true
        leaveDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The time the attendee left in UTC.
          format: date-time
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.meetingAudience:
      title: meetingAudience
      enum:
        - everyone
        - organization
        - unknownFutureValue
      type: string
    microsoft.graph.meetingRegistrantBase:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: meetingRegistrantBase
          type: object
          properties:
            joinWebUrl:
              type: string
              description: A unique web URL for the registrant to join the meeting. Read-only.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.answerInputType:
      title: answerInputType
      enum:
        - text
        - radioButton
        - unknownFutureValue
      type: string
    microsoft.graph.teamworkUserIdentityType:
      title: teamworkUserIdentityType
      enum:
        - aadUser
        - onPremiseAadUser
        - anonymousGuest
        - federatedUser
        - personalMicrosoftAccountUser
        - skypeUser
        - phoneUser
        - unknownFutureValue
        - emailUser
      type: string
    microsoft.graph.teamsAppDistributionMethod:
      title: teamsAppDistributionMethod
      enum:
        - store
        - organization
        - sideloaded
        - unknownFutureValue
      type: string
    microsoft.graph.teamsAppInstallationScopes:
      title: teamsAppInstallationScopes
      enum:
        - team
        - groupChat
        - personal
        - unknownFutureValue
      type: string
    microsoft.graph.teamsAppPublishingState:
      title: teamsAppPublishingState
      enum:
        - submitted
        - rejected
        - published
        - unknownFutureValue
      type: string
    microsoft.graph.teamworkBot:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: teamworkBot
          type: object
          additionalProperties:
            type: object
    microsoft.graph.teamsAppIcon:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: teamsAppIcon
          type: object
          properties:
            webUrl:
              type: string
              description: The web URL that can be used for downloading the image.
              nullable: true
            hostedContent:
              $ref: '#/components/schemas/microsoft.graph.teamworkHostedContent'
          additionalProperties:
            type: object
    microsoft.graph.chatMessageMentionedIdentitySet:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.identitySet'
        - title: chatMessageMentionedIdentitySet
          type: object
          properties:
            conversation:
              $ref: '#/components/schemas/microsoft.graph.teamworkConversationIdentity'
            tag:
              $ref: '#/components/schemas/microsoft.graph.teamworkTagIdentity'
          additionalProperties:
            type: object
    microsoft.graph.chatMessagePolicyViolationDlpActionTypes:
      title: chatMessagePolicyViolationDlpActionTypes
      enum:
        - none
        - notifySender
        - blockAccess
        - blockAccessExternal
      type: string
    microsoft.graph.chatMessagePolicyViolationPolicyTip:
      title: chatMessagePolicyViolationPolicyTip
      type: object
      properties:
        complianceUrl:
          type: string
          description: 'The URL a user can visit to read about the data loss prevention policies for the organization. (ie, policies about what users shouldn''t say in chats)'
          nullable: true
        generalText:
          type: string
          description: Explanatory text shown to the sender of the message.
          nullable: true
        matchedConditionDescriptions:
          type: array
          items:
            type: string
            nullable: true
          description: 'The list of improper data in the message that was detected by the data loss prevention app. Each DLP app defines its own conditions, examples include ''Credit Card Number'' and ''Social Security Number''.'
      additionalProperties:
        type: object
    microsoft.graph.chatMessagePolicyViolationUserActionTypes:
      title: chatMessagePolicyViolationUserActionTypes
      enum:
        - none
        - override
        - reportFalsePositive
      type: string
    microsoft.graph.chatMessagePolicyViolationVerdictDetailsTypes:
      title: chatMessagePolicyViolationVerdictDetailsTypes
      enum:
        - none
        - allowFalsePositiveOverride
        - allowOverrideWithoutJustification
        - allowOverrideWithJustification
      type: string
    microsoft.graph.chatMessageReactionIdentitySet:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.identitySet'
        - title: chatMessageReactionIdentitySet
          type: object
          additionalProperties:
            type: object
    microsoft.graph.teamworkHostedContent:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: teamworkHostedContent
          type: object
          properties:
            contentBytes:
              type: string
              description: Write only. Bytes for the hosted content (such as images).
              format: base64url
              nullable: true
            contentType:
              type: string
              description: 'Write only. Content type, such as image/png, image/jpg.'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.replyRestriction:
      title: replyRestriction
      enum:
        - everyone
        - authorAndModerators
        - unknownFutureValue
      type: string
    microsoft.graph.userNewMessageRestriction:
      title: userNewMessageRestriction
      enum:
        - everyone
        - everyoneExceptGuests
        - moderators
        - unknownFutureValue
      type: string
    microsoft.graph.scheduleChangeRequest:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.changeTrackedEntity'
        - title: scheduleChangeRequest
          type: object
          properties:
            assignedTo:
              $ref: '#/components/schemas/microsoft.graph.scheduleChangeRequestActor'
            managerActionDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            managerActionMessage:
              type: string
              nullable: true
            managerUserId:
              type: string
              nullable: true
            senderDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            senderMessage:
              type: string
              nullable: true
            senderUserId:
              type: string
              nullable: true
            state:
              $ref: '#/components/schemas/microsoft.graph.scheduleChangeState'
          additionalProperties:
            type: object
    microsoft.graph.openShiftItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.shiftItem'
        - title: openShiftItem
          type: object
          properties:
            openSlotCount:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: Count of the number of slots for the given open shift.
              format: int32
          additionalProperties:
            type: object
    microsoft.graph.shiftItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.scheduleEntity'
        - title: shiftItem
          type: object
          properties:
            activities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.shiftActivity'
              description: 'An incremental part of a shift which can cover details of when and where an employee is during their shift. For example, an assignment or a scheduled break or lunch. Required.'
            displayName:
              type: string
              description: The shift label of the shiftItem.
              nullable: true
            notes:
              type: string
              description: The shift notes for the shiftItem.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.timeCardBreak:
      title: timeCardBreak
      type: object
      properties:
        breakId:
          type: string
          description: ID of the timeCardBreak.
          nullable: true
        end:
          $ref: '#/components/schemas/microsoft.graph.timeCardEvent'
        notes:
          $ref: '#/components/schemas/microsoft.graph.itemBody'
        start:
          $ref: '#/components/schemas/microsoft.graph.timeCardEvent'
      additionalProperties:
        type: object
    microsoft.graph.timeCardEvent:
      title: timeCardEvent
      type: object
      properties:
        atApprovedLocation:
          type: boolean
          description: Indicates whether the entry was recorded at the approved location.
          nullable: true
        dateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The time the entry is recorded.
          format: date-time
        notes:
          $ref: '#/components/schemas/microsoft.graph.itemBody'
      additionalProperties:
        type: object
    microsoft.graph.confirmedBy:
      title: confirmedBy
      enum:
        - none
        - user
        - manager
        - unknownFutureValue
      type: string
    microsoft.graph.timeCardEntry:
      title: timeCardEntry
      type: object
      properties:
        breaks:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.timeCardBreak'
          description: The list of breaks associated with the timeCard.
        clockInEvent:
          $ref: '#/components/schemas/microsoft.graph.timeCardEvent'
        clockOutEvent:
          $ref: '#/components/schemas/microsoft.graph.timeCardEvent'
      additionalProperties:
        type: object
    microsoft.graph.timeCardState:
      title: timeCardState
      enum:
        - clockedIn
        - onBreak
        - clockedOut
        - unknownFutureValue
      type: string
    microsoft.graph.timeOffReasonIconType:
      title: timeOffReasonIconType
      enum:
        - none
        - car
        - calendar
        - running
        - plane
        - firstAid
        - doctor
        - notWorking
        - clock
        - juryDuty
        - globe
        - cup
        - phone
        - weather
        - umbrella
        - piggyBank
        - dog
        - cake
        - trafficCone
        - pin
        - sunny
        - unknownFutureValue
      type: string
    microsoft.graph.timeOffItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.scheduleEntity'
        - title: timeOffItem
          type: object
          properties:
            timeOffReasonId:
              type: string
              description: ID of the timeOffReason for this timeOffItem. Required.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.attachment_v2:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: attachment_v2
          type: object
          properties:
            contentType:
              type: string
              nullable: true
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            name:
              type: string
              nullable: true
            size:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              format: int32
          additionalProperties:
            type: object
    microsoft.graph.attachmentSession:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: attachmentSession
          type: object
          properties:
            content:
              type: string
              format: base64url
              nullable: true
            expirationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              format: date-time
              nullable: true
            nextExpectedRange:
              type: array
              items:
                type: string
                nullable: true
          additionalProperties:
            type: object
    microsoft.graph.linkedResource:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: linkedResource
          type: object
          properties:
            applicationName:
              type: string
              description: Field indicating the app name of the source that is sending the linkedResource.
              nullable: true
            displayName:
              type: string
              description: Field indicating the title of the linkedResource.
              nullable: true
            externalId:
              type: string
              description: Id of the object that is associated with this task on the third-party/partner system.
              nullable: true
            webUrl:
              type: string
              description: Deep link to the linkedResource.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.workbookFilterCriteria:
      title: workbookFilterCriteria
      type: object
      properties:
        color:
          type: string
          nullable: true
        criterion1:
          type: string
          nullable: true
        criterion2:
          type: string
          nullable: true
        dynamicCriteria:
          type: string
        filterOn:
          type: string
        icon:
          $ref: '#/components/schemas/microsoft.graph.workbookIcon'
        operator:
          type: string
        values:
          $ref: '#/components/schemas/microsoft.graph.Json'
      additionalProperties:
        type: object
    microsoft.graph.workbookIcon:
      title: workbookIcon
      type: object
      properties:
        index:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: Represents the index of the icon in the given set.
          format: int32
        set:
          type: string
          description: 'Represents the set that the icon is part of. Possible values are: Invalid, ThreeArrows, ThreeArrowsGray, ThreeFlags, ThreeTrafficLights1, ThreeTrafficLights2, ThreeSigns, ThreeSymbols, ThreeSymbols2, FourArrows, FourArrowsGray, FourRedToBlack, FourRating, FourTrafficLights, FiveArrows, FiveArrowsGray, FiveRating, FiveQuarters, ThreeStars, ThreeTriangles, FiveBoxes.'
      additionalProperties:
        type: object
    microsoft.graph.workbookChartAxis:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartAxis
          type: object
          properties:
            majorUnit:
              $ref: '#/components/schemas/microsoft.graph.Json'
            maximum:
              $ref: '#/components/schemas/microsoft.graph.Json'
            minimum:
              $ref: '#/components/schemas/microsoft.graph.Json'
            minorUnit:
              $ref: '#/components/schemas/microsoft.graph.Json'
            format:
              $ref: '#/components/schemas/microsoft.graph.workbookChartAxisFormat'
            majorGridlines:
              $ref: '#/components/schemas/microsoft.graph.workbookChartGridlines'
            minorGridlines:
              $ref: '#/components/schemas/microsoft.graph.workbookChartGridlines'
            title:
              $ref: '#/components/schemas/microsoft.graph.workbookChartAxisTitle'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartDataLabelFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartDataLabelFormat
          type: object
          properties:
            fill:
              $ref: '#/components/schemas/microsoft.graph.workbookChartFill'
            font:
              $ref: '#/components/schemas/microsoft.graph.workbookChartFont'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartFill:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartFill
          type: object
          additionalProperties:
            type: object
    microsoft.graph.workbookChartFont:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartFont
          type: object
          properties:
            bold:
              type: boolean
              description: Represents the bold status of font.
              nullable: true
            color:
              type: string
              description: 'HTML color code representation of the text color. E.g. #FF0000 represents Red.'
              nullable: true
            italic:
              type: boolean
              description: Represents the italic status of the font.
              nullable: true
            name:
              type: string
              description: Font name (e.g. 'Calibri')
              nullable: true
            size:
              type: number
              description: Size of the font (e.g. 11)
              format: double
              nullable: true
            underline:
              type: string
              description: 'Type of underline applied to the font. The possible values are: None, Single.'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.workbookChartLegendFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartLegendFormat
          type: object
          properties:
            fill:
              $ref: '#/components/schemas/microsoft.graph.workbookChartFill'
            font:
              $ref: '#/components/schemas/microsoft.graph.workbookChartFont'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartSeriesFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartSeriesFormat
          type: object
          properties:
            fill:
              $ref: '#/components/schemas/microsoft.graph.workbookChartFill'
            line:
              $ref: '#/components/schemas/microsoft.graph.workbookChartLineFormat'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartPoint:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartPoint
          type: object
          properties:
            value:
              $ref: '#/components/schemas/microsoft.graph.Json'
            format:
              $ref: '#/components/schemas/microsoft.graph.workbookChartPointFormat'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartTitleFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartTitleFormat
          type: object
          properties:
            fill:
              $ref: '#/components/schemas/microsoft.graph.workbookChartFill'
            font:
              $ref: '#/components/schemas/microsoft.graph.workbookChartFont'
          additionalProperties:
            type: object
    microsoft.graph.printColorMode:
      title: printColorMode
      enum:
        - blackAndWhite
        - grayscale
        - color
        - auto
      type: string
    microsoft.graph.integerRange:
      title: integerRange
      type: object
      properties:
        end:
          type: integer
          description: The inclusive upper bound of the integer range.
          format: int64
          nullable: true
        maximum:
          type: integer
          format: int64
          nullable: true
        minimum:
          type: integer
          format: int64
          nullable: true
        start:
          type: integer
          description: The inclusive lower bound of the integer range.
          format: int64
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.printDuplexMode:
      title: printDuplexMode
      enum:
        - flipOnLongEdge
        - flipOnShortEdge
        - oneSided
      type: string
    microsoft.graph.printerFeedDirection:
      title: printerFeedDirection
      enum:
        - longEdgeFirst
        - shortEdgeFirst
      type: string
    microsoft.graph.printerFeedOrientation:
      title: printerFeedOrientation
      enum:
        - longEdgeFirst
        - shortEdgeFirst
      type: string
    microsoft.graph.printFinishing:
      title: printFinishing
      enum:
        - none
        - staple
        - punch
        - cover
        - bind
        - saddleStitch
        - stitchEdge
        - stapleTopLeft
        - stapleBottomLeft
        - stapleTopRight
        - stapleBottomRight
        - stitchLeftEdge
        - stitchTopEdge
        - stitchRightEdge
        - stitchBottomEdge
        - stapleDualLeft
        - stapleDualTop
        - stapleDualRight
        - stapleDualBottom
        - unknownFutureValue
      type: string
    microsoft.graph.printMultipageLayout:
      title: printMultipageLayout
      enum:
        - clockwiseFromTopLeft
        - counterclockwiseFromTopLeft
        - counterclockwiseFromTopRight
        - clockwiseFromTopRight
        - counterclockwiseFromBottomLeft
        - clockwiseFromBottomLeft
        - counterclockwiseFromBottomRight
        - clockwiseFromBottomRight
      type: string
    microsoft.graph.printOrientation:
      title: printOrientation
      enum:
        - portrait
        - landscape
        - reverseLandscape
        - reversePortrait
      type: string
    microsoft.graph.printQuality:
      title: printQuality
      enum:
        - low
        - medium
        - high
        - unknownFutureValue
      type: string
    microsoft.graph.printScaling:
      title: printScaling
      enum:
        - auto
        - shrinkToFit
        - fill
        - fit
        - none
        - unknownFutureValue
      type: string
    microsoft.graph.printColorConfiguration:
      title: printColorConfiguration
      enum:
        - blackAndWhite
        - grayscale
        - color
        - auto
      type: string
    microsoft.graph.printDuplexConfiguration:
      title: printDuplexConfiguration
      enum:
        - twoSidedLongEdge
        - twoSidedShortEdge
        - oneSided
      type: string
    microsoft.graph.printMediaType:
      title: printMediaType
      enum:
        - stationery
        - transparency
        - envelope
        - envelopePlain
        - continuous
        - screen
        - screenPaged
        - continuousLong
        - continuousShort
        - envelopeWindow
        - multiPartForm
        - multiLayer
        - labels
      type: string
    microsoft.graph.printPresentationDirection:
      title: printPresentationDirection
      enum:
        - clockwiseFromTopLeft
        - counterClockwiseFromTopLeft
        - counterClockwiseFromTopRight
        - clockwiseFromTopRight
        - counterClockwiseFromBottomLeft
        - clockwiseFromBottomLeft
        - counterClockwiseFromBottomRight
        - clockwiseFromBottomRight
      type: string
    microsoft.graph.printerProcessingStateDetail:
      title: printerProcessingStateDetail
      enum:
        - paused
        - mediaJam
        - mediaNeeded
        - mediaLow
        - mediaEmpty
        - coverOpen
        - interlockOpen
        - outputTrayMissing
        - outputAreaFull
        - markerSupplyLow
        - markerSupplyEmpty
        - inputTrayMissing
        - outputAreaAlmostFull
        - markerWasteAlmostFull
        - markerWasteFull
        - fuserOverTemp
        - fuserUnderTemp
        - other
        - none
        - movingToPaused
        - shutdown
        - connectingToDevice
        - timedOut
        - stopping
        - stoppedPartially
        - tonerLow
        - tonerEmpty
        - spoolAreaFull
        - doorOpen
        - opticalPhotoConductorNearEndOfLife
        - opticalPhotoConductorLifeOver
        - developerLow
        - developerEmpty
        - interpreterResourceUnavailable
        - unknownFutureValue
        - alertRemovalOfBinaryChangeEntry
        - banderAdded
        - banderAlmostEmpty
        - banderAlmostFull
        - banderAtLimit
        - banderClosed
        - banderConfigurationChange
        - banderCoverClosed
        - banderCoverOpen
        - banderEmpty
        - banderFull
        - banderInterlockClosed
        - banderInterlockOpen
        - banderJam
        - banderLifeAlmostOver
        - banderLifeOver
        - banderMemoryExhausted
        - banderMissing
        - banderMotorFailure
        - banderNearLimit
        - banderOffline
        - banderOpened
        - banderOverTemperature
        - banderPowerSaver
        - banderRecoverableFailure
        - banderRecoverableStorage
        - banderRemoved
        - banderResourceAdded
        - banderResourceRemoved
        - banderThermistorFailure
        - banderTimingFailure
        - banderTurnedOff
        - banderTurnedOn
        - banderUnderTemperature
        - banderUnrecoverableFailure
        - banderUnrecoverableStorageError
        - banderWarmingUp
        - binderAdded
        - binderAlmostEmpty
        - binderAlmostFull
        - binderAtLimit
        - binderClosed
        - binderConfigurationChange
        - binderCoverClosed
        - binderCoverOpen
        - binderEmpty
        - binderFull
        - binderInterlockClosed
        - binderInterlockOpen
        - binderJam
        - binderLifeAlmostOver
        - binderLifeOver
        - binderMemoryExhausted
        - binderMissing
        - binderMotorFailure
        - binderNearLimit
        - binderOffline
        - binderOpened
        - binderOverTemperature
        - binderPowerSaver
        - binderRecoverableFailure
        - binderRecoverableStorage
        - binderRemoved
        - binderResourceAdded
        - binderResourceRemoved
        - binderThermistorFailure
        - binderTimingFailure
        - binderTurnedOff
        - binderTurnedOn
        - binderUnderTemperature
        - binderUnrecoverableFailure
        - binderUnrecoverableStorageError
        - binderWarmingUp
        - cameraFailure
        - chamberCooling
        - chamberFailure
        - chamberHeating
        - chamberTemperatureHigh
        - chamberTemperatureLow
        - cleanerLifeAlmostOver
        - cleanerLifeOver
        - configurationChange
        - deactivated
        - deleted
        - dieCutterAdded
        - dieCutterAlmostEmpty
        - dieCutterAlmostFull
        - dieCutterAtLimit
        - dieCutterClosed
        - dieCutterConfigurationChange
        - dieCutterCoverClosed
        - dieCutterCoverOpen
        - dieCutterEmpty
        - dieCutterFull
        - dieCutterInterlockClosed
        - dieCutterInterlockOpen
        - dieCutterJam
        - dieCutterLifeAlmostOver
        - dieCutterLifeOver
        - dieCutterMemoryExhausted
        - dieCutterMissing
        - dieCutterMotorFailure
        - dieCutterNearLimit
        - dieCutterOffline
        - dieCutterOpened
        - dieCutterOverTemperature
        - dieCutterPowerSaver
        - dieCutterRecoverableFailure
        - dieCutterRecoverableStorage
        - dieCutterRemoved
        - dieCutterResourceAdded
        - dieCutterResourceRemoved
        - dieCutterThermistorFailure
        - dieCutterTimingFailure
        - dieCutterTurnedOff
        - dieCutterTurnedOn
        - dieCutterUnderTemperature
        - dieCutterUnrecoverableFailure
        - dieCutterUnrecoverableStorageError
        - dieCutterWarmingUp
        - extruderCooling
        - extruderFailure
        - extruderHeating
        - extruderJam
        - extruderTemperatureHigh
        - extruderTemperatureLow
        - fanFailure
        - faxModemLifeAlmostOver
        - faxModemLifeOver
        - faxModemMissing
        - faxModemTurnedOff
        - faxModemTurnedOn
        - folderAdded
        - folderAlmostEmpty
        - folderAlmostFull
        - folderAtLimit
        - folderClosed
        - folderConfigurationChange
        - folderCoverClosed
        - folderCoverOpen
        - folderEmpty
        - folderFull
        - folderInterlockClosed
        - folderInterlockOpen
        - folderJam
        - folderLifeAlmostOver
        - folderLifeOver
        - folderMemoryExhausted
        - folderMissing
        - folderMotorFailure
        - folderNearLimit
        - folderOffline
        - folderOpened
        - folderOverTemperature
        - folderPowerSaver
        - folderRecoverableFailure
        - folderRecoverableStorage
        - folderRemoved
        - folderResourceAdded
        - folderResourceRemoved
        - folderThermistorFailure
        - folderTimingFailure
        - folderTurnedOff
        - folderTurnedOn
        - folderUnderTemperature
        - folderUnrecoverableFailure
        - folderUnrecoverableStorageError
        - folderWarmingUp
        - hibernate
        - holdNewJobs
        - identifyPrinterRequested
        - imprinterAdded
        - imprinterAlmostEmpty
        - imprinterAlmostFull
        - imprinterAtLimit
        - imprinterClosed
        - imprinterConfigurationChange
        - imprinterCoverClosed
        - imprinterCoverOpen
        - imprinterEmpty
        - imprinterFull
        - imprinterInterlockClosed
        - imprinterInterlockOpen
        - imprinterJam
        - imprinterLifeAlmostOver
        - imprinterLifeOver
        - imprinterMemoryExhausted
        - imprinterMissing
        - imprinterMotorFailure
        - imprinterNearLimit
        - imprinterOffline
        - imprinterOpened
        - imprinterOverTemperature
        - imprinterPowerSaver
        - imprinterRecoverableFailure
        - imprinterRecoverableStorage
        - imprinterRemoved
        - imprinterResourceAdded
        - imprinterResourceRemoved
        - imprinterThermistorFailure
        - imprinterTimingFailure
        - imprinterTurnedOff
        - imprinterTurnedOn
        - imprinterUnderTemperature
        - imprinterUnrecoverableFailure
        - imprinterUnrecoverableStorageError
        - imprinterWarmingUp
        - inputCannotFeedSizeSelected
        - inputManualInputRequest
        - inputMediaColorChange
        - inputMediaFormPartsChange
        - inputMediaSizeChange
        - inputMediaTrayFailure
        - inputMediaTrayFeedError
        - inputMediaTrayJam
        - inputMediaTypeChange
        - inputMediaWeightChange
        - inputPickRollerFailure
        - inputPickRollerLifeOver
        - inputPickRollerLifeWarn
        - inputPickRollerMissing
        - inputTrayElevationFailure
        - inputTrayPositionFailure
        - inserterAdded
        - inserterAlmostEmpty
        - inserterAlmostFull
        - inserterAtLimit
        - inserterClosed
        - inserterConfigurationChange
        - inserterCoverClosed
        - inserterCoverOpen
        - inserterEmpty
        - inserterFull
        - inserterInterlockClosed
        - inserterInterlockOpen
        - inserterJam
        - inserterLifeAlmostOver
        - inserterLifeOver
        - inserterMemoryExhausted
        - inserterMissing
        - inserterMotorFailure
        - inserterNearLimit
        - inserterOffline
        - inserterOpened
        - inserterOverTemperature
        - inserterPowerSaver
        - inserterRecoverableFailure
        - inserterRecoverableStorage
        - inserterRemoved
        - inserterResourceAdded
        - inserterResourceRemoved
        - inserterThermistorFailure
        - inserterTimingFailure
        - inserterTurnedOff
        - inserterTurnedOn
        - inserterUnderTemperature
        - inserterUnrecoverableFailure
        - inserterUnrecoverableStorageError
        - inserterWarmingUp
        - interlockClosed
        - interpreterCartridgeAdded
        - interpreterCartridgeDeleted
        - interpreterComplexPageEncountered
        - interpreterMemoryDecrease
        - interpreterMemoryIncrease
        - interpreterResourceAdded
        - interpreterResourceDeleted
        - lampAtEol
        - lampFailure
        - lampNearEol
        - laserAtEol
        - laserFailure
        - laserNearEol
        - makeEnvelopeAdded
        - makeEnvelopeAlmostEmpty
        - makeEnvelopeAlmostFull
        - makeEnvelopeAtLimit
        - makeEnvelopeClosed
        - makeEnvelopeConfigurationChange
        - makeEnvelopeCoverClosed
        - makeEnvelopeCoverOpen
        - makeEnvelopeEmpty
        - makeEnvelopeFull
        - makeEnvelopeInterlockClosed
        - makeEnvelopeInterlockOpen
        - makeEnvelopeJam
        - makeEnvelopeLifeAlmostOver
        - makeEnvelopeLifeOver
        - makeEnvelopeMemoryExhausted
        - makeEnvelopeMissing
        - makeEnvelopeMotorFailure
        - makeEnvelopeNearLimit
        - makeEnvelopeOffline
        - makeEnvelopeOpened
        - makeEnvelopeOverTemperature
        - makeEnvelopePowerSaver
        - makeEnvelopeRecoverableFailure
        - makeEnvelopeRecoverableStorage
        - makeEnvelopeRemoved
        - makeEnvelopeResourceAdded
        - makeEnvelopeResourceRemoved
        - makeEnvelopeThermistorFailure
        - makeEnvelopeTimingFailure
        - makeEnvelopeTurnedOff
        - makeEnvelopeTurnedOn
        - makeEnvelopeUnderTemperature
        - makeEnvelopeUnrecoverableFailure
        - makeEnvelopeUnrecoverableStorageError
        - makeEnvelopeWarmingUp
        - markerAdjustingPrintQuality
        - markerCleanerMissing
        - markerDeveloperAlmostEmpty
        - markerDeveloperEmpty
        - markerDeveloperMissing
        - markerFuserMissing
        - markerFuserThermistorFailure
        - markerFuserTimingFailure
        - markerInkAlmostEmpty
        - markerInkEmpty
        - markerInkMissing
        - markerOpcMissing
        - markerPrintRibbonAlmostEmpty
        - markerPrintRibbonEmpty
        - markerPrintRibbonMissing
        - markerSupplyAlmostEmpty
        - markerSupplyMissing
        - markerTonerCartridgeMissing
        - markerTonerMissing
        - markerWasteInkReceptacleAlmostFull
        - markerWasteInkReceptacleFull
        - markerWasteInkReceptacleMissing
        - markerWasteMissing
        - markerWasteTonerReceptacleAlmostFull
        - markerWasteTonerReceptacleFull
        - markerWasteTonerReceptacleMissing
        - materialEmpty
        - materialLow
        - materialNeeded
        - mediaDrying
        - mediaPathCannotDuplexMediaSelected
        - mediaPathFailure
        - mediaPathInputEmpty
        - mediaPathInputFeedError
        - mediaPathInputJam
        - mediaPathInputRequest
        - mediaPathJam
        - mediaPathMediaTrayAlmostFull
        - mediaPathMediaTrayFull
        - mediaPathMediaTrayMissing
        - mediaPathOutputFeedError
        - mediaPathOutputFull
        - mediaPathOutputJam
        - mediaPathPickRollerFailure
        - mediaPathPickRollerLifeOver
        - mediaPathPickRollerLifeWarn
        - mediaPathPickRollerMissing
        - motorFailure
        - outputMailboxSelectFailure
        - outputMediaTrayFailure
        - outputMediaTrayFeedError
        - outputMediaTrayJam
        - perforaterAdded
        - perforaterAlmostEmpty
        - perforaterAlmostFull
        - perforaterAtLimit
        - perforaterClosed
        - perforaterConfigurationChange
        - perforaterCoverClosed
        - perforaterCoverOpen
        - perforaterEmpty
        - perforaterFull
        - perforaterInterlockClosed
        - perforaterInterlockOpen
        - perforaterJam
        - perforaterLifeAlmostOver
        - perforaterLifeOver
        - perforaterMemoryExhausted
        - perforaterMissing
        - perforaterMotorFailure
        - perforaterNearLimit
        - perforaterOffline
        - perforaterOpened
        - perforaterOverTemperature
        - perforaterPowerSaver
        - perforaterRecoverableFailure
        - perforaterRecoverableStorage
        - perforaterRemoved
        - perforaterResourceAdded
        - perforaterResourceRemoved
        - perforaterThermistorFailure
        - perforaterTimingFailure
        - perforaterTurnedOff
        - perforaterTurnedOn
        - perforaterUnderTemperature
        - perforaterUnrecoverableFailure
        - perforaterUnrecoverableStorageError
        - perforaterWarmingUp
        - platformCooling
        - platformFailure
        - platformHeating
        - platformTemperatureHigh
        - platformTemperatureLow
        - powerDown
        - powerUp
        - printerManualReset
        - printerNmsReset
        - printerReadyToPrint
        - puncherAdded
        - puncherAlmostEmpty
        - puncherAlmostFull
        - puncherAtLimit
        - puncherClosed
        - puncherConfigurationChange
        - puncherCoverClosed
        - puncherCoverOpen
        - puncherEmpty
        - puncherFull
        - puncherInterlockClosed
        - puncherInterlockOpen
        - puncherJam
        - puncherLifeAlmostOver
        - puncherLifeOver
        - puncherMemoryExhausted
        - puncherMissing
        - puncherMotorFailure
        - puncherNearLimit
        - puncherOffline
        - puncherOpened
        - puncherOverTemperature
        - puncherPowerSaver
        - puncherRecoverableFailure
        - puncherRecoverableStorage
        - puncherRemoved
        - puncherResourceAdded
        - puncherResourceRemoved
        - puncherThermistorFailure
        - puncherTimingFailure
        - puncherTurnedOff
        - puncherTurnedOn
        - puncherUnderTemperature
        - puncherUnrecoverableFailure
        - puncherUnrecoverableStorageError
        - puncherWarmingUp
        - resuming
        - scanMediaPathFailure
        - scanMediaPathInputEmpty
        - scanMediaPathInputFeedError
        - scanMediaPathInputJam
        - scanMediaPathInputRequest
        - scanMediaPathJam
        - scanMediaPathOutputFeedError
        - scanMediaPathOutputFull
        - scanMediaPathOutputJam
        - scanMediaPathPickRollerFailure
        - scanMediaPathPickRollerLifeOver
        - scanMediaPathPickRollerLifeWarn
        - scanMediaPathPickRollerMissing
        - scanMediaPathTrayAlmostFull
        - scanMediaPathTrayFull
        - scanMediaPathTrayMissing
        - scannerLightFailure
        - scannerLightLifeAlmostOver
        - scannerLightLifeOver
        - scannerLightMissing
        - scannerSensorFailure
        - scannerSensorLifeAlmostOver
        - scannerSensorLifeOver
        - scannerSensorMissing
        - separationCutterAdded
        - separationCutterAlmostEmpty
        - separationCutterAlmostFull
        - separationCutterAtLimit
        - separationCutterClosed
        - separationCutterConfigurationChange
        - separationCutterCoverClosed
        - separationCutterCoverOpen
        - separationCutterEmpty
        - separationCutterFull
        - separationCutterInterlockClosed
        - separationCutterInterlockOpen
        - separationCutterJam
        - separationCutterLifeAlmostOver
        - separationCutterLifeOver
        - separationCutterMemoryExhausted
        - separationCutterMissing
        - separationCutterMotorFailure
        - separationCutterNearLimit
        - separationCutterOffline
        - separationCutterOpened
        - separationCutterOverTemperature
        - separationCutterPowerSaver
        - separationCutterRecoverableFailure
        - separationCutterRecoverableStorage
        - separationCutterRemoved
        - separationCutterResourceAdded
        - separationCutterResourceRemoved
        - separationCutterThermistorFailure
        - separationCutterTimingFailure
        - separationCutterTurnedOff
        - separationCutterTurnedOn
        - separationCutterUnderTemperature
        - separationCutterUnrecoverableFailure
        - separationCutterUnrecoverableStorageError
        - separationCutterWarmingUp
        - sheetRotatorAdded
        - sheetRotatorAlmostEmpty
        - sheetRotatorAlmostFull
        - sheetRotatorAtLimit
        - sheetRotatorClosed
        - sheetRotatorConfigurationChange
        - sheetRotatorCoverClosed
        - sheetRotatorCoverOpen
        - sheetRotatorEmpty
        - sheetRotatorFull
        - sheetRotatorInterlockClosed
        - sheetRotatorInterlockOpen
        - sheetRotatorJam
        - sheetRotatorLifeAlmostOver
        - sheetRotatorLifeOver
        - sheetRotatorMemoryExhausted
        - sheetRotatorMissing
        - sheetRotatorMotorFailure
        - sheetRotatorNearLimit
        - sheetRotatorOffline
        - sheetRotatorOpened
        - sheetRotatorOverTemperature
        - sheetRotatorPowerSaver
        - sheetRotatorRecoverableFailure
        - sheetRotatorRecoverableStorage
        - sheetRotatorRemoved
        - sheetRotatorResourceAdded
        - sheetRotatorResourceRemoved
        - sheetRotatorThermistorFailure
        - sheetRotatorTimingFailure
        - sheetRotatorTurnedOff
        - sheetRotatorTurnedOn
        - sheetRotatorUnderTemperature
        - sheetRotatorUnrecoverableFailure
        - sheetRotatorUnrecoverableStorageError
        - sheetRotatorWarmingUp
        - slitterAdded
        - slitterAlmostEmpty
        - slitterAlmostFull
        - slitterAtLimit
        - slitterClosed
        - slitterConfigurationChange
        - slitterCoverClosed
        - slitterCoverOpen
        - slitterEmpty
        - slitterFull
        - slitterInterlockClosed
        - slitterInterlockOpen
        - slitterJam
        - slitterLifeAlmostOver
        - slitterLifeOver
        - slitterMemoryExhausted
        - slitterMissing
        - slitterMotorFailure
        - slitterNearLimit
        - slitterOffline
        - slitterOpened
        - slitterOverTemperature
        - slitterPowerSaver
        - slitterRecoverableFailure
        - slitterRecoverableStorage
        - slitterRemoved
        - slitterResourceAdded
        - slitterResourceRemoved
        - slitterThermistorFailure
        - slitterTimingFailure
        - slitterTurnedOff
        - slitterTurnedOn
        - slitterUnderTemperature
        - slitterUnrecoverableFailure
        - slitterUnrecoverableStorageError
        - slitterWarmingUp
        - stackerAdded
        - stackerAlmostEmpty
        - stackerAlmostFull
        - stackerAtLimit
        - stackerClosed
        - stackerConfigurationChange
        - stackerCoverClosed
        - stackerCoverOpen
        - stackerEmpty
        - stackerFull
        - stackerInterlockClosed
        - stackerInterlockOpen
        - stackerJam
        - stackerLifeAlmostOver
        - stackerLifeOver
        - stackerMemoryExhausted
        - stackerMissing
        - stackerMotorFailure
        - stackerNearLimit
        - stackerOffline
        - stackerOpened
        - stackerOverTemperature
        - stackerPowerSaver
        - stackerRecoverableFailure
        - stackerRecoverableStorage
        - stackerRemoved
        - stackerResourceAdded
        - stackerResourceRemoved
        - stackerThermistorFailure
        - stackerTimingFailure
        - stackerTurnedOff
        - stackerTurnedOn
        - stackerUnderTemperature
        - stackerUnrecoverableFailure
        - stackerUnrecoverableStorageError
        - stackerWarmingUp
        - standby
        - staplerAdded
        - staplerAlmostEmpty
        - staplerAlmostFull
        - staplerAtLimit
        - staplerClosed
        - staplerConfigurationChange
        - staplerCoverClosed
        - staplerCoverOpen
        - staplerEmpty
        - staplerFull
        - staplerInterlockClosed
        - staplerInterlockOpen
        - staplerJam
        - staplerLifeAlmostOver
        - staplerLifeOver
        - staplerMemoryExhausted
        - staplerMissing
        - staplerMotorFailure
        - staplerNearLimit
        - staplerOffline
        - staplerOpened
        - staplerOverTemperature
        - staplerPowerSaver
        - staplerRecoverableFailure
        - staplerRecoverableStorage
        - staplerRemoved
        - staplerResourceAdded
        - staplerResourceRemoved
        - staplerThermistorFailure
        - staplerTimingFailure
        - staplerTurnedOff
        - staplerTurnedOn
        - staplerUnderTemperature
        - staplerUnrecoverableFailure
        - staplerUnrecoverableStorageError
        - staplerWarmingUp
        - stitcherAdded
        - stitcherAlmostEmpty
        - stitcherAlmostFull
        - stitcherAtLimit
        - stitcherClosed
        - stitcherConfigurationChange
        - stitcherCoverClosed
        - stitcherCoverOpen
        - stitcherEmpty
        - stitcherFull
        - stitcherInterlockClosed
        - stitcherInterlockOpen
        - stitcherJam
        - stitcherLifeAlmostOver
        - stitcherLifeOver
        - stitcherMemoryExhausted
        - stitcherMissing
        - stitcherMotorFailure
        - stitcherNearLimit
        - stitcherOffline
        - stitcherOpened
        - stitcherOverTemperature
        - stitcherPowerSaver
        - stitcherRecoverableFailure
        - stitcherRecoverableStorage
        - stitcherRemoved
        - stitcherResourceAdded
        - stitcherResourceRemoved
        - stitcherThermistorFailure
        - stitcherTimingFailure
        - stitcherTurnedOff
        - stitcherTurnedOn
        - stitcherUnderTemperature
        - stitcherUnrecoverableFailure
        - stitcherUnrecoverableStorageError
        - stitcherWarmingUp
        - subunitAdded
        - subunitAlmostEmpty
        - subunitAlmostFull
        - subunitAtLimit
        - subunitClosed
        - subunitCoolingDown
        - subunitEmpty
        - subunitFull
        - subunitLifeAlmostOver
        - subunitLifeOver
        - subunitMemoryExhausted
        - subunitMissing
        - subunitMotorFailure
        - subunitNearLimit
        - subunitOffline
        - subunitOpened
        - subunitOverTemperature
        - subunitPowerSaver
        - subunitRecoverableFailure
        - subunitRecoverableStorage
        - subunitRemoved
        - subunitResourceAdded
        - subunitResourceRemoved
        - subunitThermistorFailure
        - subunitTimingFailure
        - subunitTurnedOff
        - subunitTurnedOn
        - subunitUnderTemperature
        - subunitUnrecoverableFailure
        - subunitUnrecoverableStorage
        - subunitWarmingUp
        - suspend
        - testing
        - trimmerAdded
        - trimmerAlmostEmpty
        - trimmerAlmostFull
        - trimmerAtLimit
        - trimmerClosed
        - trimmerConfigurationChange
        - trimmerCoverClosed
        - trimmerCoverOpen
        - trimmerEmpty
        - trimmerFull
        - trimmerInterlockClosed
        - trimmerInterlockOpen
        - trimmerJam
        - trimmerLifeAlmostOver
        - trimmerLifeOver
        - trimmerMemoryExhausted
        - trimmerMissing
        - trimmerMotorFailure
        - trimmerNearLimit
        - trimmerOffline
        - trimmerOpened
        - trimmerOverTemperature
        - trimmerPowerSaver
        - trimmerRecoverableFailure
        - trimmerRecoverableStorage
        - trimmerRemoved
        - trimmerResourceAdded
        - trimmerResourceRemoved
        - trimmerThermistorFailure
        - trimmerTimingFailure
        - trimmerTurnedOff
        - trimmerTurnedOn
        - trimmerUnderTemperature
        - trimmerUnrecoverableFailure
        - trimmerUnrecoverableStorageError
        - trimmerWarmingUp
        - unknown
        - wrapperAdded
        - wrapperAlmostEmpty
        - wrapperAlmostFull
        - wrapperAtLimit
        - wrapperClosed
        - wrapperConfigurationChange
        - wrapperCoverClosed
        - wrapperCoverOpen
        - wrapperEmpty
        - wrapperFull
        - wrapperInterlockClosed
        - wrapperInterlockOpen
        - wrapperJam
        - wrapperLifeAlmostOver
        - wrapperLifeOver
        - wrapperMemoryExhausted
        - wrapperMissing
        - wrapperMotorFailure
        - wrapperNearLimit
        - wrapperOffline
        - wrapperOpened
        - wrapperOverTemperature
        - wrapperPowerSaver
        - wrapperRecoverableFailure
        - wrapperRecoverableStorage
        - wrapperRemoved
        - wrapperResourceAdded
        - wrapperResourceRemoved
        - wrapperThermistorFailure
        - wrapperTimingFailure
        - wrapperTurnedOff
        - wrapperTurnedOn
        - wrapperUnderTemperature
        - wrapperUnrecoverableFailure
        - wrapperUnrecoverableStorageError
        - wrapperWarmingUp
      type: string
    microsoft.graph.printerProcessingState:
      title: printerProcessingState
      enum:
        - unknown
        - idle
        - processing
        - stopped
        - unknownFutureValue
      type: string
    microsoft.graph.printerProcessingStateReason:
      title: printerProcessingStateReason
      enum:
        - paused
        - mediaJam
        - mediaNeeded
        - mediaLow
        - mediaEmpty
        - coverOpen
        - interlockOpen
        - outputTrayMissing
        - outputAreaFull
        - markerSupplyLow
        - markerSupplyEmpty
        - inputTrayMissing
        - outputAreaAlmostFull
        - markerWasteAlmostFull
        - markerWasteFull
        - fuserOverTemp
        - fuserUnderTemp
        - other
        - none
        - movingToPaused
        - shutdown
        - connectingToDevice
        - timedOut
        - stopping
        - stoppedPartially
        - tonerLow
        - tonerEmpty
        - spoolAreaFull
        - doorOpen
        - opticalPhotoConductorNearEndOfLife
        - opticalPhotoConductorLifeOver
        - developerLow
        - developerEmpty
        - interpreterResourceUnavailable
        - unknownFutureValue
      type: string
    microsoft.graph.printJobConfiguration:
      title: printJobConfiguration
      type: object
      properties:
        collate:
          type: boolean
          description: Whether the printer should collate pages wehen printing multiple copies of a multi-page document.
          nullable: true
        colorMode:
          $ref: '#/components/schemas/microsoft.graph.printColorMode'
        copies:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The number of copies that should be printed. Read-only.
          format: int32
          nullable: true
        dpi:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: 'The resolution to use when printing the job, expressed in dots per inch (DPI). Read-only.'
          format: int32
          nullable: true
        duplexMode:
          $ref: '#/components/schemas/microsoft.graph.printDuplexMode'
        feedOrientation:
          $ref: '#/components/schemas/microsoft.graph.printerFeedOrientation'
        finishings:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printFinishing'
          description: Finishing processes to use when printing.
        fitPdfToPage:
          type: boolean
          nullable: true
        inputBin:
          type: string
          description: The input bin (tray) to use when printing. See the printer's capabilities for a list of supported input bins.
          nullable: true
        margin:
          $ref: '#/components/schemas/microsoft.graph.printMargin'
        mediaSize:
          type: string
          description: The media sizeto use when printing. Supports standard size names for ISO and ANSI media sizes. Valid values are listed in the printerCapabilities topic.
          nullable: true
        mediaType:
          type: string
          description: The default media (such as paper) type to print the document on.
          nullable: true
        multipageLayout:
          $ref: '#/components/schemas/microsoft.graph.printMultipageLayout'
        orientation:
          $ref: '#/components/schemas/microsoft.graph.printOrientation'
        outputBin:
          type: string
          description: The output bin to place completed prints into. See the printer's capabilities for a list of supported output bins.
          nullable: true
        pageRanges:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.integerRange'
          description: The page ranges to print. Read-only.
        pagesPerSheet:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The number of document pages to print on each sheet.
          format: int32
          nullable: true
        quality:
          $ref: '#/components/schemas/microsoft.graph.printQuality'
        scaling:
          $ref: '#/components/schemas/microsoft.graph.printScaling'
      additionalProperties:
        type: object
    microsoft.graph.printJobStatus:
      title: printJobStatus
      type: object
      properties:
        acquiredByPrinter:
          type: boolean
        description:
          type: string
          description: A human-readable description of the print job's current processing state. Read-only.
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printJobStateDetail'
          description: Additional details for print job state. Valid values are described in the following table. Read-only.
        isAcquiredByPrinter:
          type: boolean
          description: True if the job was acknowledged by a printer; false otherwise. Read-only.
        processingState:
          $ref: '#/components/schemas/microsoft.graph.printJobProcessingState'
        processingStateDescription:
          type: string
          nullable: true
        state:
          $ref: '#/components/schemas/microsoft.graph.printJobProcessingState'
      additionalProperties:
        type: object
    microsoft.graph.printDocument:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: printDocument
          type: object
          properties:
            configuration:
              $ref: '#/components/schemas/microsoft.graph.printerDocumentConfiguration'
            contentType:
              type: string
              description: The document's content (MIME) type. Read-only.
              nullable: true
            displayName:
              type: string
              description: The document's name. Read-only.
              nullable: true
            size:
              type: integer
              description: The document's size in bytes. Read-only.
              format: int64
          additionalProperties:
            type: object
    microsoft.graph.printTask:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: printTask
          type: object
          properties:
            parentUrl:
              type: string
              description: 'The URL for the print entity that triggered this task. For example, https://graph.microsoft.com/beta/print/printers/{printerId}/jobs/{jobId}. Read-only.'
            status:
              $ref: '#/components/schemas/microsoft.graph.printTaskStatus'
            definition:
              $ref: '#/components/schemas/microsoft.graph.printTaskDefinition'
            trigger:
              $ref: '#/components/schemas/microsoft.graph.printTaskTrigger'
          additionalProperties:
            type: object
    microsoft.graph.deviceHealth:
      title: deviceHealth
      type: object
      properties:
        lastConnectionTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The last time the device was connected.
          format: date-time
      additionalProperties:
        type: object
    microsoft.graph.printEvent:
      title: printEvent
      enum:
        - jobStarted
        - unknownFutureValue
      type: string
    microsoft.graph.printTaskDefinition:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: printTaskDefinition
          type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.appIdentity'
            displayName:
              type: string
              description: The name of the printTaskDefinition.
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.printTask'
              description: A list of tasks that have been created based on this definition. The list includes currently running tasks and recently completed tasks. Read-only.
          additionalProperties:
            type: object
    microsoft.graph.settingSourceType:
      title: settingSourceType
      enum:
        - deviceConfiguration
        - deviceIntent
      type: string
    microsoft.graph.securityBaselinePolicySourceType:
      title: securityBaselinePolicySourceType
      enum:
        - deviceConfiguration
        - deviceIntent
      type: string
      description: Authoring source of a policy
    microsoft.graph.insightIdentity:
      title: insightIdentity
      type: object
      properties:
        address:
          type: string
          description: The email address of the user who shared the item.
          nullable: true
        displayName:
          type: string
          description: The display name of the user who shared the item.
          nullable: true
        id:
          type: string
          description: The id of the user who shared the item.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.teamworkConversationIdentity:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.identity'
        - title: teamworkConversationIdentity
          type: object
          properties:
            conversationIdentityType:
              $ref: '#/components/schemas/microsoft.graph.teamworkConversationIdentityType'
          additionalProperties:
            type: object
    microsoft.graph.teamworkTagIdentity:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.identity'
        - title: teamworkTagIdentity
          type: object
          additionalProperties:
            type: object
    microsoft.graph.scheduleChangeRequestActor:
      title: scheduleChangeRequestActor
      enum:
        - sender
        - recipient
        - manager
        - system
        - unknownFutureValue
      type: string
    microsoft.graph.scheduleChangeState:
      title: scheduleChangeState
      enum:
        - pending
        - approved
        - declined
        - unknownFutureValue
      type: string
    microsoft.graph.scheduleEntity:
      title: scheduleEntity
      type: object
      properties:
        endDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        startDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        theme:
          $ref: '#/components/schemas/microsoft.graph.scheduleEntityTheme'
      additionalProperties:
        type: object
    microsoft.graph.shiftActivity:
      title: shiftActivity
      type: object
      properties:
        code:
          type: string
          description: Customer defined code for the shiftActivity. Required.
          nullable: true
        displayName:
          type: string
          description: The name of the shiftActivity. Required.
          nullable: true
        endDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The end date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.'
          format: date-time
          nullable: true
        isPaid:
          type: boolean
          description: Indicates whether the microsoft.graph.user should be paid for the activity during their shift. Required.
          nullable: true
        startDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The start date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.'
          format: date-time
          nullable: true
        theme:
          $ref: '#/components/schemas/microsoft.graph.scheduleEntityTheme'
      additionalProperties:
        type: object
    microsoft.graph.workbookChartAxisFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartAxisFormat
          type: object
          properties:
            font:
              $ref: '#/components/schemas/microsoft.graph.workbookChartFont'
            line:
              $ref: '#/components/schemas/microsoft.graph.workbookChartLineFormat'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartGridlines:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartGridlines
          type: object
          properties:
            visible:
              type: boolean
              description: Boolean value representing if the axis gridlines are visible or not.
            format:
              $ref: '#/components/schemas/microsoft.graph.workbookChartGridlinesFormat'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartAxisTitle:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartAxisTitle
          type: object
          properties:
            text:
              type: string
              description: Represents the axis title.
              nullable: true
            visible:
              type: boolean
              description: A boolean that specifies the visibility of an axis title.
            format:
              $ref: '#/components/schemas/microsoft.graph.workbookChartAxisTitleFormat'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartLineFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartLineFormat
          type: object
          properties:
            color:
              type: string
              description: HTML color code representing the color of lines in the chart.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.workbookChartPointFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartPointFormat
          type: object
          properties:
            fill:
              $ref: '#/components/schemas/microsoft.graph.workbookChartFill'
          additionalProperties:
            type: object
    microsoft.graph.printMargin:
      title: printMargin
      type: object
      properties:
        bottom:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The margin in microns from the bottom edge.
          format: int32
          nullable: true
        left:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The margin in microns from the left edge.
          format: int32
          nullable: true
        right:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The margin in microns from the right edge.
          format: int32
          nullable: true
        top:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: The margin in microns from the top edge.
          format: int32
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.printJobStateDetail:
      title: printJobStateDetail
      enum:
        - uploadPending
        - transforming
        - completedSuccessfully
        - completedWithWarnings
        - completedWithErrors
        - releaseWait
        - interpreting
        - unknownFutureValue
      type: string
    microsoft.graph.printJobProcessingState:
      title: printJobProcessingState
      enum:
        - unknown
        - pending
        - processing
        - paused
        - stopped
        - completed
        - canceled
        - aborted
      type: string
    microsoft.graph.printerDocumentConfiguration:
      title: printerDocumentConfiguration
      type: object
      properties:
        collate:
          type: boolean
          nullable: true
        colorMode:
          $ref: '#/components/schemas/microsoft.graph.printColorMode'
        copies:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          format: int32
          nullable: true
        dpi:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          format: int32
          nullable: true
        duplexMode:
          $ref: '#/components/schemas/microsoft.graph.printDuplexMode'
        feedDirection:
          $ref: '#/components/schemas/microsoft.graph.printerFeedDirection'
        feedOrientation:
          $ref: '#/components/schemas/microsoft.graph.printerFeedOrientation'
        finishings:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.printFinishing'
        fitPdfToPage:
          type: boolean
          nullable: true
        inputBin:
          type: string
          nullable: true
        margin:
          $ref: '#/components/schemas/microsoft.graph.printMargin'
        mediaSize:
          type: string
          nullable: true
        mediaType:
          type: string
          nullable: true
        multipageLayout:
          $ref: '#/components/schemas/microsoft.graph.printMultipageLayout'
        orientation:
          $ref: '#/components/schemas/microsoft.graph.printOrientation'
        outputBin:
          type: string
          nullable: true
        pageRanges:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.integerRange'
        pagesPerSheet:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          format: int32
          nullable: true
        quality:
          $ref: '#/components/schemas/microsoft.graph.printQuality'
        scaling:
          $ref: '#/components/schemas/microsoft.graph.printScaling'
      additionalProperties:
        type: object
    microsoft.graph.printTaskStatus:
      title: printTaskStatus
      type: object
      properties:
        description:
          type: string
          description: A human-readable description of the current processing state of the printTask.
        state:
          $ref: '#/components/schemas/microsoft.graph.printTaskProcessingState'
      additionalProperties:
        type: object
    microsoft.graph.appIdentity:
      title: appIdentity
      type: object
      properties:
        appId:
          type: string
          description: Refers to the unique identifier representing Application Id in the Azure Active Directory.
          nullable: true
        displayName:
          type: string
          description: Refers to the Application Name displayed in the Azure Portal.
          nullable: true
        servicePrincipalId:
          type: string
          description: Refers to the unique identifier indicating Service Principal Id in Azure Active Directory for the corresponding App.
          nullable: true
        servicePrincipalName:
          type: string
          description: Refers to the Service Principal Name is the Application name in the tenant.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.teamworkConversationIdentityType:
      title: teamworkConversationIdentityType
      enum:
        - team
        - channel
        - chat
        - unknownFutureValue
      type: string
    microsoft.graph.scheduleEntityTheme:
      title: scheduleEntityTheme
      enum:
        - white
        - blue
        - green
        - purple
        - pink
        - yellow
        - gray
        - darkBlue
        - darkGreen
        - darkPurple
        - darkPink
        - darkYellow
        - unknownFutureValue
      type: string
    microsoft.graph.workbookChartGridlinesFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartGridlinesFormat
          type: object
          properties:
            line:
              $ref: '#/components/schemas/microsoft.graph.workbookChartLineFormat'
          additionalProperties:
            type: object
    microsoft.graph.workbookChartAxisTitleFormat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: workbookChartAxisTitleFormat
          type: object
          properties:
            font:
              $ref: '#/components/schemas/microsoft.graph.workbookChartFont'
          additionalProperties:
            type: object
    microsoft.graph.printTaskProcessingState:
      title: printTaskProcessingState
      enum:
        - pending
        - processing
        - completed
        - aborted
        - unknownFutureValue
      type: string
  responses:
    microsoft.graph.siteCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.siteCollectionResponse'
    error:
      description: error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.ODataErrors.ODataError'
    microsoft.graph.columnDefinitionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.columnDefinitionCollectionResponse'
    microsoft.graph.contentTypeCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.contentTypeCollectionResponse'
    microsoft.graph.columnLinkCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.columnLinkCollectionResponse'
    microsoft.graph.driveCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.driveCollectionResponse'
    microsoft.graph.baseItemCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.baseItemCollectionResponse'
    microsoft.graph.listCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.listCollectionResponse'
    microsoft.graph.itemActivityOLDCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.itemActivityOLDCollectionResponse'
    microsoft.graph.listItemCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.listItemCollectionResponse'
    microsoft.graph.documentSetVersionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.documentSetVersionCollectionResponse'
    microsoft.graph.listItemVersionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.listItemVersionCollectionResponse'
    microsoft.graph.richLongRunningOperationCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.richLongRunningOperationCollectionResponse'
    microsoft.graph.subscriptionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.subscriptionCollectionResponse'
    microsoft.graph.notebookCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.notebookCollectionResponse'
    microsoft.graph.sectionGroupCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.sectionGroupCollectionResponse'
    microsoft.graph.onenoteSectionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.onenoteSectionCollectionResponse'
    microsoft.graph.onenotePageCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.onenotePageCollectionResponse'
    microsoft.graph.onenoteOperationCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.onenoteOperationCollectionResponse'
    microsoft.graph.onenoteResourceCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.onenoteResourceCollectionResponse'
    microsoft.graph.sitePageCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.sitePageCollectionResponse'
    microsoft.graph.permissionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.permissionCollectionResponse'
    microsoft.graph.termStore.groupCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.termStore.groupCollectionResponse'
    microsoft.graph.termStore.setCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.termStore.setCollectionResponse'
    microsoft.graph.termStore.termCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.termStore.termCollectionResponse'
    microsoft.graph.termStore.relationCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.termStore.relationCollectionResponse'
  parameters:
    top:
      name: $top
      in: query
      description: Show only the first n items
      schema:
        minimum: 0
        type: integer
      example: 50
    skip:
      name: $skip
      in: query
      description: Skip the first n items
      schema:
        minimum: 0
        type: integer
    search:
      name: $search
      in: query
      description: Search items by search phrases
      schema:
        type: string
    filter:
      name: $filter
      in: query
      description: Filter items by property values
      schema:
        type: string
    count:
      name: $count
      in: query
      description: Include count of items
      schema:
        type: boolean
  securitySchemes:
    azureaadv2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
          tokenUrl: https://login.microsoftonline.com/common/oauth2/v2.0/token
          scopes: { }
security:
  - azureaadv2: [ ]
