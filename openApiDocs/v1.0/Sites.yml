openapi: 3.0.1
info:
  title: Sites
  version: v1.0
servers:
  - url: https://graph.microsoft.com/v1.0/
    description: Core
paths:
  '/groups/{group-id}/sites':
    get:
      tags:
        - groups.site
      summary: Get sites from groups
      description: The list of SharePoint sites in this group. Access the default site with /sites/root.
      operationId: groups_ListSites
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - displayName
                - displayName desc
                - error
                - error desc
                - root
                - root desc
                - sharepointIds
                - sharepointIds desc
                - siteCollection
                - siteCollection desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - error
                - root
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.siteCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sites for groups
      operationId: groups_CreateSites
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.site'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}':
    get:
      tags:
        - groups.site
      summary: Get sites from groups
      description: The list of SharePoint sites in this group. Access the default site with /sites/root.
      operationId: groups_GetSites
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - error
                - root
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
          links:
            createdByUser:
              operationId: groups.Sites.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            lastModifiedByUser:
              operationId: groups.Sites.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            analytics:
              operationId: groups.Sites.GetAnalytics
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            columns:
              operationId: groups.Sites.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            contentTypes:
              operationId: groups.Sites.ListContentTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            drive:
              operationId: groups.Sites.GetDrive
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            drives:
              operationId: groups.Sites.ListDrives
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            externalColumns:
              operationId: groups.Sites.ListExternalColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            items:
              operationId: groups.Sites.ListItems
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            lists:
              operationId: groups.Sites.ListLists
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            operations:
              operationId: groups.Sites.ListOperations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            permissions:
              operationId: groups.Sites.ListPermissions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            sites:
              operationId: groups.Sites.ListSites
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            termStore:
              operationId: groups.Sites.GetTermStore
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            termStores:
              operationId: groups.Sites.ListTermStores
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            onenote:
              operationId: groups.Sites.GetOnenote
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            getActivitiesByInterval:
              operationId: groups.group.sites.site.getActivitiesGraphBPreInterval
            getApplicableContentTypesForList:
              operationId: groups.group.sites.site.getApplicableContentTypesGraphFPreList
            getByPath:
              operationId: groups.group.sites.site.getGraphBPrePath
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sites in groups
      operationId: groups_UpdateSites
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.site'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/analytics':
    get:
      tags:
        - groups.site
      summary: Get analytics from groups
      description: Analytics about the view activities that took place in this site.
      operationId: groups.sites_GetAnalytics
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
          links:
            allTime:
              operationId: groups.sites.Analytics.GetAllTime
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            itemActivityStats:
              operationId: groups.sites.Analytics.ListItemActivityStats
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            lastSevenDays:
              operationId: groups.sites.Analytics.GetLastSevenDays
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/columns':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      description: The collection of column definitions reusable across lists under this site.
      operationId: groups.sites_ListColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to columns for groups
      operationId: groups.sites_CreateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      description: The collection of column definitions reusable across lists under this site.
      operationId: groups.sites_GetColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.Columns.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property columns in groups
      operationId: groups.sites_UpdateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property columns for groups
      operationId: groups.sites_DeleteColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - groups.site
      summary: Get sourceColumn from groups
      description: The source column for the content type column.
      operationId: groups.sites.columns_GetSourceColumn
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.columns.SourceColumn.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes':
    get:
      tags:
        - groups.site
      summary: Get contentTypes from groups
      description: The collection of content types defined for this site.
      operationId: groups.sites_ListContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to contentTypes for groups
      operationId: groups.sites_CreateContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}':
    get:
      tags:
        - groups.site
      summary: Get contentTypes from groups
      description: The collection of content types defined for this site.
      operationId: groups.sites_GetContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: groups.sites.ContentTypes.GetBase
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: groups.sites.ContentTypes.ListBaseTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: groups.sites.ContentTypes.ListColumnLinks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: groups.sites.ContentTypes.ListColumnPositions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: groups.sites.ContentTypes.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            associateWithHubSites:
              operationId: groups.group.sites.site.contentTypes.contentType.associateGraphWPreHubSites
            copyToDefaultContentLocation:
              operationId: groups.group.sites.site.contentTypes.contentType.copyToDefaultContentLocation
            isPublished:
              operationId: groups.group.sites.site.contentTypes.contentType.isPublished
            publish:
              operationId: groups.group.sites.site.contentTypes.contentType.publish
            unpublish:
              operationId: groups.group.sites.site.contentTypes.contentType.unpublish
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property contentTypes in groups
      operationId: groups.sites_UpdateContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property contentTypes for groups
      operationId: groups.sites_DeleteContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/base':
    get:
      tags:
        - groups.site
      summary: Get base from groups
      description: Parent contentType from which this content type is derived.
      operationId: groups.sites.contentTypes_GetBase
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: groups.sites.contentTypes.Base.GetBase
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: groups.sites.contentTypes.Base.ListBaseTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: groups.sites.contentTypes.Base.ListColumnLinks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: groups.sites.contentTypes.Base.ListColumnPositions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: groups.sites.contentTypes.Base.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/baseTypes':
    get:
      tags:
        - groups.site
      summary: Get baseTypes from groups
      description: The collection of content types that are ancestors of this content type.
      operationId: groups.sites.contentTypes_ListBaseTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/baseTypes/{contentType-id1}':
    get:
      tags:
        - groups.site
      summary: Get baseTypes from groups
      description: The collection of content types that are ancestors of this content type.
      operationId: groups.sites.contentTypes_GetBaseTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: contentType-id1
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: groups.sites.contentTypes.BaseTypes.GetBase
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            baseTypes:
              operationId: groups.sites.contentTypes.BaseTypes.ListBaseTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnLinks:
              operationId: groups.sites.contentTypes.BaseTypes.ListColumnLinks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnPositions:
              operationId: groups.sites.contentTypes.BaseTypes.ListColumnPositions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columns:
              operationId: groups.sites.contentTypes.BaseTypes.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columnLinks':
    get:
      tags:
        - groups.site
      summary: Get columnLinks from groups
      description: The collection of columns that are required by this content type.
      operationId: groups.sites.contentTypes_ListColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - name
                - name desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnLinkCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to columnLinks for groups
      operationId: groups.sites.contentTypes_CreateColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columnLinks/{columnLink-id}':
    get:
      tags:
        - groups.site
      summary: Get columnLinks from groups
      description: The collection of columns that are required by this content type.
      operationId: groups.sites.contentTypes_GetColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property columnLinks in groups
      operationId: groups.sites.contentTypes_UpdateColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property columnLinks for groups
      operationId: groups.sites.contentTypes_DeleteColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columnPositions':
    get:
      tags:
        - groups.site
      summary: Get columnPositions from groups
      description: Column order information in a content type.
      operationId: groups.sites.contentTypes_ListColumnPositions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columnPositions/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get columnPositions from groups
      description: Column order information in a content type.
      operationId: groups.sites.contentTypes_GetColumnPositions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.contentTypes.ColumnPositions.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columns':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      description: The collection of column definitions for this contentType.
      operationId: groups.sites.contentTypes_ListColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to columns for groups
      operationId: groups.sites.contentTypes_CreateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      description: The collection of column definitions for this contentType.
      operationId: groups.sites.contentTypes_GetColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.contentTypes.Columns.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property columns in groups
      operationId: groups.sites.contentTypes_UpdateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property columns for groups
      operationId: groups.sites.contentTypes_DeleteColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - groups.site
      summary: Get sourceColumn from groups
      description: The source column for the content type column.
      operationId: groups.sites.contentTypes.columns_GetSourceColumn
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.contentTypes.columns.SourceColumn.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/drive':
    get:
      tags:
        - groups.site
      summary: Get drive from groups
      description: The default drive (document library) for this site.
      operationId: groups.sites_GetDrive
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.drive'
          links:
            createdByUser:
              operationId: groups.sites.Drive.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            lastModifiedByUser:
              operationId: groups.sites.Drive.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            bundles:
              operationId: groups.sites.Drive.ListBundles
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            following:
              operationId: groups.sites.Drive.ListFollowing
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            items:
              operationId: groups.sites.Drive.ListItems
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            list:
              operationId: groups.sites.Drive.GetList
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            root:
              operationId: groups.sites.Drive.GetRoot
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            special:
              operationId: groups.sites.Drive.ListSpecial
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/drives':
    get:
      tags:
        - groups.site
      summary: Get drives from groups
      description: The collection of drives (document libraries) under this site.
      operationId: groups.sites_ListDrives
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - driveType
                - driveType desc
                - owner
                - owner desc
                - quota
                - quota desc
                - sharePointIds
                - sharePointIds desc
                - system
                - system desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.driveCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/drives/{drive-id}':
    get:
      tags:
        - groups.site
      summary: Get drives from groups
      description: The collection of drives (document libraries) under this site.
      operationId: groups.sites_GetDrives
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: drive-id
          in: path
          description: 'key: id of drive'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: drive
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.drive'
          links:
            createdByUser:
              operationId: groups.sites.Drives.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            lastModifiedByUser:
              operationId: groups.sites.Drives.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            bundles:
              operationId: groups.sites.Drives.ListBundles
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            following:
              operationId: groups.sites.Drives.ListFollowing
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            items:
              operationId: groups.sites.Drives.ListItems
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            list:
              operationId: groups.sites.Drives.GetList
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            root:
              operationId: groups.sites.Drives.GetRoot
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            special:
              operationId: groups.sites.Drives.ListSpecial
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/externalColumns':
    get:
      tags:
        - groups.site
      summary: Get externalColumns from groups
      operationId: groups.sites_ListExternalColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/externalColumns/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get externalColumns from groups
      operationId: groups.sites_GetExternalColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.ExternalColumns.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/items':
    get:
      tags:
        - groups.site
      summary: Get items from groups
      description: Used to address any item contained in this site. This collection can't be enumerated.
      operationId: groups.sites_ListItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - createdByUser
                - lastModifiedByUser
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.baseItemCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/items/{baseItem-id}':
    get:
      tags:
        - groups.site
      summary: Get items from groups
      description: Used to address any item contained in this site. This collection can't be enumerated.
      operationId: groups.sites_GetItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: baseItem-id
          in: path
          description: 'key: id of baseItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: baseItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - createdByUser
                - lastModifiedByUser
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.baseItem'
          links:
            createdByUser:
              operationId: groups.sites.Items.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                baseItem-id: $request.path.baseItem-id
            lastModifiedByUser:
              operationId: groups.sites.Items.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                baseItem-id: $request.path.baseItem-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists':
    get:
      tags:
        - groups.site
      summary: Get lists from groups
      description: The collection of lists under this site.
      operationId: groups.sites_ListLists
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - displayName
                - displayName desc
                - list
                - list desc
                - sharepointIds
                - sharepointIds desc
                - system
                - system desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - list
                - sharepointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.listCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to lists for groups
      operationId: groups.sites_CreateLists
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.list'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.list'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}':
    get:
      tags:
        - groups.site
      summary: Get lists from groups
      description: The collection of lists under this site.
      operationId: groups.sites_GetLists
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - list
                - sharepointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.list'
          links:
            createdByUser:
              operationId: groups.sites.Lists.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            lastModifiedByUser:
              operationId: groups.sites.Lists.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            columns:
              operationId: groups.sites.Lists.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            contentTypes:
              operationId: groups.sites.Lists.ListContentTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            drive:
              operationId: groups.sites.Lists.GetDrive
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            items:
              operationId: groups.sites.Lists.ListItems
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            operations:
              operationId: groups.sites.Lists.ListOperations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            subscriptions:
              operationId: groups.sites.Lists.ListSubscriptions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property lists in groups
      operationId: groups.sites_UpdateLists
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.list'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property lists for groups
      operationId: groups.sites_DeleteLists
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/columns':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      description: The collection of field definitions for this list.
      operationId: groups.sites.lists_ListColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to columns for groups
      operationId: groups.sites.lists_CreateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      description: The collection of field definitions for this list.
      operationId: groups.sites.lists_GetColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.lists.Columns.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property columns in groups
      operationId: groups.sites.lists_UpdateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property columns for groups
      operationId: groups.sites.lists_DeleteColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - groups.site
      summary: Get sourceColumn from groups
      description: The source column for the content type column.
      operationId: groups.sites.lists.columns_GetSourceColumn
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.lists.columns.SourceColumn.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes':
    get:
      tags:
        - groups.site
      summary: Get contentTypes from groups
      description: The collection of content types present in this list.
      operationId: groups.sites.lists_ListContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to contentTypes for groups
      operationId: groups.sites.lists_CreateContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}':
    get:
      tags:
        - groups.site
      summary: Get contentTypes from groups
      description: The collection of content types present in this list.
      operationId: groups.sites.lists_GetContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: groups.sites.lists.ContentTypes.GetBase
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: groups.sites.lists.ContentTypes.ListBaseTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: groups.sites.lists.ContentTypes.ListColumnLinks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: groups.sites.lists.ContentTypes.ListColumnPositions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: groups.sites.lists.ContentTypes.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            associateWithHubSites:
              operationId: groups.group.sites.site.lists.list.contentTypes.contentType.associateGraphWPreHubSites
            copyToDefaultContentLocation:
              operationId: groups.group.sites.site.lists.list.contentTypes.contentType.copyToDefaultContentLocation
            isPublished:
              operationId: groups.group.sites.site.lists.list.contentTypes.contentType.isPublished
            publish:
              operationId: groups.group.sites.site.lists.list.contentTypes.contentType.publish
            unpublish:
              operationId: groups.group.sites.site.lists.list.contentTypes.contentType.unpublish
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property contentTypes in groups
      operationId: groups.sites.lists_UpdateContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property contentTypes for groups
      operationId: groups.sites.lists_DeleteContentTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/base':
    get:
      tags:
        - groups.site
      summary: Get base from groups
      description: Parent contentType from which this content type is derived.
      operationId: groups.sites.lists.contentTypes_GetBase
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: groups.sites.lists.contentTypes.Base.GetBase
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: groups.sites.lists.contentTypes.Base.ListBaseTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: groups.sites.lists.contentTypes.Base.ListColumnLinks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: groups.sites.lists.contentTypes.Base.ListColumnPositions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: groups.sites.lists.contentTypes.Base.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/baseTypes':
    get:
      tags:
        - groups.site
      summary: Get baseTypes from groups
      description: The collection of content types that are ancestors of this content type.
      operationId: groups.sites.lists.contentTypes_ListBaseTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/baseTypes/{contentType-id1}':
    get:
      tags:
        - groups.site
      summary: Get baseTypes from groups
      description: The collection of content types that are ancestors of this content type.
      operationId: groups.sites.lists.contentTypes_GetBaseTypes
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: contentType-id1
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: groups.sites.lists.contentTypes.BaseTypes.GetBase
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            baseTypes:
              operationId: groups.sites.lists.contentTypes.BaseTypes.ListBaseTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnLinks:
              operationId: groups.sites.lists.contentTypes.BaseTypes.ListColumnLinks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnPositions:
              operationId: groups.sites.lists.contentTypes.BaseTypes.ListColumnPositions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columns:
              operationId: groups.sites.lists.contentTypes.BaseTypes.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnLinks':
    get:
      tags:
        - groups.site
      summary: Get columnLinks from groups
      description: The collection of columns that are required by this content type.
      operationId: groups.sites.lists.contentTypes_ListColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - name
                - name desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnLinkCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to columnLinks for groups
      operationId: groups.sites.lists.contentTypes_CreateColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnLinks/{columnLink-id}':
    get:
      tags:
        - groups.site
      summary: Get columnLinks from groups
      description: The collection of columns that are required by this content type.
      operationId: groups.sites.lists.contentTypes_GetColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property columnLinks in groups
      operationId: groups.sites.lists.contentTypes_UpdateColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property columnLinks for groups
      operationId: groups.sites.lists.contentTypes_DeleteColumnLinks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnPositions':
    get:
      tags:
        - groups.site
      summary: Get columnPositions from groups
      description: Column order information in a content type.
      operationId: groups.sites.lists.contentTypes_ListColumnPositions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnPositions/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get columnPositions from groups
      description: Column order information in a content type.
      operationId: groups.sites.lists.contentTypes_GetColumnPositions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.lists.contentTypes.ColumnPositions.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columns':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      description: The collection of column definitions for this contentType.
      operationId: groups.sites.lists.contentTypes_ListColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to columns for groups
      operationId: groups.sites.lists.contentTypes_CreateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - groups.site
      summary: Get columns from groups
      description: The collection of column definitions for this contentType.
      operationId: groups.sites.lists.contentTypes_GetColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.lists.contentTypes.Columns.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property columns in groups
      operationId: groups.sites.lists.contentTypes_UpdateColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property columns for groups
      operationId: groups.sites.lists.contentTypes_DeleteColumns
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - groups.site
      summary: Get sourceColumn from groups
      description: The source column for the content type column.
      operationId: groups.sites.lists.contentTypes.columns_GetSourceColumn
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: groups.sites.lists.contentTypes.columns.SourceColumn.GetSourceColumn
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/drive':
    get:
      tags:
        - groups.site
      summary: Get drive from groups
      description: 'Only present on document libraries. Allows access to the list as a [drive][] resource with [driveItems][driveItem].'
      operationId: groups.sites.lists_GetDrive
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.drive'
          links:
            createdByUser:
              operationId: groups.sites.lists.Drive.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            lastModifiedByUser:
              operationId: groups.sites.lists.Drive.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            bundles:
              operationId: groups.sites.lists.Drive.ListBundles
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            following:
              operationId: groups.sites.lists.Drive.ListFollowing
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            items:
              operationId: groups.sites.lists.Drive.ListItems
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            list:
              operationId: groups.sites.lists.Drive.GetList
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            root:
              operationId: groups.sites.lists.Drive.GetRoot
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            special:
              operationId: groups.sites.lists.Drive.ListSpecial
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items':
    get:
      tags:
        - groups.site
      summary: Get items from groups
      description: All items contained in the list.
      operationId: groups.sites.lists_ListItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - contentType
                - contentType desc
                - sharepointIds
                - sharepointIds desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - sharepointIds
                - createdByUser
                - lastModifiedByUser
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.listItemCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to items for groups
      operationId: groups.sites.lists_CreateItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItem'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItem'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}':
    get:
      tags:
        - groups.site
      summary: Get items from groups
      description: All items contained in the list.
      operationId: groups.sites.lists_GetItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - sharepointIds
                - createdByUser
                - lastModifiedByUser
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItem'
          links:
            createdByUser:
              operationId: groups.sites.lists.Items.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            lastModifiedByUser:
              operationId: groups.sites.lists.Items.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            analytics:
              operationId: groups.sites.lists.Items.GetAnalytics
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            documentSetVersions:
              operationId: groups.sites.lists.Items.ListDocumentSetVersions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            driveItem:
              operationId: groups.sites.lists.Items.GetDriveItem
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            fields:
              operationId: groups.sites.lists.Items.GetFields
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            versions:
              operationId: groups.sites.lists.Items.ListVersions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            getActivitiesByInterval:
              operationId: groups.group.sites.site.lists.list.items.listItem.getActivitiesGraphBPreInterval
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property items in groups
      operationId: groups.sites.lists_UpdateItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItem'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property items for groups
      operationId: groups.sites.lists_DeleteItems
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/analytics':
    get:
      tags:
        - groups.site
      summary: Get analytics from groups
      description: Analytics about the view activities that took place on this item.
      operationId: groups.sites.lists.items_GetAnalytics
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
          links:
            allTime:
              operationId: groups.sites.lists.items.Analytics.GetAllTime
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            itemActivityStats:
              operationId: groups.sites.lists.items.Analytics.ListItemActivityStats
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            lastSevenDays:
              operationId: groups.sites.lists.items.Analytics.GetLastSevenDays
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/documentSetVersions':
    get:
      tags:
        - groups.site
      summary: Get documentSetVersions from groups
      description: Version information for a document set version created by a user.
      operationId: groups.sites.lists.items_ListDocumentSetVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - publication
                - publication desc
                - comment
                - comment desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - items
                - items desc
                - shouldCaptureMinorVersion
                - shouldCaptureMinorVersion desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - comment
                - createdBy
                - createdDateTime
                - items
                - shouldCaptureMinorVersion
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.documentSetVersionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to documentSetVersions for groups
      operationId: groups.sites.lists.items_CreateDocumentSetVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}':
    get:
      tags:
        - groups.site
      summary: Get documentSetVersions from groups
      description: Version information for a document set version created by a user.
      operationId: groups.sites.lists.items_GetDocumentSetVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - comment
                - createdBy
                - createdDateTime
                - items
                - shouldCaptureMinorVersion
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
          links:
            fields:
              operationId: groups.sites.lists.items.DocumentSetVersions.GetFields
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                documentSetVersion-id: $request.path.documentSetVersion-id
            restore:
              operationId: groups.group.sites.site.lists.list.items.listItem.documentSetVersions.documentSetVersion.restore
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property documentSetVersions in groups
      operationId: groups.sites.lists.items_UpdateDocumentSetVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property documentSetVersions for groups
      operationId: groups.sites.lists.items_DeleteDocumentSetVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/driveItem':
    get:
      tags:
        - groups.site
      summary: Get driveItem from groups
      description: 'For document libraries, the driveItem relationship exposes the listItem as a [driveItem][]'
      operationId: groups.sites.lists.items_GetDriveItem
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - audio
                - bundle
                - content
                - cTag
                - deleted
                - file
                - fileSystemInfo
                - folder
                - image
                - location
                - malware
                - package
                - pendingOperations
                - photo
                - publication
                - remoteItem
                - root
                - searchResult
                - shared
                - sharepointIds
                - size
                - specialFolder
                - video
                - webDavUrl
                - createdByUser
                - lastModifiedByUser
                - workbook
                - analytics
                - children
                - listItem
                - permissions
                - subscriptions
                - thumbnails
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - workbook
                - analytics
                - children
                - listItem
                - permissions
                - subscriptions
                - thumbnails
                - versions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
          links:
            createdByUser:
              operationId: groups.sites.lists.items.DriveItem.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            lastModifiedByUser:
              operationId: groups.sites.lists.items.DriveItem.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            workbook:
              operationId: groups.sites.lists.items.DriveItem.GetWorkbook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            analytics:
              operationId: groups.sites.lists.items.DriveItem.GetAnalytics
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            children:
              operationId: groups.sites.lists.items.DriveItem.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            listItem:
              operationId: groups.sites.lists.items.DriveItem.GetListItem
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            permissions:
              operationId: groups.sites.lists.items.DriveItem.ListPermissions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            subscriptions:
              operationId: groups.sites.lists.items.DriveItem.ListSubscriptions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            thumbnails:
              operationId: groups.sites.lists.items.DriveItem.ListThumbnails
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            versions:
              operationId: groups.sites.lists.items.DriveItem.ListVersions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/driveItem/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property driveItem from groups
      description: 'The content stream, if the item represents a file.'
      operationId: groups.sites.lists.items_GetDriveItemContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property driveItem in groups
      description: 'The content stream, if the item represents a file.'
      operationId: groups.sites.lists.items_SetDriveItemContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/fields':
    get:
      tags:
        - groups.site
      summary: Get fields from groups
      description: The values of the columns set on this list item.
      operationId: groups.sites.lists.items_GetFields
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property fields in groups
      operationId: groups.sites.lists.items_UpdateFields
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property fields for groups
      operationId: groups.sites.lists.items_DeleteFields
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions':
    get:
      tags:
        - groups.site
      summary: Get versions from groups
      description: The list of previous versions of the list item.
      operationId: groups.sites.lists.items_ListVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - publication
                - publication desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.listItemVersionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to versions for groups
      operationId: groups.sites.lists.items_CreateVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions/{listItemVersion-id}':
    get:
      tags:
        - groups.site
      summary: Get versions from groups
      description: The list of previous versions of the list item.
      operationId: groups.sites.lists.items_GetVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItemVersion'
          links:
            fields:
              operationId: groups.sites.lists.items.Versions.GetFields
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                listItemVersion-id: $request.path.listItemVersion-id
            restoreVersion:
              operationId: groups.group.sites.site.lists.list.items.listItem.versions.listItemVersion.restoreVersion
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property versions in groups
      operationId: groups.sites.lists.items_UpdateVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property versions for groups
      operationId: groups.sites.lists.items_DeleteVersions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions/{listItemVersion-id}/fields':
    get:
      tags:
        - groups.site
      summary: Get fields from groups
      description: A collection of the fields and values for this version of the list item.
      operationId: groups.sites.lists.items.versions_GetFields
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property fields in groups
      operationId: groups.sites.lists.items.versions_UpdateFields
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property fields for groups
      operationId: groups.sites.lists.items.versions_DeleteFields
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/operations':
    get:
      tags:
        - groups.site
      summary: Get operations from groups
      description: The collection of long-running operations on the list.
      operationId: groups.sites.lists_ListOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - lastActionDateTime
                - lastActionDateTime desc
                - resourceLocation
                - resourceLocation desc
                - status
                - status desc
                - statusDetail
                - statusDetail desc
                - error
                - error desc
                - percentageComplete
                - percentageComplete desc
                - resourceId
                - resourceId desc
                - type
                - type desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - resourceLocation
                - status
                - statusDetail
                - error
                - percentageComplete
                - resourceId
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.richLongRunningOperationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to operations for groups
      operationId: groups.sites.lists_CreateOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/operations/{richLongRunningOperation-id}':
    get:
      tags:
        - groups.site
      summary: Get operations from groups
      description: The collection of long-running operations on the list.
      operationId: groups.sites.lists_GetOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - resourceLocation
                - status
                - statusDetail
                - error
                - percentageComplete
                - resourceId
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property operations in groups
      operationId: groups.sites.lists_UpdateOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property operations for groups
      operationId: groups.sites.lists_DeleteOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/subscriptions':
    get:
      tags:
        - groups.site
      summary: Get subscriptions from groups
      description: The set of subscriptions on the list.
      operationId: groups.sites.lists_ListSubscriptions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - applicationId
                - applicationId desc
                - changeType
                - changeType desc
                - clientState
                - clientState desc
                - creatorId
                - creatorId desc
                - encryptionCertificate
                - encryptionCertificate desc
                - encryptionCertificateId
                - encryptionCertificateId desc
                - expirationDateTime
                - expirationDateTime desc
                - includeResourceData
                - includeResourceData desc
                - latestSupportedTlsVersion
                - latestSupportedTlsVersion desc
                - lifecycleNotificationUrl
                - lifecycleNotificationUrl desc
                - notificationQueryOptions
                - notificationQueryOptions desc
                - notificationUrl
                - notificationUrl desc
                - notificationUrlAppId
                - notificationUrlAppId desc
                - resource
                - resource desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - applicationId
                - changeType
                - clientState
                - creatorId
                - encryptionCertificate
                - encryptionCertificateId
                - expirationDateTime
                - includeResourceData
                - latestSupportedTlsVersion
                - lifecycleNotificationUrl
                - notificationQueryOptions
                - notificationUrl
                - notificationUrlAppId
                - resource
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.subscriptionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to subscriptions for groups
      operationId: groups.sites.lists_CreateSubscriptions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.subscription'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.subscription'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/lists/{list-id}/subscriptions/{subscription-id}':
    get:
      tags:
        - groups.site
      summary: Get subscriptions from groups
      description: The set of subscriptions on the list.
      operationId: groups.sites.lists_GetSubscriptions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - applicationId
                - changeType
                - clientState
                - creatorId
                - encryptionCertificate
                - encryptionCertificateId
                - expirationDateTime
                - includeResourceData
                - latestSupportedTlsVersion
                - lifecycleNotificationUrl
                - notificationQueryOptions
                - notificationUrl
                - notificationUrlAppId
                - resource
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.subscription'
          links:
            reauthorize:
              operationId: groups.group.sites.site.lists.list.subscriptions.subscription.reauthorize
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property subscriptions in groups
      operationId: groups.sites.lists_UpdateSubscriptions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.subscription'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property subscriptions for groups
      operationId: groups.sites.lists_DeleteSubscriptions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote':
    get:
      tags:
        - groups.site
      summary: Get onenote from groups
      description: Calls the OneNote service for notebook related operations.
      operationId: groups.sites_GetOnenote
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - notebooks
                - operations
                - pages
                - resources
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - notebooks
                - operations
                - pages
                - resources
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenote'
          links:
            notebooks:
              operationId: groups.sites.Onenote.ListNotebooks
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            operations:
              operationId: groups.sites.Onenote.ListOperations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            pages:
              operationId: groups.sites.Onenote.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            resources:
              operationId: groups.sites.Onenote.ListResources
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            sectionGroups:
              operationId: groups.sites.Onenote.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            sections:
              operationId: groups.sites.Onenote.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property onenote in groups
      operationId: groups.sites_UpdateOnenote
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenote'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property onenote for groups
      operationId: groups.sites_DeleteOnenote
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks':
    get:
      tags:
        - groups.site
      summary: Get notebooks from groups
      description: The collection of OneNote notebooks that are owned by the user or group. Read-only. Nullable.
      operationId: groups.sites.onenote_ListNotebooks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - isDefault
                - isDefault desc
                - isShared
                - isShared desc
                - links
                - links desc
                - sectionGroupsUrl
                - sectionGroupsUrl desc
                - sectionsUrl
                - sectionsUrl desc
                - userRole
                - userRole desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.notebookCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to notebooks for groups
      operationId: groups.sites.onenote_CreateNotebooks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.notebook'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}':
    get:
      tags:
        - groups.site
      summary: Get notebooks from groups
      description: The collection of OneNote notebooks that are owned by the user or group. Read-only. Nullable.
      operationId: groups.sites.onenote_GetNotebooks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.Notebooks.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
            sections:
              operationId: groups.sites.onenote.Notebooks.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
            copyNotebook:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.copyNotebook
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property notebooks in groups
      operationId: groups.sites.onenote_UpdateNotebooks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.notebook'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property notebooks for groups
      operationId: groups.sites.onenote_DeleteNotebooks
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      description: The section groups in the notebook. Read-only. Nullable.
      operationId: groups.sites.onenote.notebooks_ListSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - sectionGroupsUrl
                - sectionGroupsUrl desc
                - sectionsUrl
                - sectionsUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.sectionGroupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sectionGroups for groups
      operationId: groups.sites.onenote.notebooks_CreateSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      description: The section groups in the notebook. Read-only. Nullable.
      operationId: groups.sites.onenote.notebooks_GetSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.SectionGroups.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.SectionGroups.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.SectionGroups.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            sections:
              operationId: groups.sites.onenote.notebooks.SectionGroups.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sectionGroups in groups
      operationId: groups.sites.onenote.notebooks_UpdateSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sectionGroups for groups
      operationId: groups.sites.onenote.notebooks_DeleteSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      description: The notebook that contains the section group. Read-only.
      operationId: groups.sites.onenote.notebooks.sectionGroups_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sectionGroups.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            sections:
              operationId: groups.sites.onenote.notebooks.sectionGroups.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/parentSectionGroup':
    get:
      tags:
        - groups.site
      summary: Get parentSectionGroup from groups
      description: The section group that contains the section group. Read-only.
      operationId: groups.sites.onenote.notebooks.sectionGroups_GetParentSectionGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sectionGroups.ParentSectionGroup.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sectionGroups.ParentSectionGroup.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sectionGroups.ParentSectionGroup.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
            sections:
              operationId: groups.sites.onenote.notebooks.sectionGroups.ParentSectionGroup.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sectionGroups':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      description: The section groups in the section. Read-only. Nullable.
      operationId: groups.sites.onenote.notebooks.sectionGroups_ListSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - sectionGroupsUrl
                - sectionGroupsUrl desc
                - sectionsUrl
                - sectionsUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.sectionGroupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sectionGroups/{sectionGroup-id1}':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      description: The section groups in the section. Read-only. Nullable.
      operationId: groups.sites.onenote.notebooks.sectionGroups_GetSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: sectionGroup-id1
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sectionGroups.SectionGroups.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sectionGroups.SectionGroups.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sectionGroups.SectionGroups.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
            sections:
              operationId: groups.sites.onenote.notebooks.sectionGroups.SectionGroups.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      description: The sections in the section group. Read-only. Nullable.
      operationId: groups.sites.onenote.notebooks.sectionGroups_ListSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - isDefault
                - isDefault desc
                - links
                - links desc
                - pagesUrl
                - pagesUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenoteSectionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sections for groups
      operationId: groups.sites.onenote.notebooks.sectionGroups_CreateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      description: The sections in the section group. Read-only. Nullable.
      operationId: groups.sites.onenote.notebooks.sectionGroups_GetSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.notebooks.sectionGroups.Sections.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sectionGroups.Sections.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sectionGroups.Sections.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            copyToNotebook:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sectionGroups.sectionGroup.sections.onenoteSection.copyToNotebook
            copyToSectionGroup:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sectionGroups.sectionGroup.sections.onenoteSection.copyToSectionGroup
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sections in groups
      operationId: groups.sites.onenote.notebooks.sectionGroups_UpdateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sections for groups
      operationId: groups.sites.onenote.notebooks.sectionGroups_DeleteSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      description: The collection of pages in the section.  Read-only. Nullable.
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_ListPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - content
                - content desc
                - contentUrl
                - contentUrl desc
                - createdByAppId
                - createdByAppId desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - level
                - level desc
                - links
                - links desc
                - order
                - order desc
                - title
                - title desc
                - userTags
                - userTags desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenotePageCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to pages for groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_CreatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      description: The collection of pages in the section.  Read-only. Nullable.
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_GetPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.Pages.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSection:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.Pages.GetParentSection
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            copyToSection:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sectionGroups.sectionGroup.sections.onenoteSection.pages.onenotePage.copyToSection
            onenotePatchContent:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sectionGroups.sectionGroup.sections.onenoteSection.pages.onenotePage.onenotePatchContent
            preview:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sectionGroups.sectionGroup.sections.onenoteSection.pages.onenotePage.preview
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property pages in groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_UpdatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property pages for groups
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_DeletePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property pages from groups
      description: The page's HTML content.
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_GetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property pages in groups
      description: The page's HTML content.
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_SetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      description: The notebook that contains the page.  Read-only.
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            sections:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentSection':
    get:
      tags:
        - groups.site
      summary: Get parentSection from groups
      description: The section that contains the page. Read-only.
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages_GetParentSection
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages.ParentSection.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages.ParentSection.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.pages.ParentSection.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      description: The notebook that contains the section.  Read-only.
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/parentSectionGroup':
    get:
      tags:
        - groups.site
      summary: Get parentSectionGroup from groups
      description: The section group that contains the section.  Read-only.
      operationId: groups.sites.onenote.notebooks.sectionGroups.sections_GetParentSectionGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.ParentSectionGroup.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.ParentSectionGroup.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.ParentSectionGroup.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.notebooks.sectionGroups.sections.ParentSectionGroup.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      description: The sections in the notebook. Read-only. Nullable.
      operationId: groups.sites.onenote.notebooks_ListSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - isDefault
                - isDefault desc
                - links
                - links desc
                - pagesUrl
                - pagesUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenoteSectionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sections for groups
      operationId: groups.sites.onenote.notebooks_CreateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      description: The sections in the notebook. Read-only. Nullable.
      operationId: groups.sites.onenote.notebooks_GetSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.notebooks.Sections.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.Sections.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.Sections.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            copyToNotebook:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sections.onenoteSection.copyToNotebook
            copyToSectionGroup:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sections.onenoteSection.copyToSectionGroup
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sections in groups
      operationId: groups.sites.onenote.notebooks_UpdateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sections for groups
      operationId: groups.sites.onenote.notebooks_DeleteSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      description: The collection of pages in the section.  Read-only. Nullable.
      operationId: groups.sites.onenote.notebooks.sections_ListPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - content
                - content desc
                - contentUrl
                - contentUrl desc
                - createdByAppId
                - createdByAppId desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - level
                - level desc
                - links
                - links desc
                - order
                - order desc
                - title
                - title desc
                - userTags
                - userTags desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenotePageCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to pages for groups
      operationId: groups.sites.onenote.notebooks.sections_CreatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      description: The collection of pages in the section.  Read-only. Nullable.
      operationId: groups.sites.onenote.notebooks.sections_GetPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sections.Pages.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSection:
              operationId: groups.sites.onenote.notebooks.sections.Pages.GetParentSection
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            copyToSection:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sections.onenoteSection.pages.onenotePage.copyToSection
            onenotePatchContent:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sections.onenoteSection.pages.onenotePage.onenotePatchContent
            preview:
              operationId: groups.group.sites.site.onenote.notebooks.notebook.sections.onenoteSection.pages.onenotePage.preview
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property pages in groups
      operationId: groups.sites.onenote.notebooks.sections_UpdatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property pages for groups
      operationId: groups.sites.onenote.notebooks.sections_DeletePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property pages from groups
      description: The page's HTML content.
      operationId: groups.sites.onenote.notebooks.sections_GetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property pages in groups
      description: The page's HTML content.
      operationId: groups.sites.onenote.notebooks.sections_SetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      description: The notebook that contains the page.  Read-only.
      operationId: groups.sites.onenote.notebooks.sections.pages_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sections.pages.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            sections:
              operationId: groups.sites.onenote.notebooks.sections.pages.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentSection':
    get:
      tags:
        - groups.site
      summary: Get parentSection from groups
      description: The section that contains the page. Read-only.
      operationId: groups.sites.onenote.notebooks.sections.pages_GetParentSection
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.notebooks.sections.pages.ParentSection.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sections.pages.ParentSection.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sections.pages.ParentSection.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      description: The notebook that contains the section.  Read-only.
      operationId: groups.sites.onenote.notebooks.sections_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sections.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.notebooks.sections.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/parentSectionGroup':
    get:
      tags:
        - groups.site
      summary: Get parentSectionGroup from groups
      description: The section group that contains the section.  Read-only.
      operationId: groups.sites.onenote.notebooks.sections_GetParentSectionGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.notebooks.sections.ParentSectionGroup.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.notebooks.sections.ParentSectionGroup.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            sectionGroups:
              operationId: groups.sites.onenote.notebooks.sections.ParentSectionGroup.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.notebooks.sections.ParentSectionGroup.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                notebook-id: $request.path.notebook-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/operations':
    get:
      tags:
        - groups.site
      summary: Get operations from groups
      description: 'The status of OneNote operations. Getting an operations collection is not supported, but you can get the status of long-running operations if the Operation-Location header is returned in the response. Read-only. Nullable.'
      operationId: groups.sites.onenote_ListOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - lastActionDateTime
                - lastActionDateTime desc
                - status
                - status desc
                - error
                - error desc
                - percentComplete
                - percentComplete desc
                - resourceId
                - resourceId desc
                - resourceLocation
                - resourceLocation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - status
                - error
                - percentComplete
                - resourceId
                - resourceLocation
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenoteOperationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to operations for groups
      operationId: groups.sites.onenote_CreateOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/operations/{onenoteOperation-id}':
    get:
      tags:
        - groups.site
      summary: Get operations from groups
      description: 'The status of OneNote operations. Getting an operations collection is not supported, but you can get the status of long-running operations if the Operation-Location header is returned in the response. Read-only. Nullable.'
      operationId: groups.sites.onenote_GetOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteOperation-id
          in: path
          description: 'key: id of onenoteOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteOperation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - status
                - error
                - percentComplete
                - resourceId
                - resourceLocation
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property operations in groups
      operationId: groups.sites.onenote_UpdateOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteOperation-id
          in: path
          description: 'key: id of onenoteOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteOperation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property operations for groups
      operationId: groups.sites.onenote_DeleteOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteOperation-id
          in: path
          description: 'key: id of onenoteOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteOperation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/pages':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      description: The pages in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
      operationId: groups.sites.onenote_ListPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - content
                - content desc
                - contentUrl
                - contentUrl desc
                - createdByAppId
                - createdByAppId desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - level
                - level desc
                - links
                - links desc
                - order
                - order desc
                - title
                - title desc
                - userTags
                - userTags desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenotePageCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to pages for groups
      operationId: groups.sites.onenote_CreatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/pages/{onenotePage-id}':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      description: The pages in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
      operationId: groups.sites.onenote_GetPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.Pages.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
            parentSection:
              operationId: groups.sites.onenote.Pages.GetParentSection
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
            copyToSection:
              operationId: groups.group.sites.site.onenote.pages.onenotePage.copyToSection
            onenotePatchContent:
              operationId: groups.group.sites.site.onenote.pages.onenotePage.onenotePatchContent
            preview:
              operationId: groups.group.sites.site.onenote.pages.onenotePage.preview
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property pages in groups
      operationId: groups.sites.onenote_UpdatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property pages for groups
      operationId: groups.sites.onenote_DeletePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/pages/{onenotePage-id}/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property pages from groups
      description: The page's HTML content.
      operationId: groups.sites.onenote_GetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property pages in groups
      description: The page's HTML content.
      operationId: groups.sites.onenote_SetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/pages/{onenotePage-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      description: The notebook that contains the page.  Read-only.
      operationId: groups.sites.onenote.pages_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.pages.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
            sections:
              operationId: groups.sites.onenote.pages.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/pages/{onenotePage-id}/parentSection':
    get:
      tags:
        - groups.site
      summary: Get parentSection from groups
      description: The section that contains the page. Read-only.
      operationId: groups.sites.onenote.pages_GetParentSection
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.pages.ParentSection.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
            parentNotebook:
              operationId: groups.sites.onenote.pages.ParentSection.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
            parentSectionGroup:
              operationId: groups.sites.onenote.pages.ParentSection.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/resources':
    get:
      tags:
        - groups.site
      summary: Get resources from groups
      description: 'The image and other file resources in OneNote pages. Getting a resources collection is not supported, but you can get the binary content of a specific resource. Read-only. Nullable.'
      operationId: groups.sites.onenote_ListResources
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - content
                - content desc
                - contentUrl
                - contentUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - content
                - contentUrl
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenoteResourceCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to resources for groups
      operationId: groups.sites.onenote_CreateResources
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteResource'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteResource'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/resources/{onenoteResource-id}':
    get:
      tags:
        - groups.site
      summary: Get resources from groups
      description: 'The image and other file resources in OneNote pages. Getting a resources collection is not supported, but you can get the binary content of a specific resource. Read-only. Nullable.'
      operationId: groups.sites.onenote_GetResources
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteResource-id
          in: path
          description: 'key: id of onenoteResource'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteResource
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - content
                - contentUrl
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteResource'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property resources in groups
      operationId: groups.sites.onenote_UpdateResources
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteResource-id
          in: path
          description: 'key: id of onenoteResource'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteResource
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteResource'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property resources for groups
      operationId: groups.sites.onenote_DeleteResources
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteResource-id
          in: path
          description: 'key: id of onenoteResource'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteResource
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/resources/{onenoteResource-id}/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property resources from groups
      description: The content stream
      operationId: groups.sites.onenote_GetResourcesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteResource-id
          in: path
          description: 'key: id of onenoteResource'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteResource
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property resources in groups
      description: The content stream
      operationId: groups.sites.onenote_SetResourcesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteResource-id
          in: path
          description: 'key: id of onenoteResource'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteResource
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      description: The section groups in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
      operationId: groups.sites.onenote_ListSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - sectionGroupsUrl
                - sectionGroupsUrl desc
                - sectionsUrl
                - sectionsUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.sectionGroupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sectionGroups for groups
      operationId: groups.sites.onenote_CreateSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      description: The section groups in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
      operationId: groups.sites.onenote_GetSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.SectionGroups.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            parentSectionGroup:
              operationId: groups.sites.onenote.SectionGroups.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            sectionGroups:
              operationId: groups.sites.onenote.SectionGroups.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            sections:
              operationId: groups.sites.onenote.SectionGroups.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sectionGroups in groups
      operationId: groups.sites.onenote_UpdateSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sectionGroups for groups
      operationId: groups.sites.onenote_DeleteSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      description: The notebook that contains the section group. Read-only.
      operationId: groups.sites.onenote.sectionGroups_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.sectionGroups.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            sections:
              operationId: groups.sites.onenote.sectionGroups.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/parentSectionGroup':
    get:
      tags:
        - groups.site
      summary: Get parentSectionGroup from groups
      description: The section group that contains the section group. Read-only.
      operationId: groups.sites.onenote.sectionGroups_GetParentSectionGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.sectionGroups.ParentSectionGroup.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            parentSectionGroup:
              operationId: groups.sites.onenote.sectionGroups.ParentSectionGroup.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            sectionGroups:
              operationId: groups.sites.onenote.sectionGroups.ParentSectionGroup.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
            sections:
              operationId: groups.sites.onenote.sectionGroups.ParentSectionGroup.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sectionGroups':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      description: The section groups in the section. Read-only. Nullable.
      operationId: groups.sites.onenote.sectionGroups_ListSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - sectionGroupsUrl
                - sectionGroupsUrl desc
                - sectionsUrl
                - sectionsUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.sectionGroupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sectionGroups/{sectionGroup-id1}':
    get:
      tags:
        - groups.site
      summary: Get sectionGroups from groups
      description: The section groups in the section. Read-only. Nullable.
      operationId: groups.sites.onenote.sectionGroups_GetSectionGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: sectionGroup-id1
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.sectionGroups.SectionGroups.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
            parentSectionGroup:
              operationId: groups.sites.onenote.sectionGroups.SectionGroups.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
            sectionGroups:
              operationId: groups.sites.onenote.sectionGroups.SectionGroups.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
            sections:
              operationId: groups.sites.onenote.sectionGroups.SectionGroups.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                sectionGroup-id1: $request.path.sectionGroup-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      description: The sections in the section group. Read-only. Nullable.
      operationId: groups.sites.onenote.sectionGroups_ListSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - isDefault
                - isDefault desc
                - links
                - links desc
                - pagesUrl
                - pagesUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenoteSectionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sections for groups
      operationId: groups.sites.onenote.sectionGroups_CreateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      description: The sections in the section group. Read-only. Nullable.
      operationId: groups.sites.onenote.sectionGroups_GetSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.sectionGroups.Sections.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentNotebook:
              operationId: groups.sites.onenote.sectionGroups.Sections.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.sectionGroups.Sections.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            copyToNotebook:
              operationId: groups.group.sites.site.onenote.sectionGroups.sectionGroup.sections.onenoteSection.copyToNotebook
            copyToSectionGroup:
              operationId: groups.group.sites.site.onenote.sectionGroups.sectionGroup.sections.onenoteSection.copyToSectionGroup
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sections in groups
      operationId: groups.sites.onenote.sectionGroups_UpdateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sections for groups
      operationId: groups.sites.onenote.sectionGroups_DeleteSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      description: The collection of pages in the section.  Read-only. Nullable.
      operationId: groups.sites.onenote.sectionGroups.sections_ListPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - content
                - content desc
                - contentUrl
                - contentUrl desc
                - createdByAppId
                - createdByAppId desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - level
                - level desc
                - links
                - links desc
                - order
                - order desc
                - title
                - title desc
                - userTags
                - userTags desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenotePageCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to pages for groups
      operationId: groups.sites.onenote.sectionGroups.sections_CreatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      description: The collection of pages in the section.  Read-only. Nullable.
      operationId: groups.sites.onenote.sectionGroups.sections_GetPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.sectionGroups.sections.Pages.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSection:
              operationId: groups.sites.onenote.sectionGroups.sections.Pages.GetParentSection
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            copyToSection:
              operationId: groups.group.sites.site.onenote.sectionGroups.sectionGroup.sections.onenoteSection.pages.onenotePage.copyToSection
            onenotePatchContent:
              operationId: groups.group.sites.site.onenote.sectionGroups.sectionGroup.sections.onenoteSection.pages.onenotePage.onenotePatchContent
            preview:
              operationId: groups.group.sites.site.onenote.sectionGroups.sectionGroup.sections.onenoteSection.pages.onenotePage.preview
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property pages in groups
      operationId: groups.sites.onenote.sectionGroups.sections_UpdatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property pages for groups
      operationId: groups.sites.onenote.sectionGroups.sections_DeletePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property pages from groups
      description: The page's HTML content.
      operationId: groups.sites.onenote.sectionGroups.sections_GetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property pages in groups
      description: The page's HTML content.
      operationId: groups.sites.onenote.sectionGroups.sections_SetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      description: The notebook that contains the page.  Read-only.
      operationId: groups.sites.onenote.sectionGroups.sections.pages_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.sectionGroups.sections.pages.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            sections:
              operationId: groups.sites.onenote.sectionGroups.sections.pages.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentSection':
    get:
      tags:
        - groups.site
      summary: Get parentSection from groups
      description: The section that contains the page. Read-only.
      operationId: groups.sites.onenote.sectionGroups.sections.pages_GetParentSection
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.sectionGroups.sections.pages.ParentSection.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentNotebook:
              operationId: groups.sites.onenote.sectionGroups.sections.pages.ParentSection.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSectionGroup:
              operationId: groups.sites.onenote.sectionGroups.sections.pages.ParentSection.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      description: The notebook that contains the section.  Read-only.
      operationId: groups.sites.onenote.sectionGroups.sections_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.sectionGroups.sections.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.sectionGroups.sections.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/parentSectionGroup':
    get:
      tags:
        - groups.site
      summary: Get parentSectionGroup from groups
      description: The section group that contains the section.  Read-only.
      operationId: groups.sites.onenote.sectionGroups.sections_GetParentSectionGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.sectionGroups.sections.ParentSectionGroup.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.sectionGroups.sections.ParentSectionGroup.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            sectionGroups:
              operationId: groups.sites.onenote.sectionGroups.sections.ParentSectionGroup.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.sectionGroups.sections.ParentSectionGroup.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                sectionGroup-id: $request.path.sectionGroup-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      description: The sections in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
      operationId: groups.sites.onenote_ListSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - createdBy
                - createdBy desc
                - displayName
                - displayName desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - isDefault
                - isDefault desc
                - links
                - links desc
                - pagesUrl
                - pagesUrl desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenoteSectionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sections for groups
      operationId: groups.sites.onenote_CreateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}':
    get:
      tags:
        - groups.site
      summary: Get sections from groups
      description: The sections in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
      operationId: groups.sites.onenote_GetSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.Sections.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentNotebook:
              operationId: groups.sites.onenote.Sections.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.Sections.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            copyToNotebook:
              operationId: groups.group.sites.site.onenote.sections.onenoteSection.copyToNotebook
            copyToSectionGroup:
              operationId: groups.group.sites.site.onenote.sections.onenoteSection.copyToSectionGroup
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sections in groups
      operationId: groups.sites.onenote_UpdateSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sections for groups
      operationId: groups.sites.onenote_DeleteSections
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      description: The collection of pages in the section.  Read-only. Nullable.
      operationId: groups.sites.onenote.sections_ListPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - self
                - self desc
                - createdDateTime
                - createdDateTime desc
                - content
                - content desc
                - contentUrl
                - contentUrl desc
                - createdByAppId
                - createdByAppId desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - level
                - level desc
                - links
                - links desc
                - order
                - order desc
                - title
                - title desc
                - userTags
                - userTags desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.onenotePageCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to pages for groups
      operationId: groups.sites.onenote.sections_CreatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}':
    get:
      tags:
        - groups.site
      summary: Get pages from groups
      description: The collection of pages in the section.  Read-only. Nullable.
      operationId: groups.sites.onenote.sections_GetPages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - content
                - contentUrl
                - createdByAppId
                - lastModifiedDateTime
                - level
                - links
                - order
                - title
                - userTags
                - parentNotebook
                - parentSection
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSection
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.sections.Pages.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSection:
              operationId: groups.sites.onenote.sections.Pages.GetParentSection
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            copyToSection:
              operationId: groups.group.sites.site.onenote.sections.onenoteSection.pages.onenotePage.copyToSection
            onenotePatchContent:
              operationId: groups.group.sites.site.onenote.sections.onenoteSection.pages.onenotePage.onenotePatchContent
            preview:
              operationId: groups.group.sites.site.onenote.sections.onenoteSection.pages.onenotePage.preview
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property pages in groups
      operationId: groups.sites.onenote.sections_UpdatePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.onenotePage'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property pages for groups
      operationId: groups.sites.onenote.sections_DeletePages
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}/content':
    get:
      tags:
        - groups.site
      summary: Get content for the navigation property pages from groups
      description: The page's HTML content.
      operationId: groups.sites.onenote.sections_GetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - groups.site
      summary: Update content for the navigation property pages in groups
      description: The page's HTML content.
      operationId: groups.sites.onenote.sections_SetPagesContent
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      description: The notebook that contains the page.  Read-only.
      operationId: groups.sites.onenote.sections.pages_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.sections.pages.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            sections:
              operationId: groups.sites.onenote.sections.pages.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}/parentSection':
    get:
      tags:
        - groups.site
      summary: Get parentSection from groups
      description: The section that contains the page. Read-only.
      operationId: groups.sites.onenote.sections.pages_GetParentSection
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - links
                - pagesUrl
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - pages
                - parentNotebook
                - parentSectionGroup
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          links:
            pages:
              operationId: groups.sites.onenote.sections.pages.ParentSection.ListPages
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentNotebook:
              operationId: groups.sites.onenote.sections.pages.ParentSection.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
            parentSectionGroup:
              operationId: groups.sites.onenote.sections.pages.ParentSection.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
                onenotePage-id: $request.path.onenotePage-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/parentNotebook':
    get:
      tags:
        - groups.site
      summary: Get parentNotebook from groups
      description: The notebook that contains the section.  Read-only.
      operationId: groups.sites.onenote.sections_GetParentNotebook
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - isDefault
                - isShared
                - links
                - sectionGroupsUrl
                - sectionsUrl
                - userRole
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.notebook'
          links:
            sectionGroups:
              operationId: groups.sites.onenote.sections.ParentNotebook.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.sections.ParentNotebook.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/onenote/sections/{onenoteSection-id}/parentSectionGroup':
    get:
      tags:
        - groups.site
      summary: Get parentSectionGroup from groups
      description: The section group that contains the section.  Read-only.
      operationId: groups.sites.onenote.sections_GetParentSectionGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - self
                - createdDateTime
                - createdBy
                - displayName
                - lastModifiedBy
                - lastModifiedDateTime
                - sectionGroupsUrl
                - sectionsUrl
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - parentNotebook
                - parentSectionGroup
                - sectionGroups
                - sections
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          links:
            parentNotebook:
              operationId: groups.sites.onenote.sections.ParentSectionGroup.GetParentNotebook
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            parentSectionGroup:
              operationId: groups.sites.onenote.sections.ParentSectionGroup.GetParentSectionGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            sectionGroups:
              operationId: groups.sites.onenote.sections.ParentSectionGroup.ListSectionGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
            sections:
              operationId: groups.sites.onenote.sections.ParentSectionGroup.ListSections
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                onenoteSection-id: $request.path.onenoteSection-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/operations':
    get:
      tags:
        - groups.site
      summary: Get operations from groups
      description: The collection of long-running operations on the site.
      operationId: groups.sites_ListOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - lastActionDateTime
                - lastActionDateTime desc
                - resourceLocation
                - resourceLocation desc
                - status
                - status desc
                - statusDetail
                - statusDetail desc
                - error
                - error desc
                - percentageComplete
                - percentageComplete desc
                - resourceId
                - resourceId desc
                - type
                - type desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - resourceLocation
                - status
                - statusDetail
                - error
                - percentageComplete
                - resourceId
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.richLongRunningOperationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to operations for groups
      operationId: groups.sites_CreateOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/operations/{richLongRunningOperation-id}':
    get:
      tags:
        - groups.site
      summary: Get operations from groups
      description: The collection of long-running operations on the site.
      operationId: groups.sites_GetOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - resourceLocation
                - status
                - statusDetail
                - error
                - percentageComplete
                - resourceId
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property operations in groups
      operationId: groups.sites_UpdateOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property operations for groups
      operationId: groups.sites_DeleteOperations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/permissions':
    get:
      tags:
        - groups.site
      summary: Get permissions from groups
      description: The permissions associated with the site. Nullable.
      operationId: groups.sites_ListPermissions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - expirationDateTime
                - expirationDateTime desc
                - grantedTo
                - grantedTo desc
                - grantedToIdentities
                - grantedToIdentities desc
                - grantedToIdentitiesV2
                - grantedToIdentitiesV2 desc
                - grantedToV2
                - grantedToV2 desc
                - hasPassword
                - hasPassword desc
                - inheritedFrom
                - inheritedFrom desc
                - invitation
                - invitation desc
                - link
                - link desc
                - roles
                - roles desc
                - shareId
                - shareId desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - expirationDateTime
                - grantedTo
                - grantedToIdentities
                - grantedToIdentitiesV2
                - grantedToV2
                - hasPassword
                - inheritedFrom
                - invitation
                - link
                - roles
                - shareId
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.permissionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to permissions for groups
      operationId: groups.sites_CreatePermissions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.permission'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.permission'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/permissions/{permission-id}':
    get:
      tags:
        - groups.site
      summary: Get permissions from groups
      description: The permissions associated with the site. Nullable.
      operationId: groups.sites_GetPermissions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - expirationDateTime
                - grantedTo
                - grantedToIdentities
                - grantedToIdentitiesV2
                - grantedToV2
                - hasPassword
                - inheritedFrom
                - invitation
                - link
                - roles
                - shareId
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.permission'
          links:
            grant:
              operationId: groups.group.sites.site.permissions.permission.grant
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property permissions in groups
      operationId: groups.sites_UpdatePermissions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.permission'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property permissions for groups
      operationId: groups.sites_DeletePermissions
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/sites':
    get:
      tags:
        - groups.site
      summary: Get sites from groups
      description: The collection of the sub-sites under this site.
      operationId: groups.sites_ListSites
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - displayName
                - displayName desc
                - error
                - error desc
                - root
                - root desc
                - sharepointIds
                - sharepointIds desc
                - siteCollection
                - siteCollection desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - error
                - root
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.siteCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/sites/{site-id1}':
    get:
      tags:
        - groups.site
      summary: Get sites from groups
      description: The collection of the sub-sites under this site.
      operationId: groups.sites_GetSites
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: site-id1
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - error
                - root
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
          links:
            createdByUser:
              operationId: groups.sites.Sites.GetCreatedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            lastModifiedByUser:
              operationId: groups.sites.Sites.GetLastModifiedGraphBPreUser
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            analytics:
              operationId: groups.sites.Sites.GetAnalytics
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            columns:
              operationId: groups.sites.Sites.ListColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            contentTypes:
              operationId: groups.sites.Sites.ListContentTypes
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            drive:
              operationId: groups.sites.Sites.GetDrive
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            drives:
              operationId: groups.sites.Sites.ListDrives
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            externalColumns:
              operationId: groups.sites.Sites.ListExternalColumns
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            items:
              operationId: groups.sites.Sites.ListItems
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            lists:
              operationId: groups.sites.Sites.ListLists
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            operations:
              operationId: groups.sites.Sites.ListOperations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            permissions:
              operationId: groups.sites.Sites.ListPermissions
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            sites:
              operationId: groups.sites.Sites.ListSites
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            termStore:
              operationId: groups.sites.Sites.GetTermStore
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            termStores:
              operationId: groups.sites.Sites.ListTermStores
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            onenote:
              operationId: groups.sites.Sites.GetOnenote
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore':
    get:
      tags:
        - groups.site
      summary: Get termStore from groups
      description: The default termStore under this site.
      operationId: groups.sites_GetTermStore
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - defaultLanguageTag
                - languageTags
                - groups
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - groups
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.store'
          links:
            groups:
              operationId: groups.sites.TermStore.ListGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
            sets:
              operationId: groups.sites.TermStore.ListSets
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property termStore in groups
      operationId: groups.sites_UpdateTermStore
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.store'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property termStore for groups
      operationId: groups.sites_DeleteTermStore
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups':
    get:
      tags:
        - groups.site
      summary: Get groups from groups
      description: Collection of all groups available in the term store.
      operationId: groups.sites.termStore_ListGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - displayName
                - displayName desc
                - parentSiteId
                - parentSiteId desc
                - scope
                - scope desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.groupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to groups for groups
      operationId: groups.sites.termStore_CreateGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}':
    get:
      tags:
        - groups.site
      summary: Get groups from groups
      description: Collection of all groups available in the term store.
      operationId: groups.sites.termStore_GetGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: groups.sites.termStore.Groups.ListSets
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property groups in groups
      operationId: groups.sites.termStore_UpdateGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property groups for groups
      operationId: groups.sites.termStore_DeleteGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      description: 'All sets under the group in a term [store].'
      operationId: groups.sites.termStore.groups_ListSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sets for groups
      operationId: groups.sites.termStore.groups_CreateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      description: 'All sets under the group in a term [store].'
      operationId: groups.sites.termStore.groups_GetSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.Sets.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
            parentGroup:
              operationId: groups.sites.termStore.groups.Sets.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
            relations:
              operationId: groups.sites.termStore.groups.Sets.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
            terms:
              operationId: groups.sites.termStore.groups.Sets.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sets in groups
      operationId: groups.sites.termStore.groups_UpdateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sets for groups
      operationId: groups.sites.termStore.groups_DeleteSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: 'Children terms of set in term [store].'
      operationId: groups.sites.termStore.groups.sets_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.groups.sets_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: 'Children terms of set in term [store].'
      operationId: groups.sites.termStore.groups.sets_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.groups.sets.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStore.groups.sets.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.groups.sets_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.groups.sets_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStore.groups.sets.children_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.groups.sets.children_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStore.groups.sets.children_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.groups.sets.children.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStore.groups.sets.children.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.groups.sets.children_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.groups.sets.children_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.groups.sets.children.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.groups.sets.children.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.groups.sets.children.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.groups.sets.children.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.children.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.groups.sets.children.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.groups.sets.children.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.groups.sets.children.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.groups.sets.children.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.groups.sets.children.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.groups.sets.children.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.children.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStore.groups.sets.children.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.children.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.groups.sets.children.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStore.groups.sets.children.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.groups.sets.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.groups.sets.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.groups.sets.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.groups.sets.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.groups.sets.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.groups.sets.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.groups.sets.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.groups.sets.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.groups.sets.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.groups.sets.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.groups.sets.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/children/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStore.groups.sets.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.groups.sets.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStore.groups.sets.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/parentGroup':
    get:
      tags:
        - groups.site
      summary: Get parentGroup from groups
      description: 'The parent [group] that contains the set.'
      operationId: groups.sites.termStore.groups.sets_GetParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: groups.sites.termStore.groups.sets.ParentGroup.ListSets
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property parentGroup in groups
      operationId: groups.sites.termStore.groups.sets_UpdateParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property parentGroup for groups
      operationId: groups.sites.termStore.groups.sets_DeleteParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: groups.sites.termStore.groups.sets_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.groups.sets_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: groups.sites.termStore.groups.sets_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.groups.sets.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.groups.sets.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.groups.sets_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.groups.sets_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.groups.sets.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.groups.sets.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.groups.sets.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.groups.sets.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      description: All the terms under the set.
      operationId: groups.sites.termStore.groups.sets_ListTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to terms for groups
      operationId: groups.sites.termStore.groups.sets_CreateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      description: All the terms under the set.
      operationId: groups.sites.termStore.groups.sets_GetTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.Terms.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.groups.sets.Terms.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStore.groups.sets.Terms.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property terms in groups
      operationId: groups.sites.termStore.groups.sets_UpdateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property terms for groups
      operationId: groups.sites.termStore.groups.sets_DeleteTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStore.groups.sets.terms_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.groups.sets.terms_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStore.groups.sets.terms_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStore.groups.sets.terms.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.groups.sets.terms_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.groups.sets.terms_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.groups.sets.terms.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.groups.sets.terms.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.groups.sets.terms.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.groups.sets.terms.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.terms.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.groups.sets.terms.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.groups.sets.terms.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.groups.sets.terms.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.groups.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.groups.sets.terms.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.groups.sets.terms.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStore.groups.sets.terms.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.terms.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStore.groups.sets.terms.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.groups.sets.terms_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.groups.sets.terms_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.groups.sets.terms_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.groups.sets.terms.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.terms.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.groups.sets.terms.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.groups.sets.terms_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.groups.sets.terms_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.groups.sets.terms.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.terms.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.groups.sets.terms.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.terms.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.groups.sets.terms.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.groups.sets.terms.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.groups.sets.terms.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/groups/{group-id1}/sets/{set-id}/terms/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStore.groups.sets.terms_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.groups.sets.terms.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStore.groups.sets.terms.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.groups.sets.terms.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStore.groups.sets.terms.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      description: Collection of all sets available in the term store.
      operationId: groups.sites.termStore_ListSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sets for groups
      operationId: groups.sites.termStore_CreateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      description: Collection of all sets available in the term store.
      operationId: groups.sites.termStore_GetSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.Sets.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
            parentGroup:
              operationId: groups.sites.termStore.Sets.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
            relations:
              operationId: groups.sites.termStore.Sets.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
            terms:
              operationId: groups.sites.termStore.Sets.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sets in groups
      operationId: groups.sites.termStore_UpdateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sets for groups
      operationId: groups.sites.termStore_DeleteSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: 'Children terms of set in term [store].'
      operationId: groups.sites.termStore.sets_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.sets_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: 'Children terms of set in term [store].'
      operationId: groups.sites.termStore.sets_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStore.sets.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.sets_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.sets_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStore.sets.children_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.sets.children_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStore.sets.children_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.children.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStore.sets.children.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.sets.children_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.sets.children_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.children.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.children.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.children.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.children.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.children.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.children.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.children.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.children.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.sets.children.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.children.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.sets.children.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.children.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.children.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.children.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.sets.children.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.children.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStore.sets.children.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStore.sets.children.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.children.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStore.sets.children.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.sets.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.sets.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.sets.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStore.sets.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStore.sets.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStore.sets.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup':
    get:
      tags:
        - groups.site
      summary: Get parentGroup from groups
      description: 'The parent [group] that contains the set.'
      operationId: groups.sites.termStore.sets_GetParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: groups.sites.termStore.sets.ParentGroup.ListSets
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property parentGroup in groups
      operationId: groups.sites.termStore.sets_UpdateParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property parentGroup for groups
      operationId: groups.sites.termStore.sets_DeleteParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      description: 'All sets under the group in a term [store].'
      operationId: groups.sites.termStore.sets.parentGroup_ListSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sets for groups
      operationId: groups.sites.termStore.sets.parentGroup_CreateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      description: 'All sets under the group in a term [store].'
      operationId: groups.sites.termStore.sets.parentGroup_GetSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.Sets.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.Sets.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.Sets.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.Sets.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sets in groups
      operationId: groups.sites.termStore.sets.parentGroup_UpdateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sets for groups
      operationId: groups.sites.termStore.sets.parentGroup_DeleteSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: 'Children terms of set in term [store].'
      operationId: groups.sites.termStore.sets.parentGroup.sets_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: 'Children terms of set in term [store].'
      operationId: groups.sites.termStore.sets.parentGroup.sets_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: groups.sites.termStore.sets.parentGroup.sets_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: groups.sites.termStore.sets.parentGroup.sets_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.sets.parentGroup.sets.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      description: All the terms under the set.
      operationId: groups.sites.termStore.sets.parentGroup.sets_ListTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to terms for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_CreateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      description: All the terms under the set.
      operationId: groups.sites.termStore.sets.parentGroup.sets_GetTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Terms.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Terms.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.Terms.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property terms in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_UpdateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property terms for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets_DeleteTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStore.sets.parentGroup.sets.terms_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStore.sets.parentGroup.sets.terms.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: groups.sites.termStore.sets_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: groups.sites.termStore.sets_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.sets.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.sets.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.sets.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      description: All the terms under the set.
      operationId: groups.sites.termStore.sets_ListTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to terms for groups
      operationId: groups.sites.termStore.sets_CreateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      description: All the terms under the set.
      operationId: groups.sites.termStore.sets_GetTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.Terms.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.Terms.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStore.sets.Terms.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property terms in groups
      operationId: groups.sites.termStore.sets_UpdateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property terms for groups
      operationId: groups.sites.termStore.sets_DeleteTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStore.sets.terms_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStore.sets.terms_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStore.sets.terms_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.terms.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStore.sets.terms.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStore.sets.terms_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStore.sets.terms_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.terms.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.terms.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.terms.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.terms.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.terms.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.terms.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.terms.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.terms.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.sets.terms.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.terms.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.terms.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.sets.terms.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStore.sets.terms.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStore.sets.terms.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStore.sets.terms.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStore.sets.terms.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.terms_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStore.sets.terms_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStore.sets.terms_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStore.sets.terms.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.terms.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStore.sets.terms.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStore.sets.terms_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStore.sets.terms_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStore.sets.terms.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.terms.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.terms.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStore.sets.terms.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStore.sets.terms.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.terms.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStore.sets.terms.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStore.sets.terms.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStore.sets.terms.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStore.sets.terms.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStore.sets.terms_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStore.sets.terms.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStore.sets.terms.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStore.sets.terms.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStore.sets.terms.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores':
    get:
      tags:
        - groups.site
      summary: Get termStores from groups
      description: The collection of termStores under this site.
      operationId: groups.sites_ListTermStores
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - defaultLanguageTag
                - defaultLanguageTag desc
                - languageTags
                - languageTags desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - defaultLanguageTag
                - languageTags
                - groups
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - groups
                - sets
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.storeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to termStores for groups
      operationId: groups.sites_CreateTermStores
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.store'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.store'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}':
    get:
      tags:
        - groups.site
      summary: Get termStores from groups
      description: The collection of termStores under this site.
      operationId: groups.sites_GetTermStores
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - defaultLanguageTag
                - languageTags
                - groups
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - groups
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.store'
          links:
            groups:
              operationId: groups.sites.TermStores.ListGroups
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
            sets:
              operationId: groups.sites.TermStores.ListSets
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property termStores in groups
      operationId: groups.sites_UpdateTermStores
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.store'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property termStores for groups
      operationId: groups.sites_DeleteTermStores
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups':
    get:
      tags:
        - groups.site
      summary: Get groups from groups
      description: Collection of all groups available in the term store.
      operationId: groups.sites.termStores_ListGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - displayName
                - displayName desc
                - parentSiteId
                - parentSiteId desc
                - scope
                - scope desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.groupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to groups for groups
      operationId: groups.sites.termStores_CreateGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}':
    get:
      tags:
        - groups.site
      summary: Get groups from groups
      description: Collection of all groups available in the term store.
      operationId: groups.sites.termStores_GetGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: groups.sites.termStores.Groups.ListSets
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property groups in groups
      operationId: groups.sites.termStores_UpdateGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property groups for groups
      operationId: groups.sites.termStores_DeleteGroups
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      description: 'All sets under the group in a term [store].'
      operationId: groups.sites.termStores.groups_ListSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sets for groups
      operationId: groups.sites.termStores.groups_CreateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      description: 'All sets under the group in a term [store].'
      operationId: groups.sites.termStores.groups_GetSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.groups.Sets.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
            parentGroup:
              operationId: groups.sites.termStores.groups.Sets.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
            relations:
              operationId: groups.sites.termStores.groups.Sets.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
            terms:
              operationId: groups.sites.termStores.groups.Sets.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sets in groups
      operationId: groups.sites.termStores.groups_UpdateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sets for groups
      operationId: groups.sites.termStores.groups_DeleteSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: 'Children terms of set in term [store].'
      operationId: groups.sites.termStores.groups.sets_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStores.groups.sets_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: 'Children terms of set in term [store].'
      operationId: groups.sites.termStores.groups.sets_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStores.groups.sets.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStores.groups.sets.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStores.groups.sets_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStores.groups.sets_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStores.groups.sets.children_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStores.groups.sets.children_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStores.groups.sets.children_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.children.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStores.groups.sets.children.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStores.groups.sets.children.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStores.groups.sets.children_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStores.groups.sets.children_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.groups.sets.children.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.groups.sets.children.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.groups.sets.children.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.groups.sets.children.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.children.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.groups.sets.children.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.groups.sets.children.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.groups.sets.children.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.groups.sets.children.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.children.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.groups.sets.children.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.children.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.groups.sets.children.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.children.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.groups.sets.children.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.groups.sets.children.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.children.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStores.groups.sets.children.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.children.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStores.groups.sets.children.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStores.groups.sets.children.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStores.groups.sets.children.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.groups.sets.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.groups.sets.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.groups.sets.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.groups.sets.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.groups.sets.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.groups.sets.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.groups.sets.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.groups.sets.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.groups.sets.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.groups.sets.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.groups.sets.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.groups.sets.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/children/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStores.groups.sets.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStores.groups.sets.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStores.groups.sets.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStores.groups.sets.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/parentGroup':
    get:
      tags:
        - groups.site
      summary: Get parentGroup from groups
      description: 'The parent [group] that contains the set.'
      operationId: groups.sites.termStores.groups.sets_GetParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: groups.sites.termStores.groups.sets.ParentGroup.ListSets
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property parentGroup in groups
      operationId: groups.sites.termStores.groups.sets_UpdateParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property parentGroup for groups
      operationId: groups.sites.termStores.groups.sets_DeleteParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: groups.sites.termStores.groups.sets_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.groups.sets_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: groups.sites.termStores.groups.sets_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.groups.sets.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.groups.sets.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.groups.sets_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.groups.sets_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.groups.sets.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.groups.sets.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.groups.sets.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.groups.sets.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.groups.sets.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      description: All the terms under the set.
      operationId: groups.sites.termStores.groups.sets_ListTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to terms for groups
      operationId: groups.sites.termStores.groups.sets_CreateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      description: All the terms under the set.
      operationId: groups.sites.termStores.groups.sets_GetTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.Terms.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStores.groups.sets.Terms.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStores.groups.sets.Terms.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property terms in groups
      operationId: groups.sites.termStores.groups.sets_UpdateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property terms for groups
      operationId: groups.sites.termStores.groups.sets_DeleteTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStores.groups.sets.terms_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStores.groups.sets.terms_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStores.groups.sets.terms_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.terms.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStores.groups.sets.terms.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStores.groups.sets.terms.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStores.groups.sets.terms_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStores.groups.sets.terms_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.groups.sets.terms.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.groups.sets.terms.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.groups.sets.terms.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.groups.sets.terms.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.terms.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.groups.sets.terms.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.groups.sets.terms.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.groups.sets.terms.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.groups.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.groups.sets.terms.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.terms.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.groups.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.terms.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.groups.sets.terms.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.groups.sets.terms.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStores.groups.sets.terms.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.terms.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStores.groups.sets.terms.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStores.groups.sets.terms.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStores.groups.sets.terms.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.groups.sets.terms_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.groups.sets.terms_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.groups.sets.terms_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.groups.sets.terms.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.terms.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.groups.sets.terms.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.groups.sets.terms_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.groups.sets.terms_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.groups.sets.terms.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.terms.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.terms.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.terms.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.groups.sets.terms.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.terms.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.groups.sets.terms.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.terms.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.groups.sets.terms.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.groups.sets.terms.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.terms.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.groups.sets.terms.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.groups.sets.terms.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/groups/{group-id1}/sets/{set-id}/terms/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStores.groups.sets.terms_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id1
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.groups.sets.terms.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStores.groups.sets.terms.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStores.groups.sets.terms.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStores.groups.sets.terms.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id1: $request.path.group-id1
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      description: Collection of all sets available in the term store.
      operationId: groups.sites.termStores_ListSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sets for groups
      operationId: groups.sites.termStores_CreateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      description: Collection of all sets available in the term store.
      operationId: groups.sites.termStores_GetSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.Sets.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
            parentGroup:
              operationId: groups.sites.termStores.Sets.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
            relations:
              operationId: groups.sites.termStores.Sets.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
            terms:
              operationId: groups.sites.termStores.Sets.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sets in groups
      operationId: groups.sites.termStores_UpdateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sets for groups
      operationId: groups.sites.termStores_DeleteSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: 'Children terms of set in term [store].'
      operationId: groups.sites.termStores.sets_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStores.sets_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: 'Children terms of set in term [store].'
      operationId: groups.sites.termStores.sets_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStores.sets.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStores.sets.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStores.sets_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStores.sets_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStores.sets.children_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStores.sets.children_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStores.sets.children_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.children.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStores.sets.children.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStores.sets.children.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStores.sets.children_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStores.sets.children_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.children.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.sets.children.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.children.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.sets.children.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.children.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.sets.children.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.sets.children.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.sets.children.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.sets.children.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.children.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.sets.children.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.children.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.sets.children.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.children.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.sets.children.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.sets.children.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.children.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStores.sets.children.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.children.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStores.sets.children.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStores.sets.children.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStores.sets.children.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.sets.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.sets.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.sets.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.sets.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.sets.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.sets.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.sets.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.sets.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.sets.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.sets.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStores.sets.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStores.sets.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStores.sets.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStores.sets.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup':
    get:
      tags:
        - groups.site
      summary: Get parentGroup from groups
      description: 'The parent [group] that contains the set.'
      operationId: groups.sites.termStores.sets_GetParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: groups.sites.termStores.sets.ParentGroup.ListSets
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property parentGroup in groups
      operationId: groups.sites.termStores.sets_UpdateParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property parentGroup for groups
      operationId: groups.sites.termStores.sets_DeleteParentGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      description: 'All sets under the group in a term [store].'
      operationId: groups.sites.termStores.sets.parentGroup_ListSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to sets for groups
      operationId: groups.sites.termStores.sets.parentGroup_CreateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}':
    get:
      tags:
        - groups.site
      summary: Get sets from groups
      description: 'All sets under the group in a term [store].'
      operationId: groups.sites.termStores.sets.parentGroup_GetSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.Sets.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            parentGroup:
              operationId: groups.sites.termStores.sets.parentGroup.Sets.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.Sets.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            terms:
              operationId: groups.sites.termStores.sets.parentGroup.Sets.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property sets in groups
      operationId: groups.sites.termStores.sets.parentGroup_UpdateSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property sets for groups
      operationId: groups.sites.termStores.sets.parentGroup_DeleteSets
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: 'Children terms of set in term [store].'
      operationId: groups.sites.termStores.sets.parentGroup.sets_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: 'Children terms of set in term [store].'
      operationId: groups.sites.termStores.sets.parentGroup.sets_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStores.sets.parentGroup.sets_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStores.sets.parentGroup.sets.children_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.children_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStores.sets.parentGroup.sets.children_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.children_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.children_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.parentGroup.sets.children.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.children.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.parentGroup.sets.children.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.children.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.children.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.children.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.parentGroup.sets.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.parentGroup.sets.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStores.sets.parentGroup.sets.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: groups.sites.termStores.sets.parentGroup.sets_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: groups.sites.termStores.sets.parentGroup.sets_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.sets.parentGroup.sets.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.sets.parentGroup.sets.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.sets.parentGroup.sets_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.sets.parentGroup.sets.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.sets.parentGroup.sets.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.sets.parentGroup.sets.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      description: All the terms under the set.
      operationId: groups.sites.termStores.sets.parentGroup.sets_ListTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to terms for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets_CreateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      description: All the terms under the set.
      operationId: groups.sites.termStores.sets.parentGroup.sets_GetTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.Terms.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.Terms.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.Terms.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property terms in groups
      operationId: groups.sites.termStores.sets.parentGroup.sets_UpdateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property terms for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets_DeleteTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStores.sets.parentGroup.sets.terms_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStores.sets.parentGroup.sets.terms.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: groups.sites.termStores.sets_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.sets_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: groups.sites.termStores.sets_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.sets.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.sets.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.sets_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.sets_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.sets.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.sets.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.sets.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.sets.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.sets.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      description: All the terms under the set.
      operationId: groups.sites.termStores.sets_ListTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to terms for groups
      operationId: groups.sites.termStores.sets_CreateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}':
    get:
      tags:
        - groups.site
      summary: Get terms from groups
      description: All the terms under the set.
      operationId: groups.sites.termStores.sets_GetTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.Terms.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStores.sets.Terms.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: groups.sites.termStores.sets.Terms.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property terms in groups
      operationId: groups.sites.termStores.sets_UpdateTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property terms for groups
      operationId: groups.sites.termStores.sets_DeleteTerms
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStores.sets.terms_ListChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to children for groups
      operationId: groups.sites.termStores.sets.terms_CreateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - groups.site
      summary: Get children from groups
      description: Children of current term.
      operationId: groups.sites.termStores.sets.terms_GetChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.terms.Children.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStores.sets.terms.Children.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: groups.sites.termStores.sets.terms.Children.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property children in groups
      operationId: groups.sites.termStores.sets.terms_UpdateChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property children for groups
      operationId: groups.sites.termStores.sets.terms_DeleteChildren
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.terms.children_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.sets.terms.children_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.terms.children_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.sets.terms.children.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.terms.children.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.sets.terms.children.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.sets.terms.children_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.sets.terms.children_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.sets.terms.children.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.terms.children.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.terms.children.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.sets.terms.children.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.sets.terms.children.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStores.sets.terms.children_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.terms.children.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: groups.sites.termStores.sets.terms.children.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: groups.sites.termStores.sets.terms.children.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: groups.sites.termStores.sets.terms.children.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/relations':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.terms_ListRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups.site
      summary: Create new navigation property to relations for groups
      operationId: groups.sites.termStores.sets.terms_CreateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - groups.site
      summary: Get relations from groups
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: groups.sites.termStores.sets.terms_GetRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: groups.sites.termStores.sets.terms.Relations.GetFromTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.terms.Relations.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: groups.sites.termStores.sets.terms.Relations.GetToTerm
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - groups.site
      summary: Update the navigation property relations in groups
      operationId: groups.sites.termStores.sets.terms_UpdateRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - groups.site
      summary: Delete navigation property relations for groups
      operationId: groups.sites.termStores.sets.terms_DeleteRelations
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - groups.site
      summary: Get fromTerm from groups
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: groups.sites.termStores.sets.terms.relations_GetFromTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.terms.relations.FromTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.terms.relations.FromTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.terms.relations.FromTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the relation is relevant.'
      operationId: groups.sites.termStores.sets.terms.relations_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.terms.relations.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: groups.sites.termStores.sets.terms.relations.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.terms.relations.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: groups.sites.termStores.sets.terms.relations.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - groups.site
      summary: Get toTerm from groups
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: groups.sites.termStores.sets.terms.relations_GetToTerm
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: groups.sites.termStores.sets.terms.relations.ToTerm.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: groups.sites.termStores.sets.terms.relations.ToTerm.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: groups.sites.termStores.sets.terms.relations.ToTerm.GetSet
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/set':
    get:
      tags:
        - groups.site
      summary: Get set from groups
      description: 'The [set] in which the term is created.'
      operationId: groups.sites.termStores.sets.terms_GetSet
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: groups.sites.termStores.sets.terms.Set.ListChildren
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: groups.sites.termStores.sets.terms.Set.GetParentGroup
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: groups.sites.termStores.sets.terms.Set.ListRelations
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: groups.sites.termStores.sets.terms.Set.ListTerms
              parameters:
                group-id: $request.path.group-id
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /sites:
    get:
      tags:
        - sites.site
      summary: Search for sites
      description: 'Search across a SharePoint tenant for [sites][] that match keywords provided. The only property that works for sorting is **createdDateTime**. The search filter is a free text search that uses multiple properties when retrieving the search results.'
      operationId: sites.site_ListSite
      parameters:
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - displayName
                - displayName desc
                - error
                - error desc
                - root
                - root desc
                - sharepointIds
                - sharepointIds desc
                - siteCollection
                - siteCollection desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - error
                - root
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.siteCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}':
    get:
      tags:
        - sites.site
      summary: Get a site resource
      description: "Retrieve properties and relationships for a [site][] resource.\nA **site** resource represents a team site in SharePoint."
      operationId: sites.site_GetSite
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - error
                - root
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
      responses:
        '200':
          description: Retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
          links:
            createdByUser:
              operationId: sites.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
            lastModifiedByUser:
              operationId: sites.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
            analytics:
              operationId: sites.GetAnalytics
              parameters:
                site-id: $request.path.site-id
            columns:
              operationId: sites.ListColumns
              parameters:
                site-id: $request.path.site-id
            contentTypes:
              operationId: sites.ListContentTypes
              parameters:
                site-id: $request.path.site-id
            drive:
              operationId: sites.GetDrive
              parameters:
                site-id: $request.path.site-id
            drives:
              operationId: sites.ListDrives
              parameters:
                site-id: $request.path.site-id
            externalColumns:
              operationId: sites.ListExternalColumns
              parameters:
                site-id: $request.path.site-id
            items:
              operationId: sites.ListItems
              parameters:
                site-id: $request.path.site-id
            lists:
              operationId: sites.ListLists
              parameters:
                site-id: $request.path.site-id
            operations:
              operationId: sites.ListOperations
              parameters:
                site-id: $request.path.site-id
            permissions:
              operationId: sites.ListPermissions
              parameters:
                site-id: $request.path.site-id
            sites:
              operationId: sites.ListSites
              parameters:
                site-id: $request.path.site-id
            termStore:
              operationId: sites.GetTermStore
              parameters:
                site-id: $request.path.site-id
            termStores:
              operationId: sites.ListTermStores
              parameters:
                site-id: $request.path.site-id
            onenote:
              operationId: sites.GetOnenote
              parameters:
                site-id: $request.path.site-id
            getActivitiesByInterval:
              operationId: sites.site.getActivitiesGraphBPreInterval
            getApplicableContentTypesForList:
              operationId: sites.site.getApplicableContentTypesGraphFPreList
            getByPath:
              operationId: sites.site.getGraphBPrePath
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.site
      summary: Update entity in sites
      operationId: sites.site_UpdateSite
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.site'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/analytics':
    get:
      tags:
        - sites.itemAnalytics
      summary: Get analytics from sites
      description: Analytics about the view activities that took place in this site.
      operationId: sites_GetAnalytics
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
          links:
            allTime:
              operationId: sites.Analytics.GetAllTime
              parameters:
                site-id: $request.path.site-id
            itemActivityStats:
              operationId: sites.Analytics.ListItemActivityStats
              parameters:
                site-id: $request.path.site-id
            lastSevenDays:
              operationId: sites.Analytics.GetLastSevenDays
              parameters:
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/columns':
    get:
      tags:
        - sites.columnDefinition
      summary: Get columns from sites
      description: The collection of column definitions reusable across lists under this site.
      operationId: sites_ListColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.columnDefinition
      summary: Create new navigation property to columns for sites
      operationId: sites_CreateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - sites.columnDefinition
      summary: Get columns from sites
      description: The collection of column definitions reusable across lists under this site.
      operationId: sites_GetColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.Columns.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.columnDefinition
      summary: Update the navigation property columns in sites
      operationId: sites_UpdateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.columnDefinition
      summary: Delete navigation property columns for sites
      operationId: sites_DeleteColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - sites.columnDefinition
      summary: Get sourceColumn from sites
      description: The source column for the content type column.
      operationId: sites.columns_GetSourceColumn
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.columns.SourceColumn.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes':
    get:
      tags:
        - sites.contentType
      summary: Get contentTypes from sites
      description: The collection of content types defined for this site.
      operationId: sites_ListContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.contentType
      summary: Create new navigation property to contentTypes for sites
      operationId: sites_CreateContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}':
    get:
      tags:
        - sites.contentType
      summary: Get contentTypes from sites
      description: The collection of content types defined for this site.
      operationId: sites_GetContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: sites.ContentTypes.GetBase
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: sites.ContentTypes.ListBaseTypes
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: sites.ContentTypes.ListColumnLinks
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: sites.ContentTypes.ListColumnPositions
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: sites.ContentTypes.ListColumns
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            associateWithHubSites:
              operationId: sites.site.contentTypes.contentType.associateGraphWPreHubSites
            copyToDefaultContentLocation:
              operationId: sites.site.contentTypes.contentType.copyToDefaultContentLocation
            isPublished:
              operationId: sites.site.contentTypes.contentType.isPublished
            publish:
              operationId: sites.site.contentTypes.contentType.publish
            unpublish:
              operationId: sites.site.contentTypes.contentType.unpublish
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.contentType
      summary: Update the navigation property contentTypes in sites
      operationId: sites_UpdateContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.contentType
      summary: Delete navigation property contentTypes for sites
      operationId: sites_DeleteContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/base':
    get:
      tags:
        - sites.contentType
      summary: Get base from sites
      description: Parent contentType from which this content type is derived.
      operationId: sites.contentTypes_GetBase
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: sites.contentTypes.Base.GetBase
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: sites.contentTypes.Base.ListBaseTypes
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: sites.contentTypes.Base.ListColumnLinks
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: sites.contentTypes.Base.ListColumnPositions
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: sites.contentTypes.Base.ListColumns
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/baseTypes':
    get:
      tags:
        - sites.contentType
      summary: Get baseTypes from sites
      description: The collection of content types that are ancestors of this content type.
      operationId: sites.contentTypes_ListBaseTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/baseTypes/{contentType-id1}':
    get:
      tags:
        - sites.contentType
      summary: Get baseTypes from sites
      description: The collection of content types that are ancestors of this content type.
      operationId: sites.contentTypes_GetBaseTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: contentType-id1
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: sites.contentTypes.BaseTypes.GetBase
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            baseTypes:
              operationId: sites.contentTypes.BaseTypes.ListBaseTypes
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnLinks:
              operationId: sites.contentTypes.BaseTypes.ListColumnLinks
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnPositions:
              operationId: sites.contentTypes.BaseTypes.ListColumnPositions
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columns:
              operationId: sites.contentTypes.BaseTypes.ListColumns
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columnLinks':
    get:
      tags:
        - sites.contentType
      summary: Get columnLinks from sites
      description: The collection of columns that are required by this content type.
      operationId: sites.contentTypes_ListColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - name
                - name desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnLinkCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.contentType
      summary: Create new navigation property to columnLinks for sites
      operationId: sites.contentTypes_CreateColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columnLinks/{columnLink-id}':
    get:
      tags:
        - sites.contentType
      summary: Get columnLinks from sites
      description: The collection of columns that are required by this content type.
      operationId: sites.contentTypes_GetColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.contentType
      summary: Update the navigation property columnLinks in sites
      operationId: sites.contentTypes_UpdateColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.contentType
      summary: Delete navigation property columnLinks for sites
      operationId: sites.contentTypes_DeleteColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columnPositions':
    get:
      tags:
        - sites.contentType
      summary: Get columnPositions from sites
      description: Column order information in a content type.
      operationId: sites.contentTypes_ListColumnPositions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columnPositions/{columnDefinition-id}':
    get:
      tags:
        - sites.contentType
      summary: Get columnPositions from sites
      description: Column order information in a content type.
      operationId: sites.contentTypes_GetColumnPositions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.contentTypes.ColumnPositions.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columns':
    get:
      tags:
        - sites.contentType
      summary: Get columns from sites
      description: The collection of column definitions for this contentType.
      operationId: sites.contentTypes_ListColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.contentType
      summary: Create new navigation property to columns for sites
      operationId: sites.contentTypes_CreateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - sites.contentType
      summary: Get columns from sites
      description: The collection of column definitions for this contentType.
      operationId: sites.contentTypes_GetColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.contentTypes.Columns.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.contentType
      summary: Update the navigation property columns in sites
      operationId: sites.contentTypes_UpdateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.contentType
      summary: Delete navigation property columns for sites
      operationId: sites.contentTypes_DeleteColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - sites.contentType
      summary: Get sourceColumn from sites
      description: The source column for the content type column.
      operationId: sites.contentTypes.columns_GetSourceColumn
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.contentTypes.columns.SourceColumn.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/contentTypes/{contentType-id}/microsoft.graph.associateWithHubSites':
    post:
      tags:
        - sites.Actions
      summary: Invoke action associateWithHubSites
      operationId: sites.contentTypes_associateGraphWPreHubSites
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                hubSiteUrls:
                  type: array
                  items:
                    type: string
                propagateToExistingLists:
                  type: boolean
                  default: false
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/contentTypes/{contentType-id}/microsoft.graph.copyToDefaultContentLocation':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToDefaultContentLocation
      operationId: sites.contentTypes_copyToDefaultContentLocation
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceFile:
                  $ref: '#/components/schemas/microsoft.graph.itemReference'
                destinationFileName:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/contentTypes/{contentType-id}/microsoft.graph.isPublished()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function isPublished
      operationId: sites.contentTypes_isPublished
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: boolean
                    default: false
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/contentTypes/{contentType-id}/microsoft.graph.publish':
    post:
      tags:
        - sites.Actions
      summary: Invoke action publish
      operationId: sites.contentTypes_publish
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/contentTypes/{contentType-id}/microsoft.graph.unpublish':
    post:
      tags:
        - sites.Actions
      summary: Invoke action unpublish
      operationId: sites.contentTypes_unpublish
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/contentTypes/microsoft.graph.addCopy':
    post:
      tags:
        - sites.Actions
      summary: Invoke action addCopy
      operationId: sites.contentTypes_addCopy
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                contentType:
                  type: string
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/contentTypes/microsoft.graph.addCopyFromContentTypeHub':
    post:
      tags:
        - sites.Actions
      summary: Invoke action addCopyFromContentTypeHub
      operationId: sites.contentTypes_addCopyFromContentTypeHub
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                contentTypeId:
                  type: string
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/contentTypes/microsoft.graph.getCompatibleHubContentTypes()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getCompatibleHubContentTypes
      operationId: sites.contentTypes_getCompatibleHubContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of contentType
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.contentType'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/drive':
    get:
      tags:
        - sites.drive
      summary: Get drive from sites
      description: The default drive (document library) for this site.
      operationId: sites_GetDrive
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.drive'
          links:
            createdByUser:
              operationId: sites.Drive.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
            lastModifiedByUser:
              operationId: sites.Drive.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
            bundles:
              operationId: sites.Drive.ListBundles
              parameters:
                site-id: $request.path.site-id
            following:
              operationId: sites.Drive.ListFollowing
              parameters:
                site-id: $request.path.site-id
            items:
              operationId: sites.Drive.ListItems
              parameters:
                site-id: $request.path.site-id
            list:
              operationId: sites.Drive.GetList
              parameters:
                site-id: $request.path.site-id
            root:
              operationId: sites.Drive.GetRoot
              parameters:
                site-id: $request.path.site-id
            special:
              operationId: sites.Drive.ListSpecial
              parameters:
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/drives':
    get:
      tags:
        - sites.drive
      summary: Get drives from sites
      description: The collection of drives (document libraries) under this site.
      operationId: sites_ListDrives
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - driveType
                - driveType desc
                - owner
                - owner desc
                - quota
                - quota desc
                - sharePointIds
                - sharePointIds desc
                - system
                - system desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.driveCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/drives/{drive-id}':
    get:
      tags:
        - sites.drive
      summary: Get drives from sites
      description: The collection of drives (document libraries) under this site.
      operationId: sites_GetDrives
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: drive-id
          in: path
          description: 'key: id of drive'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: drive
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.drive'
          links:
            createdByUser:
              operationId: sites.Drives.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            lastModifiedByUser:
              operationId: sites.Drives.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            bundles:
              operationId: sites.Drives.ListBundles
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            following:
              operationId: sites.Drives.ListFollowing
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            items:
              operationId: sites.Drives.ListItems
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            list:
              operationId: sites.Drives.GetList
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            root:
              operationId: sites.Drives.GetRoot
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
            special:
              operationId: sites.Drives.ListSpecial
              parameters:
                site-id: $request.path.site-id
                drive-id: $request.path.drive-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/externalColumns':
    get:
      tags:
        - sites.columnDefinition
      summary: Get externalColumns from sites
      operationId: sites_ListExternalColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/externalColumns/{columnDefinition-id}':
    get:
      tags:
        - sites.columnDefinition
      summary: Get externalColumns from sites
      operationId: sites_GetExternalColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.ExternalColumns.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists':
    get:
      tags:
        - sites.list
      summary: Get lists from sites
      description: The collection of lists under this site.
      operationId: sites_ListLists
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - displayName
                - displayName desc
                - list
                - list desc
                - sharepointIds
                - sharepointIds desc
                - system
                - system desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - list
                - sharepointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.listCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to lists for sites
      operationId: sites_CreateLists
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.list'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.list'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}':
    get:
      tags:
        - sites.list
      summary: Get lists from sites
      description: The collection of lists under this site.
      operationId: sites_GetLists
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - list
                - sharepointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - columns
                - contentTypes
                - drive
                - items
                - operations
                - subscriptions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.list'
          links:
            createdByUser:
              operationId: sites.Lists.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            lastModifiedByUser:
              operationId: sites.Lists.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            columns:
              operationId: sites.Lists.ListColumns
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            contentTypes:
              operationId: sites.Lists.ListContentTypes
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            drive:
              operationId: sites.Lists.GetDrive
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            items:
              operationId: sites.Lists.ListItems
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            operations:
              operationId: sites.Lists.ListOperations
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            subscriptions:
              operationId: sites.Lists.ListSubscriptions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property lists in sites
      operationId: sites_UpdateLists
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.list'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property lists for sites
      operationId: sites_DeleteLists
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/columns':
    get:
      tags:
        - sites.list
      summary: Get columns from sites
      description: The collection of field definitions for this list.
      operationId: sites.lists_ListColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to columns for sites
      operationId: sites.lists_CreateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - sites.list
      summary: Get columns from sites
      description: The collection of field definitions for this list.
      operationId: sites.lists_GetColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.lists.Columns.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property columns in sites
      operationId: sites.lists_UpdateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property columns for sites
      operationId: sites.lists_DeleteColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - sites.list
      summary: Get sourceColumn from sites
      description: The source column for the content type column.
      operationId: sites.lists.columns_GetSourceColumn
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.lists.columns.SourceColumn.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes':
    get:
      tags:
        - sites.list
      summary: Get contentTypes from sites
      description: The collection of content types present in this list.
      operationId: sites.lists_ListContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to contentTypes for sites
      operationId: sites.lists_CreateContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}':
    get:
      tags:
        - sites.list
      summary: Get contentTypes from sites
      description: The collection of content types present in this list.
      operationId: sites.lists_GetContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: sites.lists.ContentTypes.GetBase
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: sites.lists.ContentTypes.ListBaseTypes
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: sites.lists.ContentTypes.ListColumnLinks
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: sites.lists.ContentTypes.ListColumnPositions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: sites.lists.ContentTypes.ListColumns
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            associateWithHubSites:
              operationId: sites.site.lists.list.contentTypes.contentType.associateGraphWPreHubSites
            copyToDefaultContentLocation:
              operationId: sites.site.lists.list.contentTypes.contentType.copyToDefaultContentLocation
            isPublished:
              operationId: sites.site.lists.list.contentTypes.contentType.isPublished
            publish:
              operationId: sites.site.lists.list.contentTypes.contentType.publish
            unpublish:
              operationId: sites.site.lists.list.contentTypes.contentType.unpublish
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property contentTypes in sites
      operationId: sites.lists_UpdateContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.contentType'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property contentTypes for sites
      operationId: sites.lists_DeleteContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/base':
    get:
      tags:
        - sites.list
      summary: Get base from sites
      description: Parent contentType from which this content type is derived.
      operationId: sites.lists.contentTypes_GetBase
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: sites.lists.contentTypes.Base.GetBase
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            baseTypes:
              operationId: sites.lists.contentTypes.Base.ListBaseTypes
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnLinks:
              operationId: sites.lists.contentTypes.Base.ListColumnLinks
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columnPositions:
              operationId: sites.lists.contentTypes.Base.ListColumnPositions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
            columns:
              operationId: sites.lists.contentTypes.Base.ListColumns
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/baseTypes':
    get:
      tags:
        - sites.list
      summary: Get baseTypes from sites
      description: The collection of content types that are ancestors of this content type.
      operationId: sites.lists.contentTypes_ListBaseTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - associatedHubsUrls
                - associatedHubsUrls desc
                - description
                - description desc
                - documentSet
                - documentSet desc
                - documentTemplate
                - documentTemplate desc
                - group
                - group desc
                - hidden
                - hidden desc
                - inheritedFrom
                - inheritedFrom desc
                - isBuiltIn
                - isBuiltIn desc
                - name
                - name desc
                - order
                - order desc
                - parentId
                - parentId desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - sealed
                - sealed desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.contentTypeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/baseTypes/{contentType-id1}':
    get:
      tags:
        - sites.list
      summary: Get baseTypes from sites
      description: The collection of content types that are ancestors of this content type.
      operationId: sites.lists.contentTypes_GetBaseTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: contentType-id1
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - associatedHubsUrls
                - description
                - documentSet
                - documentTemplate
                - group
                - hidden
                - inheritedFrom
                - isBuiltIn
                - name
                - order
                - parentId
                - propagateChanges
                - readOnly
                - sealed
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - base
                - baseTypes
                - columnLinks
                - columnPositions
                - columns
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
          links:
            base:
              operationId: sites.lists.contentTypes.BaseTypes.GetBase
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            baseTypes:
              operationId: sites.lists.contentTypes.BaseTypes.ListBaseTypes
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnLinks:
              operationId: sites.lists.contentTypes.BaseTypes.ListColumnLinks
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columnPositions:
              operationId: sites.lists.contentTypes.BaseTypes.ListColumnPositions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
            columns:
              operationId: sites.lists.contentTypes.BaseTypes.ListColumns
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                contentType-id1: $request.path.contentType-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnLinks':
    get:
      tags:
        - sites.list
      summary: Get columnLinks from sites
      description: The collection of columns that are required by this content type.
      operationId: sites.lists.contentTypes_ListColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - name
                - name desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnLinkCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to columnLinks for sites
      operationId: sites.lists.contentTypes_CreateColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnLinks/{columnLink-id}':
    get:
      tags:
        - sites.list
      summary: Get columnLinks from sites
      description: The collection of columns that are required by this content type.
      operationId: sites.lists.contentTypes_GetColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - name
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property columnLinks in sites
      operationId: sites.lists.contentTypes_UpdateColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnLink'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property columnLinks for sites
      operationId: sites.lists.contentTypes_DeleteColumnLinks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnLink-id
          in: path
          description: 'key: id of columnLink'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnLink
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnPositions':
    get:
      tags:
        - sites.list
      summary: Get columnPositions from sites
      description: Column order information in a content type.
      operationId: sites.lists.contentTypes_ListColumnPositions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columnPositions/{columnDefinition-id}':
    get:
      tags:
        - sites.list
      summary: Get columnPositions from sites
      description: Column order information in a content type.
      operationId: sites.lists.contentTypes_GetColumnPositions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.lists.contentTypes.ColumnPositions.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columns':
    get:
      tags:
        - sites.list
      summary: Get columns from sites
      description: The collection of column definitions for this contentType.
      operationId: sites.lists.contentTypes_ListColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - boolean
                - boolean desc
                - calculated
                - calculated desc
                - choice
                - choice desc
                - columnGroup
                - columnGroup desc
                - contentApprovalStatus
                - contentApprovalStatus desc
                - currency
                - currency desc
                - dateTime
                - dateTime desc
                - defaultValue
                - defaultValue desc
                - description
                - description desc
                - displayName
                - displayName desc
                - enforceUniqueValues
                - enforceUniqueValues desc
                - geolocation
                - geolocation desc
                - hidden
                - hidden desc
                - hyperlinkOrPicture
                - hyperlinkOrPicture desc
                - indexed
                - indexed desc
                - isDeletable
                - isDeletable desc
                - isReorderable
                - isReorderable desc
                - isSealed
                - isSealed desc
                - lookup
                - lookup desc
                - name
                - name desc
                - number
                - number desc
                - personOrGroup
                - personOrGroup desc
                - propagateChanges
                - propagateChanges desc
                - readOnly
                - readOnly desc
                - required
                - required desc
                - sourceContentType
                - sourceContentType desc
                - term
                - term desc
                - text
                - text desc
                - thumbnail
                - thumbnail desc
                - type
                - type desc
                - validation
                - validation desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.columnDefinitionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to columns for sites
      operationId: sites.lists.contentTypes_CreateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}':
    get:
      tags:
        - sites.list
      summary: Get columns from sites
      description: The collection of column definitions for this contentType.
      operationId: sites.lists.contentTypes_GetColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.lists.contentTypes.Columns.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property columns in sites
      operationId: sites.lists.contentTypes_UpdateColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property columns for sites
      operationId: sites.lists.contentTypes_DeleteColumns
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/columns/{columnDefinition-id}/sourceColumn':
    get:
      tags:
        - sites.list
      summary: Get sourceColumn from sites
      description: The source column for the content type column.
      operationId: sites.lists.contentTypes.columns_GetSourceColumn
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
        - name: columnDefinition-id
          in: path
          description: 'key: id of columnDefinition'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: columnDefinition
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - boolean
                - calculated
                - choice
                - columnGroup
                - contentApprovalStatus
                - currency
                - dateTime
                - defaultValue
                - description
                - displayName
                - enforceUniqueValues
                - geolocation
                - hidden
                - hyperlinkOrPicture
                - indexed
                - isDeletable
                - isReorderable
                - isSealed
                - lookup
                - name
                - number
                - personOrGroup
                - propagateChanges
                - readOnly
                - required
                - sourceContentType
                - term
                - text
                - thumbnail
                - type
                - validation
                - sourceColumn
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sourceColumn
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          links:
            sourceColumn:
              operationId: sites.lists.contentTypes.columns.SourceColumn.GetSourceColumn
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                contentType-id: $request.path.contentType-id
                columnDefinition-id: $request.path.columnDefinition-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/microsoft.graph.associateWithHubSites':
    post:
      tags:
        - sites.Actions
      summary: Invoke action associateWithHubSites
      operationId: sites.lists.contentTypes_associateGraphWPreHubSites
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                hubSiteUrls:
                  type: array
                  items:
                    type: string
                propagateToExistingLists:
                  type: boolean
                  default: false
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/microsoft.graph.copyToDefaultContentLocation':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToDefaultContentLocation
      operationId: sites.lists.contentTypes_copyToDefaultContentLocation
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceFile:
                  $ref: '#/components/schemas/microsoft.graph.itemReference'
                destinationFileName:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/microsoft.graph.isPublished()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function isPublished
      operationId: sites.lists.contentTypes_isPublished
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: boolean
                    default: false
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/microsoft.graph.publish':
    post:
      tags:
        - sites.Actions
      summary: Invoke action publish
      operationId: sites.lists.contentTypes_publish
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/contentTypes/{contentType-id}/microsoft.graph.unpublish':
    post:
      tags:
        - sites.Actions
      summary: Invoke action unpublish
      operationId: sites.lists.contentTypes_unpublish
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: contentType-id
          in: path
          description: 'key: id of contentType'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: contentType
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/contentTypes/microsoft.graph.addCopy':
    post:
      tags:
        - sites.Actions
      summary: Invoke action addCopy
      operationId: sites.lists.contentTypes_addCopy
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                contentType:
                  type: string
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/contentTypes/microsoft.graph.addCopyFromContentTypeHub':
    post:
      tags:
        - sites.Actions
      summary: Invoke action addCopyFromContentTypeHub
      operationId: sites.lists.contentTypes_addCopyFromContentTypeHub
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                contentTypeId:
                  type: string
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.contentType'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/contentTypes/microsoft.graph.getCompatibleHubContentTypes()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getCompatibleHubContentTypes
      operationId: sites.lists.contentTypes_getCompatibleHubContentTypes
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of contentType
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.contentType'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/lists/{list-id}/drive':
    get:
      tags:
        - sites.list
      summary: Get drive from sites
      description: 'Only present on document libraries. Allows access to the list as a [drive][] resource with [driveItems][driveItem].'
      operationId: sites.lists_GetDrive
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - sharePointIds
                - system
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - bundles
                - following
                - items
                - list
                - root
                - special
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.drive'
          links:
            createdByUser:
              operationId: sites.lists.Drive.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            lastModifiedByUser:
              operationId: sites.lists.Drive.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            bundles:
              operationId: sites.lists.Drive.ListBundles
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            following:
              operationId: sites.lists.Drive.ListFollowing
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            items:
              operationId: sites.lists.Drive.ListItems
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            list:
              operationId: sites.lists.Drive.GetList
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            root:
              operationId: sites.lists.Drive.GetRoot
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
            special:
              operationId: sites.lists.Drive.ListSpecial
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items':
    get:
      tags:
        - sites.list
      summary: Get items from sites
      description: All items contained in the list.
      operationId: sites.lists_ListItems
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - contentType
                - contentType desc
                - sharepointIds
                - sharepointIds desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - sharepointIds
                - createdByUser
                - lastModifiedByUser
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.listItemCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to items for sites
      operationId: sites.lists_CreateItems
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItem'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItem'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}':
    get:
      tags:
        - sites.list
      summary: Get items from sites
      description: All items contained in the list.
      operationId: sites.lists_GetItems
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - contentType
                - sharepointIds
                - createdByUser
                - lastModifiedByUser
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - documentSetVersions
                - driveItem
                - fields
                - versions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItem'
          links:
            createdByUser:
              operationId: sites.lists.Items.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            lastModifiedByUser:
              operationId: sites.lists.Items.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            analytics:
              operationId: sites.lists.Items.GetAnalytics
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            documentSetVersions:
              operationId: sites.lists.Items.ListDocumentSetVersions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            driveItem:
              operationId: sites.lists.Items.GetDriveItem
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            fields:
              operationId: sites.lists.Items.GetFields
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            versions:
              operationId: sites.lists.Items.ListVersions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            getActivitiesByInterval:
              operationId: sites.site.lists.list.items.listItem.getActivitiesGraphBPreInterval
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property items in sites
      operationId: sites.lists_UpdateItems
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItem'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property items for sites
      operationId: sites.lists_DeleteItems
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/analytics':
    get:
      tags:
        - sites.list
      summary: Get analytics from sites
      description: Analytics about the view activities that took place on this item.
      operationId: sites.lists.items_GetAnalytics
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - allTime
                - itemActivityStats
                - lastSevenDays
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
          links:
            allTime:
              operationId: sites.lists.items.Analytics.GetAllTime
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            itemActivityStats:
              operationId: sites.lists.items.Analytics.ListItemActivityStats
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            lastSevenDays:
              operationId: sites.lists.items.Analytics.GetLastSevenDays
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/documentSetVersions':
    get:
      tags:
        - sites.list
      summary: Get documentSetVersions from sites
      description: Version information for a document set version created by a user.
      operationId: sites.lists.items_ListDocumentSetVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - publication
                - publication desc
                - comment
                - comment desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - items
                - items desc
                - shouldCaptureMinorVersion
                - shouldCaptureMinorVersion desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - comment
                - createdBy
                - createdDateTime
                - items
                - shouldCaptureMinorVersion
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.documentSetVersionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to documentSetVersions for sites
      operationId: sites.lists.items_CreateDocumentSetVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}':
    get:
      tags:
        - sites.list
      summary: Get documentSetVersions from sites
      description: Version information for a document set version created by a user.
      operationId: sites.lists.items_GetDocumentSetVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - comment
                - createdBy
                - createdDateTime
                - items
                - shouldCaptureMinorVersion
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
          links:
            fields:
              operationId: sites.lists.items.DocumentSetVersions.GetFields
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                documentSetVersion-id: $request.path.documentSetVersion-id
            restore:
              operationId: sites.site.lists.list.items.listItem.documentSetVersions.documentSetVersion.restore
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property documentSetVersions in sites
      operationId: sites.lists.items_UpdateDocumentSetVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property documentSetVersions for sites
      operationId: sites.lists.items_DeleteDocumentSetVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}/microsoft.graph.restore':
    post:
      tags:
        - sites.Actions
      summary: Invoke action restore
      operationId: sites.lists.items.documentSetVersions_restore
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: documentSetVersion-id
          in: path
          description: 'key: id of documentSetVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: documentSetVersion
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/driveItem':
    get:
      tags:
        - sites.list
      summary: Get driveItem from sites
      description: 'For document libraries, the driveItem relationship exposes the listItem as a [driveItem][]'
      operationId: sites.lists.items_GetDriveItem
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - audio
                - bundle
                - content
                - cTag
                - deleted
                - file
                - fileSystemInfo
                - folder
                - image
                - location
                - malware
                - package
                - pendingOperations
                - photo
                - publication
                - remoteItem
                - root
                - searchResult
                - shared
                - sharepointIds
                - size
                - specialFolder
                - video
                - webDavUrl
                - createdByUser
                - lastModifiedByUser
                - workbook
                - analytics
                - children
                - listItem
                - permissions
                - subscriptions
                - thumbnails
                - versions
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - workbook
                - analytics
                - children
                - listItem
                - permissions
                - subscriptions
                - thumbnails
                - versions
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
          links:
            createdByUser:
              operationId: sites.lists.items.DriveItem.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            lastModifiedByUser:
              operationId: sites.lists.items.DriveItem.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            workbook:
              operationId: sites.lists.items.DriveItem.GetWorkbook
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            analytics:
              operationId: sites.lists.items.DriveItem.GetAnalytics
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            children:
              operationId: sites.lists.items.DriveItem.ListChildren
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            listItem:
              operationId: sites.lists.items.DriveItem.GetListItem
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            permissions:
              operationId: sites.lists.items.DriveItem.ListPermissions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            subscriptions:
              operationId: sites.lists.items.DriveItem.ListSubscriptions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            thumbnails:
              operationId: sites.lists.items.DriveItem.ListThumbnails
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
            versions:
              operationId: sites.lists.items.DriveItem.ListVersions
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/driveItem/content':
    get:
      tags:
        - sites.list
      summary: Get content for the navigation property driveItem from sites
      description: 'The content stream, if the item represents a file.'
      operationId: sites.lists.items_GetDriveItemContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      responses:
        '200':
          description: Retrieved media content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    put:
      tags:
        - sites.list
      summary: Update content for the navigation property driveItem in sites
      description: 'The content stream, if the item represents a file.'
      operationId: sites.lists.items_SetDriveItemContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New media content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/fields':
    get:
      tags:
        - sites.list
      summary: Get fields from sites
      description: The values of the columns set on this list item.
      operationId: sites.lists.items_GetFields
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property fields in sites
      operationId: sites.lists.items_UpdateFields
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property fields for sites
      operationId: sites.lists.items_DeleteFields
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/microsoft.graph.getActivitiesByInterval()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getActivitiesByInterval
      operationId: sites.lists.items_getActivitiesGraphBPreInterval
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of listItem
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.itemActivityStat'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/microsoft.graph.getActivitiesByInterval(startDateTime=''{startDateTime}'',endDateTime=''{endDateTime}'',interval=''{interval}'')':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getActivitiesByInterval
      operationId: sites.lists.items_getActivitiesGraphBPreInterval
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: startDateTime
          in: path
          description: 'Usage: startDateTime=''{startDateTime}'''
          required: true
          schema:
            type: string
            nullable: true
        - name: endDateTime
          in: path
          description: 'Usage: endDateTime=''{endDateTime}'''
          required: true
          schema:
            type: string
            nullable: true
        - name: interval
          in: path
          description: 'Usage: interval=''{interval}'''
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of listItem
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.itemActivityStat'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions':
    get:
      tags:
        - sites.list
      summary: Get versions from sites
      description: The list of previous versions of the list item.
      operationId: sites.lists.items_ListVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - publication
                - publication desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.listItemVersionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to versions for sites
      operationId: sites.lists.items_CreateVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions/{listItemVersion-id}':
    get:
      tags:
        - sites.list
      summary: Get versions from sites
      description: The list of previous versions of the list item.
      operationId: sites.lists.items_GetVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - lastModifiedBy
                - lastModifiedDateTime
                - publication
                - fields
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fields
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.listItemVersion'
          links:
            fields:
              operationId: sites.lists.items.Versions.GetFields
              parameters:
                site-id: $request.path.site-id
                list-id: $request.path.list-id
                listItem-id: $request.path.listItem-id
                listItemVersion-id: $request.path.listItemVersion-id
            restoreVersion:
              operationId: sites.site.lists.list.items.listItem.versions.listItemVersion.restoreVersion
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property versions in sites
      operationId: sites.lists.items_UpdateVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property versions for sites
      operationId: sites.lists.items_DeleteVersions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions/{listItemVersion-id}/fields':
    get:
      tags:
        - sites.list
      summary: Get fields from sites
      description: A collection of the fields and values for this version of the list item.
      operationId: sites.lists.items.versions_GetFields
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property fields in sites
      operationId: sites.lists.items.versions_UpdateFields
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property fields for sites
      operationId: sites.lists.items.versions_DeleteFields
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/items/{listItem-id}/versions/{listItemVersion-id}/microsoft.graph.restoreVersion':
    post:
      tags:
        - sites.Actions
      summary: Invoke action restoreVersion
      operationId: sites.lists.items.versions_restoreVersion
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: listItem-id
          in: path
          description: 'key: id of listItem'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItem
        - name: listItemVersion-id
          in: path
          description: 'key: id of listItemVersion'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: listItemVersion
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/lists/{list-id}/operations':
    get:
      tags:
        - sites.list
      summary: Get operations from sites
      description: The collection of long-running operations on the list.
      operationId: sites.lists_ListOperations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - lastActionDateTime
                - lastActionDateTime desc
                - resourceLocation
                - resourceLocation desc
                - status
                - status desc
                - statusDetail
                - statusDetail desc
                - error
                - error desc
                - percentageComplete
                - percentageComplete desc
                - resourceId
                - resourceId desc
                - type
                - type desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - resourceLocation
                - status
                - statusDetail
                - error
                - percentageComplete
                - resourceId
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.richLongRunningOperationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to operations for sites
      operationId: sites.lists_CreateOperations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/operations/{richLongRunningOperation-id}':
    get:
      tags:
        - sites.list
      summary: Get operations from sites
      description: The collection of long-running operations on the list.
      operationId: sites.lists_GetOperations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - lastActionDateTime
                - resourceLocation
                - status
                - statusDetail
                - error
                - percentageComplete
                - resourceId
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property operations in sites
      operationId: sites.lists_UpdateOperations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property operations for sites
      operationId: sites.lists_DeleteOperations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: richLongRunningOperation-id
          in: path
          description: 'key: id of richLongRunningOperation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: richLongRunningOperation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/subscriptions':
    get:
      tags:
        - sites.list
      summary: Get subscriptions from sites
      description: The set of subscriptions on the list.
      operationId: sites.lists_ListSubscriptions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - applicationId
                - applicationId desc
                - changeType
                - changeType desc
                - clientState
                - clientState desc
                - creatorId
                - creatorId desc
                - encryptionCertificate
                - encryptionCertificate desc
                - encryptionCertificateId
                - encryptionCertificateId desc
                - expirationDateTime
                - expirationDateTime desc
                - includeResourceData
                - includeResourceData desc
                - latestSupportedTlsVersion
                - latestSupportedTlsVersion desc
                - lifecycleNotificationUrl
                - lifecycleNotificationUrl desc
                - notificationQueryOptions
                - notificationQueryOptions desc
                - notificationUrl
                - notificationUrl desc
                - notificationUrlAppId
                - notificationUrlAppId desc
                - resource
                - resource desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - applicationId
                - changeType
                - clientState
                - creatorId
                - encryptionCertificate
                - encryptionCertificateId
                - expirationDateTime
                - includeResourceData
                - latestSupportedTlsVersion
                - lifecycleNotificationUrl
                - notificationQueryOptions
                - notificationUrl
                - notificationUrlAppId
                - resource
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.subscriptionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.list
      summary: Create new navigation property to subscriptions for sites
      operationId: sites.lists_CreateSubscriptions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.subscription'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.subscription'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/subscriptions/{subscription-id}':
    get:
      tags:
        - sites.list
      summary: Get subscriptions from sites
      description: The set of subscriptions on the list.
      operationId: sites.lists_GetSubscriptions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - applicationId
                - changeType
                - clientState
                - creatorId
                - encryptionCertificate
                - encryptionCertificateId
                - expirationDateTime
                - includeResourceData
                - latestSupportedTlsVersion
                - lifecycleNotificationUrl
                - notificationQueryOptions
                - notificationUrl
                - notificationUrlAppId
                - resource
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.subscription'
          links:
            reauthorize:
              operationId: sites.site.lists.list.subscriptions.subscription.reauthorize
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.list
      summary: Update the navigation property subscriptions in sites
      operationId: sites.lists_UpdateSubscriptions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.subscription'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.list
      summary: Delete navigation property subscriptions for sites
      operationId: sites.lists_DeleteSubscriptions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/lists/{list-id}/subscriptions/{subscription-id}/microsoft.graph.reauthorize':
    post:
      tags:
        - sites.Actions
      summary: Invoke action reauthorize
      operationId: sites.lists.subscriptions_reauthorize
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: list-id
          in: path
          description: 'key: id of list'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: list
        - name: subscription-id
          in: path
          description: 'key: id of subscription'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: subscription
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/microsoft.graph.getActivitiesByInterval()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getActivitiesByInterval
      operationId: sites_getActivitiesGraphBPreInterval
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of site
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.itemActivityStat'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/microsoft.graph.getActivitiesByInterval(startDateTime=''{startDateTime}'',endDateTime=''{endDateTime}'',interval=''{interval}'')':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getActivitiesByInterval
      operationId: sites_getActivitiesGraphBPreInterval
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: startDateTime
          in: path
          description: 'Usage: startDateTime=''{startDateTime}'''
          required: true
          schema:
            type: string
            nullable: true
        - name: endDateTime
          in: path
          description: 'Usage: endDateTime=''{endDateTime}'''
          required: true
          schema:
            type: string
            nullable: true
        - name: interval
          in: path
          description: 'Usage: interval=''{interval}'''
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of site
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.itemActivityStat'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/microsoft.graph.getApplicableContentTypesForList(listId=''{listId}'')':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getApplicableContentTypesForList
      operationId: sites_getApplicableContentTypesGraphFPreList
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: listId
          in: path
          description: 'Usage: listId=''{listId}'''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of site
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.contentType'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/microsoft.graph.getByPath(path=''{path}'')':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getByPath
      operationId: sites_getGraphBPrePath
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: path
          in: path
          description: 'Usage: path=''{path}'''
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/microsoft.graph.copyNotebook':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyNotebook
      operationId: sites.onenote.notebooks_copyNotebook
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                notebookFolder:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/microsoft.graph.copyToNotebook':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToNotebook
      operationId: sites.onenote.notebooks.sectionGroups.sections_copyToNotebook
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/microsoft.graph.copyToSectionGroup':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSectionGroup
      operationId: sites.onenote.notebooks.sectionGroups.sections_copyToSectionGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.copyToSection':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSection
      operationId: sites.onenote.notebooks.sectionGroups.sections.pages_copyToSection
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.onenotePatchContent':
    post:
      tags:
        - sites.Actions
      summary: Invoke action onenotePatchContent
      operationId: sites.onenote.notebooks.sectionGroups.sections.pages_onenotePatchContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                commands:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.onenotePatchContentCommand'
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.preview()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function preview
      operationId: sites.onenote.notebooks.sectionGroups.sections.pages_preview
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePagePreview'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/microsoft.graph.copyToNotebook':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToNotebook
      operationId: sites.onenote.notebooks.sections_copyToNotebook
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/microsoft.graph.copyToSectionGroup':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSectionGroup
      operationId: sites.onenote.notebooks.sections_copyToSectionGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.copyToSection':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSection
      operationId: sites.onenote.notebooks.sections.pages_copyToSection
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.onenotePatchContent':
    post:
      tags:
        - sites.Actions
      summary: Invoke action onenotePatchContent
      operationId: sites.onenote.notebooks.sections.pages_onenotePatchContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                commands:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.onenotePatchContentCommand'
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/{notebook-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.preview()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function preview
      operationId: sites.onenote.notebooks.sections.pages_preview
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: notebook-id
          in: path
          description: 'key: id of notebook'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: notebook
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePagePreview'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/onenote/notebooks/microsoft.graph.getNotebookFromWebUrl':
    post:
      tags:
        - sites.Actions
      summary: Invoke action getNotebookFromWebUrl
      operationId: sites.onenote.notebooks_getNotebookFromWebUrl
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                webUrl:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.CopyNotebookModel'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/notebooks/microsoft.graph.getRecentNotebooks(includePersonalNotebooks={includePersonalNotebooks})':
    get:
      tags:
        - sites.Functions
      summary: Invoke function getRecentNotebooks
      operationId: sites.onenote.notebooks_getRecentNotebooks
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: includePersonalNotebooks
          in: path
          description: 'Usage: includePersonalNotebooks={includePersonalNotebooks}'
          required: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of notebook
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.recentNotebook'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/onenote/pages/{onenotePage-id}/microsoft.graph.copyToSection':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSection
      operationId: sites.onenote.pages_copyToSection
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/pages/{onenotePage-id}/microsoft.graph.onenotePatchContent':
    post:
      tags:
        - sites.Actions
      summary: Invoke action onenotePatchContent
      operationId: sites.onenote.pages_onenotePatchContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                commands:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.onenotePatchContentCommand'
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/pages/{onenotePage-id}/microsoft.graph.preview()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function preview
      operationId: sites.onenote.pages_preview
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePagePreview'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/microsoft.graph.copyToNotebook':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToNotebook
      operationId: sites.onenote.sectionGroups.sections_copyToNotebook
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/microsoft.graph.copyToSectionGroup':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSectionGroup
      operationId: sites.onenote.sectionGroups.sections_copyToSectionGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.copyToSection':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSection
      operationId: sites.onenote.sectionGroups.sections.pages_copyToSection
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.onenotePatchContent':
    post:
      tags:
        - sites.Actions
      summary: Invoke action onenotePatchContent
      operationId: sites.onenote.sectionGroups.sections.pages_onenotePatchContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                commands:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.onenotePatchContentCommand'
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sectionGroups/{sectionGroup-id}/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.preview()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function preview
      operationId: sites.onenote.sectionGroups.sections.pages_preview
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: sectionGroup-id
          in: path
          description: 'key: id of sectionGroup'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: sectionGroup
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePagePreview'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/onenote/sections/{onenoteSection-id}/microsoft.graph.copyToNotebook':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToNotebook
      operationId: sites.onenote.sections_copyToNotebook
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sections/{onenoteSection-id}/microsoft.graph.copyToSectionGroup':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSectionGroup
      operationId: sites.onenote.sections_copyToSectionGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                renameAs:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.copyToSection':
    post:
      tags:
        - sites.Actions
      summary: Invoke action copyToSection
      operationId: sites.onenote.sections.pages_copyToSection
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  nullable: true
                groupId:
                  type: string
                  nullable: true
                siteCollectionId:
                  type: string
                  nullable: true
                siteId:
                  type: string
                  nullable: true
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.onenotePatchContent':
    post:
      tags:
        - sites.Actions
      summary: Invoke action onenotePatchContent
      operationId: sites.onenote.sections.pages_onenotePatchContent
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                commands:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.onenotePatchContentCommand'
              additionalProperties:
                type: object
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/onenote/sections/{onenoteSection-id}/pages/{onenotePage-id}/microsoft.graph.preview()':
    get:
      tags:
        - sites.Functions
      summary: Invoke function preview
      operationId: sites.onenote.sections.pages_preview
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: onenoteSection-id
          in: path
          description: 'key: id of onenoteSection'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenoteSection
        - name: onenotePage-id
          in: path
          description: 'key: id of onenotePage'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: onenotePage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.onenotePagePreview'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: function
  '/sites/{site-id}/permissions':
    get:
      tags:
        - sites.permission
      summary: Get permissions from sites
      description: The permissions associated with the site. Nullable.
      operationId: sites_ListPermissions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - expirationDateTime
                - expirationDateTime desc
                - grantedTo
                - grantedTo desc
                - grantedToIdentities
                - grantedToIdentities desc
                - grantedToIdentitiesV2
                - grantedToIdentitiesV2 desc
                - grantedToV2
                - grantedToV2 desc
                - hasPassword
                - hasPassword desc
                - inheritedFrom
                - inheritedFrom desc
                - invitation
                - invitation desc
                - link
                - link desc
                - roles
                - roles desc
                - shareId
                - shareId desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - expirationDateTime
                - grantedTo
                - grantedToIdentities
                - grantedToIdentitiesV2
                - grantedToV2
                - hasPassword
                - inheritedFrom
                - invitation
                - link
                - roles
                - shareId
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.permissionCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.permission
      summary: Create new navigation property to permissions for sites
      operationId: sites_CreatePermissions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.permission'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.permission'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/permissions/{permission-id}':
    get:
      tags:
        - sites.permission
      summary: Get permissions from sites
      description: The permissions associated with the site. Nullable.
      operationId: sites_GetPermissions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - expirationDateTime
                - grantedTo
                - grantedToIdentities
                - grantedToIdentitiesV2
                - grantedToV2
                - hasPassword
                - inheritedFrom
                - invitation
                - link
                - roles
                - shareId
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.permission'
          links:
            grant:
              operationId: sites.site.permissions.permission.grant
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.permission
      summary: Update the navigation property permissions in sites
      operationId: sites_UpdatePermissions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.permission'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.permission
      summary: Delete navigation property permissions for sites
      operationId: sites_DeletePermissions
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/permissions/{permission-id}/microsoft.graph.grant':
    post:
      tags:
        - sites.Actions
      summary: Invoke action grant
      operationId: sites.permissions_grant
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: permission-id
          in: path
          description: 'key: id of permission'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: permission
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                roles:
                  type: array
                  items:
                    type: string
                    nullable: true
                recipients:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.driveRecipient'
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of permission
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.permission'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/sites/{site-id}/sites':
    get:
      tags:
        - sites.site
      summary: Get sites from sites
      description: The collection of the sub-sites under this site.
      operationId: sites_ListSites
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - displayName
                - displayName desc
                - error
                - error desc
                - root
                - root desc
                - sharepointIds
                - sharepointIds desc
                - siteCollection
                - siteCollection desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - error
                - root
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.siteCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/sites/{site-id1}':
    get:
      tags:
        - sites.site
      summary: Get sites from sites
      description: The collection of the sub-sites under this site.
      operationId: sites_GetSites
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: site-id1
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - error
                - root
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
          links:
            createdByUser:
              operationId: sites.Sites.GetCreatedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            lastModifiedByUser:
              operationId: sites.Sites.GetLastModifiedGraphBPreUser
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            analytics:
              operationId: sites.Sites.GetAnalytics
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            columns:
              operationId: sites.Sites.ListColumns
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            contentTypes:
              operationId: sites.Sites.ListContentTypes
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            drive:
              operationId: sites.Sites.GetDrive
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            drives:
              operationId: sites.Sites.ListDrives
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            externalColumns:
              operationId: sites.Sites.ListExternalColumns
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            items:
              operationId: sites.Sites.ListItems
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            lists:
              operationId: sites.Sites.ListLists
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            operations:
              operationId: sites.Sites.ListOperations
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            permissions:
              operationId: sites.Sites.ListPermissions
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            sites:
              operationId: sites.Sites.ListSites
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            termStore:
              operationId: sites.Sites.GetTermStore
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            termStores:
              operationId: sites.Sites.ListTermStores
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
            onenote:
              operationId: sites.Sites.GetOnenote
              parameters:
                site-id: $request.path.site-id
                site-id1: $request.path.site-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore':
    get:
      tags:
        - sites.store
      summary: Get termStore from sites
      description: The default termStore under this site.
      operationId: sites_GetTermStore
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - defaultLanguageTag
                - languageTags
                - groups
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - groups
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.store'
          links:
            groups:
              operationId: sites.TermStore.ListGroups
              parameters:
                site-id: $request.path.site-id
            sets:
              operationId: sites.TermStore.ListSets
              parameters:
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property termStore in sites
      operationId: sites_UpdateTermStore
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.store'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property termStore for sites
      operationId: sites_DeleteTermStore
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups':
    get:
      tags:
        - sites.store
      summary: Get groups from sites
      description: Collection of all groups available in the term store.
      operationId: sites.termStore_ListGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - displayName
                - displayName desc
                - parentSiteId
                - parentSiteId desc
                - scope
                - scope desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.groupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to groups for sites
      operationId: sites.termStore_CreateGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}':
    get:
      tags:
        - sites.store
      summary: Get groups from sites
      description: Collection of all groups available in the term store.
      operationId: sites.termStore_GetGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: sites.termStore.Groups.ListSets
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property groups in sites
      operationId: sites.termStore_UpdateGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property groups for sites
      operationId: sites.termStore_DeleteGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      description: 'All sets under the group in a term [store].'
      operationId: sites.termStore.groups_ListSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to sets for sites
      operationId: sites.termStore.groups_CreateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      description: 'All sets under the group in a term [store].'
      operationId: sites.termStore.groups_GetSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.Sets.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
            parentGroup:
              operationId: sites.termStore.groups.Sets.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
            relations:
              operationId: sites.termStore.groups.Sets.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
            terms:
              operationId: sites.termStore.groups.Sets.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property sets in sites
      operationId: sites.termStore.groups_UpdateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property sets for sites
      operationId: sites.termStore.groups_DeleteSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: 'Children terms of set in term [store].'
      operationId: sites.termStore.groups.sets_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.groups.sets_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: 'Children terms of set in term [store].'
      operationId: sites.termStore.groups.sets_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.groups.sets.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: sites.termStore.groups.sets.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.groups.sets_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.groups.sets_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStore.groups.sets.children_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.groups.sets.children_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStore.groups.sets.children_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.groups.sets.children.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStore.groups.sets.children.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.groups.sets.children_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.groups.sets.children_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.groups.sets.children.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.groups.sets.children.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.groups.sets.children.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.groups.sets.children.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.children.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.groups.sets.children.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.groups.sets.children.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.groups.sets.children.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.groups.sets.children.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.children.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.groups.sets.children.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.groups.sets.children.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.children.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.groups.sets.children.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.groups.sets.children.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.children.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStore.groups.sets.children.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStore.groups.sets.children.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.groups.sets.children.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStore.groups.sets.children.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.groups.sets.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.groups.sets.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.groups.sets.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.groups.sets.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.groups.sets.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.groups.sets.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.groups.sets.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.groups.sets.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.groups.sets.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.groups.sets.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.groups.sets.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.groups.sets.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/children/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStore.groups.sets.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStore.groups.sets.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.groups.sets.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStore.groups.sets.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/parentGroup':
    get:
      tags:
        - sites.store
      summary: Get parentGroup from sites
      description: 'The parent [group] that contains the set.'
      operationId: sites.termStore.groups.sets_GetParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: sites.termStore.groups.sets.ParentGroup.ListSets
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property parentGroup in sites
      operationId: sites.termStore.groups.sets_UpdateParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property parentGroup for sites
      operationId: sites.termStore.groups.sets_DeleteParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: sites.termStore.groups.sets_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.groups.sets_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: sites.termStore.groups.sets_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.groups.sets.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.groups.sets.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.groups.sets_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.groups.sets_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.groups.sets.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.groups.sets.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.groups.sets.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.groups.sets.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.groups.sets.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      description: All the terms under the set.
      operationId: sites.termStore.groups.sets_ListTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to terms for sites
      operationId: sites.termStore.groups.sets_CreateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      description: All the terms under the set.
      operationId: sites.termStore.groups.sets_GetTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.Terms.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.groups.sets.Terms.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: sites.termStore.groups.sets.Terms.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property terms in sites
      operationId: sites.termStore.groups.sets_UpdateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property terms for sites
      operationId: sites.termStore.groups.sets_DeleteTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStore.groups.sets.terms_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.groups.sets.terms_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStore.groups.sets.terms_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.groups.sets.terms.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStore.groups.sets.terms.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.groups.sets.terms_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.groups.sets.terms_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.groups.sets.terms.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.groups.sets.terms.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.groups.sets.terms.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.groups.sets.terms.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.terms.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.groups.sets.terms.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.groups.sets.terms.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.groups.sets.terms.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.groups.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.groups.sets.terms.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.groups.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.terms.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.groups.sets.terms.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.groups.sets.terms.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStore.groups.sets.terms.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStore.groups.sets.terms.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.groups.sets.terms.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStore.groups.sets.terms.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.groups.sets.terms_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.groups.sets.terms_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.groups.sets.terms_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.groups.sets.terms.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.terms.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.groups.sets.terms.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.groups.sets.terms_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.groups.sets.terms_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.groups.sets.terms.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.terms.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.terms.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.groups.sets.terms.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.groups.sets.terms.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.terms.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.groups.sets.terms.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.groups.sets.terms.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.groups.sets.terms.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.groups.sets.terms.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/groups/{group-id}/sets/{set-id}/terms/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStore.groups.sets.terms_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.groups.sets.terms.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStore.groups.sets.terms.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.groups.sets.terms.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStore.groups.sets.terms.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      description: Collection of all sets available in the term store.
      operationId: sites.termStore_ListSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to sets for sites
      operationId: sites.termStore_CreateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      description: Collection of all sets available in the term store.
      operationId: sites.termStore_GetSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.Sets.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
            parentGroup:
              operationId: sites.termStore.Sets.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
            relations:
              operationId: sites.termStore.Sets.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
            terms:
              operationId: sites.termStore.Sets.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property sets in sites
      operationId: sites.termStore_UpdateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property sets for sites
      operationId: sites.termStore_DeleteSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: 'Children terms of set in term [store].'
      operationId: sites.termStore.sets_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.sets_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: 'Children terms of set in term [store].'
      operationId: sites.termStore.sets_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: sites.termStore.sets.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.sets_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.sets_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStore.sets.children_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.sets.children_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStore.sets.children_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.children.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.children.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStore.sets.children.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.sets.children_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.sets.children_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.children.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.children.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.children.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.children.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.children.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.children.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.children.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.children.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.sets.children.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.children.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.sets.children.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.children.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.children.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.children.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.children.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.sets.children.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.children.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStore.sets.children.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.children.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStore.sets.children.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.children.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStore.sets.children.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.sets.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.sets.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.sets.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/children/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStore.sets.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStore.sets.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStore.sets.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup':
    get:
      tags:
        - sites.store
      summary: Get parentGroup from sites
      description: 'The parent [group] that contains the set.'
      operationId: sites.termStore.sets_GetParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: sites.termStore.sets.ParentGroup.ListSets
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property parentGroup in sites
      operationId: sites.termStore.sets_UpdateParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property parentGroup for sites
      operationId: sites.termStore.sets_DeleteParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      description: 'All sets under the group in a term [store].'
      operationId: sites.termStore.sets.parentGroup_ListSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to sets for sites
      operationId: sites.termStore.sets.parentGroup_CreateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      description: 'All sets under the group in a term [store].'
      operationId: sites.termStore.sets.parentGroup_GetSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.Sets.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.Sets.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            relations:
              operationId: sites.termStore.sets.parentGroup.Sets.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            terms:
              operationId: sites.termStore.sets.parentGroup.Sets.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property sets in sites
      operationId: sites.termStore.sets.parentGroup_UpdateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property sets for sites
      operationId: sites.termStore.sets.parentGroup_DeleteSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: 'Children terms of set in term [store].'
      operationId: sites.termStore.sets.parentGroup.sets_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.sets.parentGroup.sets_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: 'Children terms of set in term [store].'
      operationId: sites.termStore.sets.parentGroup.sets_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.sets.parentGroup.sets_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.sets.parentGroup.sets_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStore.sets.parentGroup.sets.children_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.sets.parentGroup.sets.children_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStore.sets.parentGroup.sets.children_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.sets.parentGroup.sets.children_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.sets.parentGroup.sets.children_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.parentGroup.sets.children.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.children.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.parentGroup.sets.children.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.parentGroup.sets.children.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.children.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.sets.parentGroup.sets.children.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.sets.parentGroup.sets.children.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.sets.parentGroup.sets.children.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStore.sets.parentGroup.sets.children.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.children.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.parentGroup.sets.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.parentGroup.sets.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.parentGroup.sets.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.parentGroup.sets.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.parentGroup.sets.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.sets.parentGroup.sets.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.sets.parentGroup.sets.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.sets.parentGroup.sets.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStore.sets.parentGroup.sets.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: sites.termStore.sets.parentGroup.sets_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.parentGroup.sets_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: sites.termStore.sets.parentGroup.sets_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.parentGroup.sets.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.parentGroup.sets.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.parentGroup.sets_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.parentGroup.sets_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.sets.parentGroup.sets.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.sets.parentGroup.sets.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.sets.parentGroup.sets.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      description: All the terms under the set.
      operationId: sites.termStore.sets.parentGroup.sets_ListTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to terms for sites
      operationId: sites.termStore.sets.parentGroup.sets_CreateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      description: All the terms under the set.
      operationId: sites.termStore.sets.parentGroup.sets_GetTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.Terms.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.Terms.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.Terms.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property terms in sites
      operationId: sites.termStore.sets.parentGroup.sets_UpdateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property terms for sites
      operationId: sites.termStore.sets.parentGroup.sets_DeleteTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStore.sets.parentGroup.sets.terms_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStore.sets.parentGroup.sets.terms_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.parentGroup.sets.terms.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.parentGroup.sets.terms.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.terms.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStore.sets.parentGroup.sets.terms.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.terms.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.parentGroup.sets.terms_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.parentGroup.sets.terms_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.parentGroup.sets.terms_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.sets.parentGroup.sets.terms.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.sets.parentGroup.sets.terms.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.sets.parentGroup.sets.terms.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.parentGroup.sets.terms.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStore.sets.parentGroup.sets.terms_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStore.sets.parentGroup.sets.terms.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: sites.termStore.sets_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: sites.termStore.sets_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.sets.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.sets.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.sets.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      description: All the terms under the set.
      operationId: sites.termStore.sets_ListTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to terms for sites
      operationId: sites.termStore.sets_CreateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      description: All the terms under the set.
      operationId: sites.termStore.sets_GetTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.Terms.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.Terms.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: sites.termStore.sets.Terms.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property terms in sites
      operationId: sites.termStore.sets_UpdateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property terms for sites
      operationId: sites.termStore.sets_DeleteTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStore.sets.terms_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStore.sets.terms_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStore.sets.terms_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.terms.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.terms.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStore.sets.terms.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStore.sets.terms_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStore.sets.terms_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.terms.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.terms.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.terms.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.terms.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.terms.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.terms.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.terms.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.terms.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.sets.terms.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.terms.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.terms.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.terms.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.sets.terms.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStore.sets.terms.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.terms.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStore.sets.terms.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStore.sets.terms.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStore.sets.terms.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.terms_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStore.sets.terms_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStore.sets.terms_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStore.sets.terms.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.terms.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStore.sets.terms.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStore.sets.terms_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStore.sets.terms_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStore.sets.terms.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.terms.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.terms.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.terms.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStore.sets.terms.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.terms.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStore.sets.terms.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.terms.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStore.sets.terms.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStore.sets.terms.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStore.sets.terms.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStore.sets.terms.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStore.sets.terms.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStore/sets/{set-id}/terms/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStore.sets.terms_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStore.sets.terms.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStore.sets.terms.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStore.sets.terms.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStore.sets.terms.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores':
    get:
      tags:
        - sites.store
      summary: Get termStores from sites
      description: The collection of termStores under this site.
      operationId: sites_ListTermStores
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - defaultLanguageTag
                - defaultLanguageTag desc
                - languageTags
                - languageTags desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - defaultLanguageTag
                - languageTags
                - groups
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - groups
                - sets
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.storeCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to termStores for sites
      operationId: sites_CreateTermStores
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.store'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.store'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}':
    get:
      tags:
        - sites.store
      summary: Get termStores from sites
      description: The collection of termStores under this site.
      operationId: sites_GetTermStores
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - defaultLanguageTag
                - languageTags
                - groups
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - groups
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.store'
          links:
            groups:
              operationId: sites.TermStores.ListGroups
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
            sets:
              operationId: sites.TermStores.ListSets
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property termStores in sites
      operationId: sites_UpdateTermStores
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.store'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property termStores for sites
      operationId: sites_DeleteTermStores
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups':
    get:
      tags:
        - sites.store
      summary: Get groups from sites
      description: Collection of all groups available in the term store.
      operationId: sites.termStores_ListGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - displayName
                - displayName desc
                - parentSiteId
                - parentSiteId desc
                - scope
                - scope desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.groupCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to groups for sites
      operationId: sites.termStores_CreateGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}':
    get:
      tags:
        - sites.store
      summary: Get groups from sites
      description: Collection of all groups available in the term store.
      operationId: sites.termStores_GetGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: sites.termStores.Groups.ListSets
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property groups in sites
      operationId: sites.termStores_UpdateGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property groups for sites
      operationId: sites.termStores_DeleteGroups
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      description: 'All sets under the group in a term [store].'
      operationId: sites.termStores.groups_ListSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to sets for sites
      operationId: sites.termStores.groups_CreateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      description: 'All sets under the group in a term [store].'
      operationId: sites.termStores.groups_GetSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.groups.Sets.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
            parentGroup:
              operationId: sites.termStores.groups.Sets.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
            relations:
              operationId: sites.termStores.groups.Sets.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
            terms:
              operationId: sites.termStores.groups.Sets.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property sets in sites
      operationId: sites.termStores.groups_UpdateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property sets for sites
      operationId: sites.termStores.groups_DeleteSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: 'Children terms of set in term [store].'
      operationId: sites.termStores.groups.sets_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStores.groups.sets_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: 'Children terms of set in term [store].'
      operationId: sites.termStores.groups.sets_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStores.groups.sets.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: sites.termStores.groups.sets.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStores.groups.sets_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStores.groups.sets_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStores.groups.sets.children_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStores.groups.sets.children_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStores.groups.sets.children_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.children.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStores.groups.sets.children.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStores.groups.sets.children.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStores.groups.sets.children_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStores.groups.sets.children_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.groups.sets.children.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.groups.sets.children.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.groups.sets.children.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.groups.sets.children.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.children.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.groups.sets.children.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.groups.sets.children.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.groups.sets.children.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.groups.sets.children.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.children.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.groups.sets.children.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.groups.sets.children.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.groups.sets.children.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.children.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.groups.sets.children.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.groups.sets.children.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.children.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStores.groups.sets.children.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.groups.sets.children.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStores.groups.sets.children.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStores.groups.sets.children.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStores.groups.sets.children.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.groups.sets.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.groups.sets.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.groups.sets.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.groups.sets.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.groups.sets.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.groups.sets.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.groups.sets.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.groups.sets.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.groups.sets.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.groups.sets.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.groups.sets.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.groups.sets.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.groups.sets.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/children/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStores.groups.sets.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.groups.sets.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStores.groups.sets.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStores.groups.sets.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStores.groups.sets.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/parentGroup':
    get:
      tags:
        - sites.store
      summary: Get parentGroup from sites
      description: 'The parent [group] that contains the set.'
      operationId: sites.termStores.groups.sets_GetParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: sites.termStores.groups.sets.ParentGroup.ListSets
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property parentGroup in sites
      operationId: sites.termStores.groups.sets_UpdateParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property parentGroup for sites
      operationId: sites.termStores.groups.sets_DeleteParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: sites.termStores.groups.sets_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.groups.sets_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: sites.termStores.groups.sets_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.groups.sets.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.groups.sets.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.groups.sets_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.groups.sets_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.groups.sets.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.groups.sets.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.groups.sets.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.groups.sets.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.groups.sets.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.groups.sets.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      description: All the terms under the set.
      operationId: sites.termStores.groups.sets_ListTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to terms for sites
      operationId: sites.termStores.groups.sets_CreateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      description: All the terms under the set.
      operationId: sites.termStores.groups.sets_GetTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.Terms.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStores.groups.sets.Terms.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: sites.termStores.groups.sets.Terms.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property terms in sites
      operationId: sites.termStores.groups.sets_UpdateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property terms for sites
      operationId: sites.termStores.groups.sets_DeleteTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStores.groups.sets.terms_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStores.groups.sets.terms_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStores.groups.sets.terms_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.terms.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStores.groups.sets.terms.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStores.groups.sets.terms.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStores.groups.sets.terms_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStores.groups.sets.terms_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.groups.sets.terms.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.groups.sets.terms.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.groups.sets.terms.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.groups.sets.terms.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.terms.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.groups.sets.terms.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.groups.sets.terms.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.groups.sets.terms.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.groups.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.groups.sets.terms.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.groups.sets.terms.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.groups.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.terms.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.groups.sets.terms.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.groups.sets.terms.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStores.groups.sets.terms.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.groups.sets.terms.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStores.groups.sets.terms.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStores.groups.sets.terms.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStores.groups.sets.terms.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.groups.sets.terms_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.groups.sets.terms_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.groups.sets.terms_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.groups.sets.terms.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.terms.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.groups.sets.terms.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.groups.sets.terms_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.groups.sets.terms_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.groups.sets.terms.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.terms.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.terms.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.terms.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.groups.sets.terms.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.groups.sets.terms.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.groups.sets.terms.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.terms.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.groups.sets.terms.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.groups.sets.terms.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.groups.sets.terms.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.groups.sets.terms.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.groups.sets.terms.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/groups/{group-id}/sets/{set-id}/terms/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStores.groups.sets.terms_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.groups.sets.terms.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStores.groups.sets.terms.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStores.groups.sets.terms.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStores.groups.sets.terms.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                group-id: $request.path.group-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      description: Collection of all sets available in the term store.
      operationId: sites.termStores_ListSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to sets for sites
      operationId: sites.termStores_CreateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      description: Collection of all sets available in the term store.
      operationId: sites.termStores_GetSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.Sets.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
            parentGroup:
              operationId: sites.termStores.Sets.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
            relations:
              operationId: sites.termStores.Sets.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
            terms:
              operationId: sites.termStores.Sets.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property sets in sites
      operationId: sites.termStores_UpdateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property sets for sites
      operationId: sites.termStores_DeleteSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: 'Children terms of set in term [store].'
      operationId: sites.termStores.sets_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStores.sets_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: 'Children terms of set in term [store].'
      operationId: sites.termStores.sets_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStores.sets.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: sites.termStores.sets.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStores.sets_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStores.sets_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStores.sets.children_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStores.sets.children_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStores.sets.children_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.children.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStores.sets.children.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStores.sets.children.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStores.sets.children_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStores.sets.children_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.children.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.sets.children.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.children.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.sets.children.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.children.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.sets.children.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.sets.children.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.sets.children.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.sets.children.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.children.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.sets.children.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.children.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.sets.children.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.children.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.sets.children.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.sets.children.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.children.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStores.sets.children.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.children.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStores.sets.children.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStores.sets.children.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStores.sets.children.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.sets.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.sets.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.sets.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.sets.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.sets.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.sets.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.sets.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.sets.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.sets.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.sets.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/children/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStores.sets.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStores.sets.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStores.sets.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStores.sets.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup':
    get:
      tags:
        - sites.store
      summary: Get parentGroup from sites
      description: 'The parent [group] that contains the set.'
      operationId: sites.termStores.sets_GetParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - displayName
                - parentSiteId
                - scope
                - sets
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - sets
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
          links:
            sets:
              operationId: sites.termStores.sets.ParentGroup.ListSets
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property parentGroup in sites
      operationId: sites.termStores.sets_UpdateParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property parentGroup for sites
      operationId: sites.termStores.sets_DeleteParentGroup
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      description: 'All sets under the group in a term [store].'
      operationId: sites.termStores.sets.parentGroup_ListSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - localizedNames
                - localizedNames desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.setCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to sets for sites
      operationId: sites.termStores.sets.parentGroup_CreateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}':
    get:
      tags:
        - sites.store
      summary: Get sets from sites
      description: 'All sets under the group in a term [store].'
      operationId: sites.termStores.sets.parentGroup_GetSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.Sets.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            parentGroup:
              operationId: sites.termStores.sets.parentGroup.Sets.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            relations:
              operationId: sites.termStores.sets.parentGroup.Sets.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
            terms:
              operationId: sites.termStores.sets.parentGroup.Sets.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property sets in sites
      operationId: sites.termStores.sets.parentGroup_UpdateSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property sets for sites
      operationId: sites.termStores.sets.parentGroup_DeleteSets
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: 'Children terms of set in term [store].'
      operationId: sites.termStores.sets.parentGroup.sets_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStores.sets.parentGroup.sets_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: 'Children terms of set in term [store].'
      operationId: sites.termStores.sets.parentGroup.sets_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStores.sets.parentGroup.sets_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStores.sets.parentGroup.sets_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStores.sets.parentGroup.sets.children_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStores.sets.parentGroup.sets.children_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStores.sets.parentGroup.sets.children_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.children.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.children.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStores.sets.parentGroup.sets.children.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStores.sets.parentGroup.sets.children_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStores.sets.parentGroup.sets.children_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.parentGroup.sets.children.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.sets.parentGroup.sets.children.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.parentGroup.sets.children.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.sets.parentGroup.sets.children.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.sets.parentGroup.sets.children.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.sets.parentGroup.sets.children.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.sets.parentGroup.sets.children.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.sets.parentGroup.sets.children.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStores.sets.parentGroup.sets.children.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStores.sets.parentGroup.sets.children.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.parentGroup.sets.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.sets.parentGroup.sets.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.parentGroup.sets.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.sets.parentGroup.sets.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.sets.parentGroup.sets.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.sets.parentGroup.sets.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.sets.parentGroup.sets.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.sets.parentGroup.sets.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.sets.parentGroup.sets.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.sets.parentGroup.sets.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.sets.parentGroup.sets.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.sets.parentGroup.sets.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/children/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStores.sets.parentGroup.sets.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStores.sets.parentGroup.sets.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStores.sets.parentGroup.sets.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: sites.termStores.sets.parentGroup.sets_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.sets.parentGroup.sets_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: sites.termStores.sets.parentGroup.sets_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.sets.parentGroup.sets.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.sets.parentGroup.sets.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.sets.parentGroup.sets_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.sets.parentGroup.sets_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.sets.parentGroup.sets.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.sets.parentGroup.sets.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.sets.parentGroup.sets.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.sets.parentGroup.sets.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.sets.parentGroup.sets.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      description: All the terms under the set.
      operationId: sites.termStores.sets.parentGroup.sets_ListTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to terms for sites
      operationId: sites.termStores.sets.parentGroup.sets_CreateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      description: All the terms under the set.
      operationId: sites.termStores.sets.parentGroup.sets_GetTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.Terms.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.Terms.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.Terms.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property terms in sites
      operationId: sites.termStores.sets.parentGroup.sets_UpdateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property terms for sites
      operationId: sites.termStores.sets.parentGroup.sets_DeleteTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStores.sets.parentGroup.sets.terms_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStores.sets.parentGroup.sets.terms_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStores.sets.parentGroup.sets.terms_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.terms.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.terms.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStores.sets.parentGroup.sets.terms.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStores.sets.parentGroup.sets.terms_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStores.sets.parentGroup.sets.terms_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.parentGroup.sets.terms.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.sets.parentGroup.sets.terms.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.parentGroup.sets.terms.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.sets.parentGroup.sets.terms.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.sets.parentGroup.sets.terms.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStores.sets.parentGroup.sets.terms.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStores.sets.parentGroup.sets.terms.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.parentGroup.sets.terms_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.sets.parentGroup.sets.terms_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.parentGroup.sets.terms_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.sets.parentGroup.sets.terms.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.terms.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.sets.parentGroup.sets.terms.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.sets.parentGroup.sets.terms_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.sets.parentGroup.sets.terms_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.sets.parentGroup.sets.terms.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.terms.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.terms.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.terms.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.sets.parentGroup.sets.terms.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.terms.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.sets.parentGroup.sets.terms.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.terms.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.sets.parentGroup.sets.terms.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.sets.parentGroup.sets.terms.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.terms.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.terms.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.parentGroup.sets.terms.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/parentGroup/sets/{set-id1}/terms/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStores.sets.parentGroup.sets.terms_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: set-id1
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.parentGroup.sets.terms.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStores.sets.parentGroup.sets.terms.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStores.sets.parentGroup.sets.terms.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStores.sets.parentGroup.sets.terms.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                set-id1: $request.path.set-id1
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: sites.termStores.sets_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.sets_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: Indicates which terms have been pinned or reused directly under the set.
      operationId: sites.termStores.sets_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.sets.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.sets.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.sets_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.sets_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.sets.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.sets.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.sets.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.sets.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.sets.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      description: All the terms under the set.
      operationId: sites.termStores.sets_ListTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to terms for sites
      operationId: sites.termStores.sets_CreateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}':
    get:
      tags:
        - sites.store
      summary: Get terms from sites
      description: All the terms under the set.
      operationId: sites.termStores.sets_GetTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.Terms.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStores.sets.Terms.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            set:
              operationId: sites.termStores.sets.Terms.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property terms in sites
      operationId: sites.termStores.sets_UpdateTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property terms for sites
      operationId: sites.termStores.sets_DeleteTerms
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStores.sets.terms_ListChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdDateTime
                - createdDateTime desc
                - descriptions
                - descriptions desc
                - labels
                - labels desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - properties
                - properties desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.termCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to children for sites
      operationId: sites.termStores.sets.terms_CreateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}':
    get:
      tags:
        - sites.store
      summary: Get children from sites
      description: Children of current term.
      operationId: sites.termStores.sets.terms_GetChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.terms.Children.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStores.sets.terms.Children.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            set:
              operationId: sites.termStores.sets.terms.Children.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property children in sites
      operationId: sites.termStores.sets.terms_UpdateChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property children for sites
      operationId: sites.termStores.sets.terms_DeleteChildren
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.terms.children_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.sets.terms.children_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.terms.children_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.sets.terms.children.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.terms.children.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.sets.terms.children.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.sets.terms.children_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.sets.terms.children_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.sets.terms.children.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.terms.children.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.terms.children.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.terms.children.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.sets.terms.children.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.terms.children.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.sets.terms.children.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.terms.children.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.sets.terms.children.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.sets.terms.children.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.terms.children.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.terms.children.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.terms.children.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/children/{term-id1}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStores.sets.terms.children_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: term-id1
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.terms.children.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            parentGroup:
              operationId: sites.termStores.sets.terms.children.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            relations:
              operationId: sites.termStores.sets.terms.children.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
            terms:
              operationId: sites.termStores.sets.terms.children.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                term-id1: $request.path.term-id1
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/relations':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.terms_ListRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - relationship
                - relationship desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.termStore.relationCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - sites.store
      summary: Create new navigation property to relations for sites
      operationId: sites.termStores.sets.terms_CreateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}':
    get:
      tags:
        - sites.store
      summary: Get relations from sites
      description: To indicate which terms are related to the current term as either pinned or reused.
      operationId: sites.termStores.sets.terms_GetRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - relationship
                - fromTerm
                - set
                - toTerm
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - fromTerm
                - set
                - toTerm
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
          links:
            fromTerm:
              operationId: sites.termStores.sets.terms.Relations.GetFromTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.terms.Relations.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            toTerm:
              operationId: sites.termStores.sets.terms.Relations.GetToTerm
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - sites.store
      summary: Update the navigation property relations in sites
      operationId: sites.termStores.sets.terms_UpdateRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - sites.store
      summary: Delete navigation property relations for sites
      operationId: sites.termStores.sets.terms_DeleteRelations
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/fromTerm':
    get:
      tags:
        - sites.store
      summary: Get fromTerm from sites
      description: 'The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
      operationId: sites.termStores.sets.terms.relations_GetFromTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.terms.relations.FromTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.terms.relations.FromTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.terms.relations.FromTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the relation is relevant.'
      operationId: sites.termStores.sets.terms.relations_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.terms.relations.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            parentGroup:
              operationId: sites.termStores.sets.terms.relations.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.terms.relations.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            terms:
              operationId: sites.termStores.sets.terms.relations.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/relations/{relation-id}/toTerm':
    get:
      tags:
        - sites.store
      summary: Get toTerm from sites
      description: 'The to [term] of the relation. The term to which the relationship is defined.'
      operationId: sites.termStores.sets.terms.relations_GetToTerm
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: relation-id
          in: path
          description: 'key: id of relation'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: relation
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - descriptions
                - labels
                - lastModifiedDateTime
                - properties
                - children
                - relations
                - set
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - relations
                - set
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
          links:
            children:
              operationId: sites.termStores.sets.terms.relations.ToTerm.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            relations:
              operationId: sites.termStores.sets.terms.relations.ToTerm.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
            set:
              operationId: sites.termStores.sets.terms.relations.ToTerm.GetSet
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
                relation-id: $request.path.relation-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/sites/{site-id}/termStores/{store-id}/sets/{set-id}/terms/{term-id}/set':
    get:
      tags:
        - sites.store
      summary: Get set from sites
      description: 'The [set] in which the term is created.'
      operationId: sites.termStores.sets.terms_GetSet
      parameters:
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: store-id
          in: path
          description: 'key: id of store'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: store
        - name: set-id
          in: path
          description: 'key: id of set'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: set
        - name: term-id
          in: path
          description: 'key: id of term'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: term
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdDateTime
                - description
                - localizedNames
                - properties
                - children
                - parentGroup
                - relations
                - terms
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - children
                - parentGroup
                - relations
                - terms
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
          links:
            children:
              operationId: sites.termStores.sets.terms.Set.ListChildren
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            parentGroup:
              operationId: sites.termStores.sets.terms.Set.GetParentGroup
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            relations:
              operationId: sites.termStores.sets.terms.Set.ListRelations
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
            terms:
              operationId: sites.termStores.sets.terms.Set.ListTerms
              parameters:
                site-id: $request.path.site-id
                store-id: $request.path.store-id
                set-id: $request.path.set-id
                term-id: $request.path.term-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /sites/microsoft.graph.add:
    post:
      tags:
        - sites.Actions
      summary: Invoke action add
      operationId: sites_add
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.site'
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of site
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.site'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  /sites/microsoft.graph.remove:
    post:
      tags:
        - sites.Actions
      summary: Invoke action remove
      operationId: sites_remove
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: array
                  items:
                    $ref: '#/components/schemas/microsoft.graph.site'
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Collection of site
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/microsoft.graph.site'
                additionalProperties:
                  type: object
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: action
  '/users/{user-id}/followedSites':
    get:
      tags:
        - users.site
      summary: Get followedSites from users
      operationId: users_ListFollowedSites
      parameters:
        - name: user-id
          in: path
          description: 'key: id of user'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: user
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - createdBy
                - createdBy desc
                - createdDateTime
                - createdDateTime desc
                - description
                - description desc
                - eTag
                - eTag desc
                - lastModifiedBy
                - lastModifiedBy desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - name
                - name desc
                - parentReference
                - parentReference desc
                - webUrl
                - webUrl desc
                - displayName
                - displayName desc
                - error
                - error desc
                - root
                - root desc
                - sharepointIds
                - sharepointIds desc
                - siteCollection
                - siteCollection desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - error
                - root
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
      responses:
        '200':
          $ref: '#/components/responses/microsoft.graph.siteCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/users/{user-id}/followedSites/{site-id}':
    get:
      tags:
        - users.site
      summary: Get followedSites from users
      operationId: users_GetFollowedSites
      parameters:
        - name: user-id
          in: path
          description: 'key: id of user'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: user
        - name: site-id
          in: path
          description: 'key: id of site'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: site
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - displayName
                - error
                - root
                - sharepointIds
                - siteCollection
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - createdByUser
                - lastModifiedByUser
                - analytics
                - columns
                - contentTypes
                - drive
                - drives
                - externalColumns
                - items
                - lists
                - operations
                - permissions
                - sites
                - termStore
                - termStores
                - onenote
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microsoft.graph.site'
          links:
            createdByUser:
              operationId: users.FollowedSites.GetCreatedGraphBPreUser
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            lastModifiedByUser:
              operationId: users.FollowedSites.GetLastModifiedGraphBPreUser
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            analytics:
              operationId: users.FollowedSites.GetAnalytics
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            columns:
              operationId: users.FollowedSites.ListColumns
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            contentTypes:
              operationId: users.FollowedSites.ListContentTypes
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            drive:
              operationId: users.FollowedSites.GetDrive
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            drives:
              operationId: users.FollowedSites.ListDrives
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            externalColumns:
              operationId: users.FollowedSites.ListExternalColumns
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            items:
              operationId: users.FollowedSites.ListItems
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            lists:
              operationId: users.FollowedSites.ListLists
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            operations:
              operationId: users.FollowedSites.ListOperations
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            permissions:
              operationId: users.FollowedSites.ListPermissions
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            sites:
              operationId: users.FollowedSites.ListSites
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            termStore:
              operationId: users.FollowedSites.GetTermStore
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            termStores:
              operationId: users.FollowedSites.ListTermStores
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
            onenote:
              operationId: users.FollowedSites.GetOnenote
              parameters:
                user-id: $request.path.user-id
                site-id: $request.path.site-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
components:
  schemas:
    microsoft.graph.site:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItem'
        - title: site
          type: object
          properties:
            displayName:
              type: string
              description: The full title for the site. Read-only.
              nullable: true
            error:
              $ref: '#/components/schemas/microsoft.graph.publicError'
            root:
              $ref: '#/components/schemas/microsoft.graph.root'
            sharepointIds:
              $ref: '#/components/schemas/microsoft.graph.sharepointIds'
            siteCollection:
              $ref: '#/components/schemas/microsoft.graph.siteCollection'
            analytics:
              $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
            columns:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
              description: The collection of column definitions reusable across lists under this site.
            contentTypes:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.contentType'
              description: The collection of content types defined for this site.
            drive:
              $ref: '#/components/schemas/microsoft.graph.drive'
            drives:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.drive'
              description: The collection of drives (document libraries) under this site.
            externalColumns:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
            items:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.baseItem'
              description: Used to address any item contained in this site. This collection can't be enumerated.
            lists:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.list'
              description: The collection of lists under this site.
            operations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
              description: The collection of long-running operations on the site.
            permissions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.permission'
              description: The permissions associated with the site. Nullable.
            sites:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.site'
              description: The collection of the sub-sites under this site.
            termStore:
              $ref: '#/components/schemas/microsoft.graph.termStore.store'
            termStores:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.store'
              description: The collection of termStores under this site.
            onenote:
              $ref: '#/components/schemas/microsoft.graph.onenote'
          additionalProperties:
            type: object
    microsoft.graph.itemAnalytics:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: itemAnalytics
          type: object
          properties:
            allTime:
              $ref: '#/components/schemas/microsoft.graph.itemActivityStat'
            itemActivityStats:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemActivityStat'
            lastSevenDays:
              $ref: '#/components/schemas/microsoft.graph.itemActivityStat'
          additionalProperties:
            type: object
    microsoft.graph.columnDefinition:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: columnDefinition
          type: object
          properties:
            boolean:
              $ref: '#/components/schemas/microsoft.graph.booleanColumn'
            calculated:
              $ref: '#/components/schemas/microsoft.graph.calculatedColumn'
            choice:
              $ref: '#/components/schemas/microsoft.graph.choiceColumn'
            columnGroup:
              type: string
              description: 'For site columns, the name of the group this column belongs to. Helps organize related columns.'
              nullable: true
            contentApprovalStatus:
              $ref: '#/components/schemas/microsoft.graph.contentApprovalStatusColumn'
            currency:
              $ref: '#/components/schemas/microsoft.graph.currencyColumn'
            dateTime:
              $ref: '#/components/schemas/microsoft.graph.dateTimeColumn'
            defaultValue:
              $ref: '#/components/schemas/microsoft.graph.defaultColumnValue'
            description:
              type: string
              description: The user-facing description of the column.
              nullable: true
            displayName:
              type: string
              description: The user-facing name of the column.
              nullable: true
            enforceUniqueValues:
              type: boolean
              description: 'If true, no two list items may have the same value for this column.'
              nullable: true
            geolocation:
              $ref: '#/components/schemas/microsoft.graph.geolocationColumn'
            hidden:
              type: boolean
              description: Specifies whether the column is displayed in the user interface.
              nullable: true
            hyperlinkOrPicture:
              $ref: '#/components/schemas/microsoft.graph.hyperlinkOrPictureColumn'
            indexed:
              type: boolean
              description: Specifies whether the column values can be used for sorting and searching.
              nullable: true
            isDeletable:
              type: boolean
              description: Indicates whether this column can be deleted.
              nullable: true
            isReorderable:
              type: boolean
              description: Indicates whether values in the column can be reordered. Read-only.
              nullable: true
            isSealed:
              type: boolean
              description: Specifies whether the column can be changed.
              nullable: true
            lookup:
              $ref: '#/components/schemas/microsoft.graph.lookupColumn'
            name:
              type: string
              description: 'The API-facing name of the column as it appears in the [fields][] on a [listItem][]. For the user-facing name, see displayName.'
              nullable: true
            number:
              $ref: '#/components/schemas/microsoft.graph.numberColumn'
            personOrGroup:
              $ref: '#/components/schemas/microsoft.graph.personOrGroupColumn'
            propagateChanges:
              type: boolean
              description: 'If ''true'', changes to this column will be propagated to lists that implement the column.'
              nullable: true
            readOnly:
              type: boolean
              description: Specifies whether the column values can be modified.
              nullable: true
            required:
              type: boolean
              description: Specifies whether the column value isn't optional.
              nullable: true
            sourceContentType:
              $ref: '#/components/schemas/microsoft.graph.contentTypeInfo'
            term:
              $ref: '#/components/schemas/microsoft.graph.termColumn'
            text:
              $ref: '#/components/schemas/microsoft.graph.textColumn'
            thumbnail:
              $ref: '#/components/schemas/microsoft.graph.thumbnailColumn'
            type:
              $ref: '#/components/schemas/microsoft.graph.columnTypes'
            validation:
              $ref: '#/components/schemas/microsoft.graph.columnValidation'
            sourceColumn:
              $ref: '#/components/schemas/microsoft.graph.columnDefinition'
          additionalProperties:
            type: object
    microsoft.graph.contentType:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: contentType
          type: object
          properties:
            associatedHubsUrls:
              type: array
              items:
                type: string
                nullable: true
              description: List of canonical URLs for hub sites with which this content type is associated to. This will contain all hub sites where this content type is queued to be enforced or is already enforced. Enforcing a content type means that the content type will be applied to the lists in the enforced sites.
            description:
              type: string
              description: The descriptive text for the item.
              nullable: true
            documentSet:
              $ref: '#/components/schemas/microsoft.graph.documentSet'
            documentTemplate:
              $ref: '#/components/schemas/microsoft.graph.documentSetContent'
            group:
              type: string
              description: The name of the group this content type belongs to. Helps organize related content types.
              nullable: true
            hidden:
              type: boolean
              description: Indicates whether the content type is hidden in the list's 'New' menu.
              nullable: true
            inheritedFrom:
              $ref: '#/components/schemas/microsoft.graph.itemReference'
            isBuiltIn:
              type: boolean
              description: Specifies if a content type is a built-in content type.
              nullable: true
            name:
              type: string
              description: The name of the content type.
              nullable: true
            order:
              $ref: '#/components/schemas/microsoft.graph.contentTypeOrder'
            parentId:
              type: string
              description: The unique identifier of the content type.
              nullable: true
            propagateChanges:
              type: boolean
              description: 'If true, any changes made to the content type will be pushed to inherited content types and lists that implement the content type.'
              nullable: true
            readOnly:
              type: boolean
              description: 'If true, the content type can''t be modified unless this value is first set to false.'
              nullable: true
            sealed:
              type: boolean
              description: 'If true, the content type can''t be modified by users or through push-down operations. Only site collection administrators can seal or unseal content types.'
              nullable: true
            base:
              $ref: '#/components/schemas/microsoft.graph.contentType'
            baseTypes:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.contentType'
              description: The collection of content types that are ancestors of this content type.
            columnLinks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.columnLink'
              description: The collection of columns that are required by this content type.
            columnPositions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
              description: Column order information in a content type.
            columns:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
              description: The collection of column definitions for this contentType.
          additionalProperties:
            type: object
    microsoft.graph.columnLink:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: columnLink
          type: object
          properties:
            name:
              type: string
              description: The name of the column  in this content type.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.drive:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItem'
        - title: drive
          type: object
          properties:
            driveType:
              type: string
              description: Describes the type of drive represented by this resource. OneDrive personal drives will return personal. OneDrive for Business will return business. SharePoint document libraries will return documentLibrary. Read-only.
              nullable: true
            owner:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            quota:
              $ref: '#/components/schemas/microsoft.graph.quota'
            sharePointIds:
              $ref: '#/components/schemas/microsoft.graph.sharepointIds'
            system:
              $ref: '#/components/schemas/microsoft.graph.systemFacet'
            bundles:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
              description: 'Collection of [bundles][bundle] (albums and multi-select-shared sets of items). Only in personal OneDrive.'
            following:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
              description: The list of items the user is following. Only in OneDrive for Business.
            items:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
              description: All items contained in the drive. Read-only. Nullable.
            list:
              $ref: '#/components/schemas/microsoft.graph.list'
            root:
              $ref: '#/components/schemas/microsoft.graph.driveItem'
            special:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
              description: Collection of common folders available in OneDrive. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.baseItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: baseItem
          type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time of item creation. Read-only.
              format: date-time
            description:
              type: string
              description: Provides a user-visible description of the item. Optional.
              nullable: true
            eTag:
              type: string
              description: ETag for the item. Read-only.
              nullable: true
            lastModifiedBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time the item was last modified. Read-only.
              format: date-time
            name:
              type: string
              description: The name of the item. Read-write.
              nullable: true
            parentReference:
              $ref: '#/components/schemas/microsoft.graph.itemReference'
            webUrl:
              type: string
              description: URL that displays the resource in the browser. Read-only.
              nullable: true
            createdByUser:
              $ref: '#/components/schemas/microsoft.graph.user'
            lastModifiedByUser:
              $ref: '#/components/schemas/microsoft.graph.user'
          additionalProperties:
            type: object
    microsoft.graph.list:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItem'
        - title: list
          type: object
          properties:
            displayName:
              type: string
              description: The displayable title of the list.
              nullable: true
            list:
              $ref: '#/components/schemas/microsoft.graph.listInfo'
            sharepointIds:
              $ref: '#/components/schemas/microsoft.graph.sharepointIds'
            system:
              $ref: '#/components/schemas/microsoft.graph.systemFacet'
            columns:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.columnDefinition'
              description: The collection of field definitions for this list.
            contentTypes:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.contentType'
              description: The collection of content types present in this list.
            drive:
              $ref: '#/components/schemas/microsoft.graph.drive'
            items:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.listItem'
              description: All items contained in the list.
            operations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
              description: The collection of long-running operations on the list.
            subscriptions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.subscription'
              description: The set of subscriptions on the list.
          additionalProperties:
            type: object
    microsoft.graph.listItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItem'
        - title: listItem
          type: object
          properties:
            contentType:
              $ref: '#/components/schemas/microsoft.graph.contentTypeInfo'
            sharepointIds:
              $ref: '#/components/schemas/microsoft.graph.sharepointIds'
            analytics:
              $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
            documentSetVersions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
              description: Version information for a document set version created by a user.
            driveItem:
              $ref: '#/components/schemas/microsoft.graph.driveItem'
            fields:
              $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
            versions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.listItemVersion'
              description: The list of previous versions of the list item.
          additionalProperties:
            type: object
    microsoft.graph.documentSetVersion:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        - title: documentSetVersion
          type: object
          properties:
            comment:
              type: string
              description: Comment about the captured version.
              nullable: true
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time when this version was created.
              format: date-time
              nullable: true
            items:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.documentSetVersionItem'
              description: Items within the document set that are captured as part of this version.
            shouldCaptureMinorVersion:
              type: boolean
              description: 'If true, minor versions of items are also captured; otherwise, only major versions will be captured. Default value is false.'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.driveItem:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItem'
        - title: driveItem
          type: object
          properties:
            audio:
              $ref: '#/components/schemas/microsoft.graph.audio'
            bundle:
              $ref: '#/components/schemas/microsoft.graph.bundle'
            content:
              type: string
              description: 'The content stream, if the item represents a file.'
              format: base64url
              nullable: true
            cTag:
              type: string
              description: An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.
              nullable: true
            deleted:
              $ref: '#/components/schemas/microsoft.graph.deleted'
            file:
              $ref: '#/components/schemas/microsoft.graph.file'
            fileSystemInfo:
              $ref: '#/components/schemas/microsoft.graph.fileSystemInfo'
            folder:
              $ref: '#/components/schemas/microsoft.graph.folder'
            image:
              $ref: '#/components/schemas/microsoft.graph.image'
            location:
              $ref: '#/components/schemas/microsoft.graph.geoCoordinates'
            malware:
              $ref: '#/components/schemas/microsoft.graph.malware'
            package:
              $ref: '#/components/schemas/microsoft.graph.package'
            pendingOperations:
              $ref: '#/components/schemas/microsoft.graph.pendingOperations'
            photo:
              $ref: '#/components/schemas/microsoft.graph.photo'
            publication:
              $ref: '#/components/schemas/microsoft.graph.publicationFacet'
            remoteItem:
              $ref: '#/components/schemas/microsoft.graph.remoteItem'
            root:
              $ref: '#/components/schemas/microsoft.graph.root'
            searchResult:
              $ref: '#/components/schemas/microsoft.graph.searchResult'
            shared:
              $ref: '#/components/schemas/microsoft.graph.shared'
            sharepointIds:
              $ref: '#/components/schemas/microsoft.graph.sharepointIds'
            size:
              type: integer
              description: Size of the item in bytes. Read-only.
              format: int64
              nullable: true
            specialFolder:
              $ref: '#/components/schemas/microsoft.graph.specialFolder'
            video:
              $ref: '#/components/schemas/microsoft.graph.video'
            webDavUrl:
              type: string
              description: WebDAV compatible URL for the item.
              nullable: true
            workbook:
              $ref: '#/components/schemas/microsoft.graph.workbook'
            analytics:
              $ref: '#/components/schemas/microsoft.graph.itemAnalytics'
            children:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.driveItem'
              description: Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
            listItem:
              $ref: '#/components/schemas/microsoft.graph.listItem'
            permissions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.permission'
              description: The set of permissions for the item. Read-only. Nullable.
            subscriptions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.subscription'
              description: The set of subscriptions on the item. Only supported on the root of a drive.
            thumbnails:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.thumbnailSet'
              description: 'Collection containing [ThumbnailSet][] objects associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable.'
            versions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.driveItemVersion'
              description: 'The list of previous versions of the item. For more info, see [getting previous versions][]. Read-only. Nullable.'
          additionalProperties:
            type: object
    microsoft.graph.fieldValueSet:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: fieldValueSet
          type: object
          additionalProperties:
            type: object
    microsoft.graph.listItemVersion:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItemVersion'
        - title: listItemVersion
          type: object
          properties:
            fields:
              $ref: '#/components/schemas/microsoft.graph.fieldValueSet'
          additionalProperties:
            type: object
    microsoft.graph.richLongRunningOperation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.longRunningOperation'
        - title: richLongRunningOperation
          type: object
          properties:
            error:
              $ref: '#/components/schemas/microsoft.graph.publicError'
            percentageComplete:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: A value between 0 and 100 that indicates the progress of the operation.
              format: int32
              nullable: true
            resourceId:
              type: string
              description: The unique identifier for the result.
              nullable: true
            type:
              type: string
              description: The type of the operation.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.subscription:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: subscription
          type: object
          properties:
            applicationId:
              type: string
              description: Optional. Identifier of the application used to create the subscription. Read-only.
              nullable: true
            changeType:
              type: string
              description: 'Required. Indicates the type of change in the subscribed resource that will raise a change notification. The supported values are: created, updated, deleted. Multiple values can be combined using a comma-separated list. Note:  Drive root item and list change notifications support only the updated changeType. User and group change notifications support updated and deleted changeType.'
            clientState:
              type: string
              description: Optional. Specifies the value of the clientState property sent by the service in each change notification. The maximum length is 128 characters. The client can check that the change notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each change notification.
              nullable: true
            creatorId:
              type: string
              description: 'Optional. Identifier of the user or service principal that created the subscription. If the app used delegated permissions to create the subscription, this field contains the id of the signed-in user the app called on behalf of. If the app used application permissions, this field contains the id of the service principal corresponding to the app. Read-only.'
              nullable: true
            encryptionCertificate:
              type: string
              description: Optional. A base64-encoded representation of a certificate with a public key used to encrypt resource data in change notifications. Optional but required when includeResourceData is true.
              nullable: true
            encryptionCertificateId:
              type: string
              description: Optional. A custom app-provided identifier to help identify the certificate needed to decrypt resource data.
              nullable: true
            expirationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'Required. Specifies the date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to. For the maximum supported subscription length of time, see the table below.'
              format: date-time
            includeResourceData:
              type: boolean
              description: 'Optional. When set to true, change notifications include resource data (such as content of a chat message).'
              nullable: true
            latestSupportedTlsVersion:
              type: string
              description: 'Optional. Specifies the latest version of Transport Layer Security (TLS) that the notification endpoint, specified by notificationUrl, supports. The possible values are: v1_0, v1_1, v1_2, v1_3. For subscribers whose notification endpoint supports a version lower than the currently recommended version (TLS 1.2), specifying this property by a set timeline allows them to temporarily use their deprecated version of TLS before completing their upgrade to TLS 1.2. For these subscribers, not setting this property per the timeline would result in subscription operations failing. For subscribers whose notification endpoint already supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the property to v1_2.'
              nullable: true
            lifecycleNotificationUrl:
              type: string
              description: 'Optional. The URL of the endpoint that receives lifecycle notifications, including subscriptionRemoved and missed notifications. This URL must make use of the HTTPS protocol.'
              nullable: true
            notificationQueryOptions:
              type: string
              description: 'Optional. OData query options for specifying value for the targeting resource. Clients receive notifications when resource reaches the state matching the query options provided here. With this new property in the subscription creation payload along with all existing properties, Webhooks will deliver notifications whenever a resource reaches the desired state mentioned in the notificationQueryOptions property. For example, when the print job is completed or when a print job resource isFetchable property value becomes true etc.'
              nullable: true
            notificationUrl:
              type: string
              description: Required. The URL of the endpoint that will receive the change notifications. This URL must make use of the HTTPS protocol.
            notificationUrlAppId:
              type: string
              description: Optional. The app ID that the subscription service can use to generate the validation token. This allows the client to validate the authenticity of the notification received.
              nullable: true
            resource:
              type: string
              description: Required. Specifies the resource that will be monitored for changes. Do not include the base URL (https://graph.microsoft.com/v1.0/). See the possible resource path values for each supported resource.
          additionalProperties:
            type: object
    microsoft.graph.onenote:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: onenote
          type: object
          properties:
            notebooks:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.notebook'
              description: The collection of OneNote notebooks that are owned by the user or group. Read-only. Nullable.
            operations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
              description: 'The status of OneNote operations. Getting an operations collection is not supported, but you can get the status of long-running operations if the Operation-Location header is returned in the response. Read-only. Nullable.'
            pages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
              description: The pages in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
            resources:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenoteResource'
              description: 'The image and other file resources in OneNote pages. Getting a resources collection is not supported, but you can get the binary content of a specific resource. Read-only. Nullable.'
            sectionGroups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
              description: The section groups in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
            sections:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
              description: The sections in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.notebook:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel'
        - title: notebook
          type: object
          properties:
            isDefault:
              type: boolean
              description: Indicates whether this is the user's default notebook. Read-only.
              nullable: true
            isShared:
              type: boolean
              description: 'Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner. Read-only.'
              nullable: true
            links:
              $ref: '#/components/schemas/microsoft.graph.notebookLinks'
            sectionGroupsUrl:
              type: string
              description: 'The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only.'
              nullable: true
            sectionsUrl:
              type: string
              description: 'The URL for the sections navigation property, which returns all the sections in the notebook. Read-only.'
              nullable: true
            userRole:
              $ref: '#/components/schemas/microsoft.graph.onenoteUserRole'
            sectionGroups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
              description: The section groups in the notebook. Read-only. Nullable.
            sections:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
              description: The sections in the notebook. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.sectionGroup:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel'
        - title: sectionGroup
          type: object
          properties:
            sectionGroupsUrl:
              type: string
              description: 'The URL for the sectionGroups navigation property, which returns all the section groups in the section group. Read-only.'
              nullable: true
            sectionsUrl:
              type: string
              description: 'The URL for the sections navigation property, which returns all the sections in the section group. Read-only.'
              nullable: true
            parentNotebook:
              $ref: '#/components/schemas/microsoft.graph.notebook'
            parentSectionGroup:
              $ref: '#/components/schemas/microsoft.graph.sectionGroup'
            sectionGroups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sectionGroup'
              description: The section groups in the section. Read-only. Nullable.
            sections:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenoteSection'
              description: The sections in the section group. Read-only. Nullable.
          additionalProperties:
            type: object
    microsoft.graph.onenoteSection:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel'
        - title: onenoteSection
          type: object
          properties:
            isDefault:
              type: boolean
              description: Indicates whether this is the user's default section. Read-only.
              nullable: true
            links:
              $ref: '#/components/schemas/microsoft.graph.sectionLinks'
            pagesUrl:
              type: string
              description: The pages endpoint where you can get details for all the pages in the section. Read-only.
              nullable: true
            pages:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.onenotePage'
              description: The collection of pages in the section.  Read-only. Nullable.
            parentNotebook:
              $ref: '#/components/schemas/microsoft.graph.notebook'
            parentSectionGroup:
              $ref: '#/components/schemas/microsoft.graph.sectionGroup'
          additionalProperties:
            type: object
    microsoft.graph.onenotePage:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntitySchemaObjectModel'
        - title: onenotePage
          type: object
          properties:
            content:
              type: string
              description: The page's HTML content.
              format: base64url
              nullable: true
            contentUrl:
              type: string
              description: The URL for the page's HTML content.  Read-only.
              nullable: true
            createdByAppId:
              type: string
              description: The unique identifier of the application that created the page. Read-only.
              nullable: true
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the page was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
              format: date-time
              nullable: true
            level:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The indentation level of the page. Read-only.
              format: int32
              nullable: true
            links:
              $ref: '#/components/schemas/microsoft.graph.pageLinks'
            order:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: The order of the page within its parent section. Read-only.
              format: int32
              nullable: true
            title:
              type: string
              description: The title of the page.
              nullable: true
            userTags:
              type: array
              items:
                type: string
                nullable: true
            parentNotebook:
              $ref: '#/components/schemas/microsoft.graph.notebook'
            parentSection:
              $ref: '#/components/schemas/microsoft.graph.onenoteSection'
          additionalProperties:
            type: object
    microsoft.graph.onenoteOperation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.operation'
        - title: onenoteOperation
          type: object
          properties:
            error:
              $ref: '#/components/schemas/microsoft.graph.onenoteOperationError'
            percentComplete:
              type: string
              description: The operation percent complete if the operation is still in running status.
              nullable: true
            resourceId:
              type: string
              description: The resource id.
              nullable: true
            resourceLocation:
              type: string
              description: 'The resource URI for the object. For example, the resource URI for a copied page or section.'
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.onenoteResource:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntityBaseModel'
        - title: onenoteResource
          type: object
          properties:
            content:
              type: string
              description: The content stream
              format: base64url
              nullable: true
            contentUrl:
              type: string
              description: The URL for downloading the content
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.permission:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: permission
          type: object
          properties:
            expirationDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: A format of yyyy-MM-ddTHH:mm:ssZ of DateTimeOffset indicates the expiration time of the permission. DateTime.MinValue indicates there is no expiration set for this permission. Optional.
              format: date-time
              nullable: true
            grantedTo:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            grantedToIdentities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.identitySet'
            grantedToIdentitiesV2:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.sharePointIdentitySet'
              description: 'For link type permissions, the details of the users to whom permission was granted. Read-only.'
            grantedToV2:
              $ref: '#/components/schemas/microsoft.graph.sharePointIdentitySet'
            hasPassword:
              type: boolean
              description: Indicates whether the password is set for this permission. This property only appears in the response. Optional. Read-only. For OneDrive Personal only..
              nullable: true
            inheritedFrom:
              $ref: '#/components/schemas/microsoft.graph.itemReference'
            invitation:
              $ref: '#/components/schemas/microsoft.graph.sharingInvitation'
            link:
              $ref: '#/components/schemas/microsoft.graph.sharingLink'
            roles:
              type: array
              items:
                type: string
                nullable: true
              description: 'The type of permission, for example, read. See below for the full list of roles. Read-only.'
            shareId:
              type: string
              description: A unique token that can be used to access this shared item via the **shares** API. Read-only.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.termStore.store:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: store
          type: object
          properties:
            defaultLanguageTag:
              type: string
              description: Default language of the term store.
            languageTags:
              type: array
              items:
                type: string
              description: List of languages for the term store.
            groups:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.group'
              description: Collection of all groups available in the term store.
            sets:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
              description: Collection of all sets available in the term store.
          additionalProperties:
            type: object
    microsoft.graph.termStore.group:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: group
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time of the group creation. Read-only.
              format: date-time
              nullable: true
            description:
              type: string
              description: Description that gives details on the term usage.
              nullable: true
            displayName:
              type: string
              description: Name of the group.
              nullable: true
            parentSiteId:
              type: string
              description: ID of the parent site of this group.
              nullable: true
            scope:
              $ref: '#/components/schemas/microsoft.graph.termStore.termGroupScope'
            sets:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.set'
              description: 'All sets under the group in a term [store].'
          additionalProperties:
            type: object
    microsoft.graph.termStore.set:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: set
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time of set creation. Read-only.
              format: date-time
              nullable: true
            description:
              type: string
              description: Description that gives details on the term usage.
              nullable: true
            localizedNames:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.localizedName'
              description: Name of the set for each languageTag.
            properties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.keyValue'
              description: Custom properties for the set.
            children:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
              description: 'Children terms of set in term [store].'
            parentGroup:
              $ref: '#/components/schemas/microsoft.graph.termStore.group'
            relations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
              description: Indicates which terms have been pinned or reused directly under the set.
            terms:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
              description: All the terms under the set.
          additionalProperties:
            type: object
    microsoft.graph.termStore.term:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: term
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time of term creation. Read-only.
              format: date-time
              nullable: true
            descriptions:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.localizedDescription'
              description: Description about term that is dependent on the languageTag.
            labels:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.localizedLabel'
              description: Label metadata for a term.
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Last date and time of term modification. Read-only.
              format: date-time
              nullable: true
            properties:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.keyValue'
              description: Collection of properties on the term.
            children:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.term'
              description: Children of current term.
            relations:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.termStore.relation'
              description: To indicate which terms are related to the current term as either pinned or reused.
            set:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
          additionalProperties:
            type: object
    microsoft.graph.termStore.relation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: relation
          type: object
          properties:
            relationship:
              $ref: '#/components/schemas/microsoft.graph.termStore.relationType'
            fromTerm:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
            set:
              $ref: '#/components/schemas/microsoft.graph.termStore.set'
            toTerm:
              $ref: '#/components/schemas/microsoft.graph.termStore.term'
          additionalProperties:
            type: object
    microsoft.graph.itemReference:
      title: itemReference
      type: object
      properties:
        driveId:
          type: string
          description: Unique identifier of the drive instance that contains the item. Read-only.
          nullable: true
        driveType:
          type: string
          description: 'Identifies the type of drive. See [drive][] resource for values.'
          nullable: true
        id:
          type: string
          description: Unique identifier of the item in the drive. Read-only.
          nullable: true
        name:
          type: string
          description: The name of the item being referenced. Read-only.
          nullable: true
        path:
          type: string
          description: Path that can be used to navigate to the item. Read-only.
          nullable: true
        shareId:
          type: string
          description: 'A unique identifier for a shared resource that can be accessed via the [Shares][] API.'
          nullable: true
        sharepointIds:
          $ref: '#/components/schemas/microsoft.graph.sharepointIds'
        siteId:
          type: string
          description: 'For OneDrive for Business and SharePoint, this property represents the ID of the site that contains the parent document library of the driveItem resource. The value is the same as the id property of that [site][] resource. It is an opaque string that consists of three identifiers of the site. For OneDrive, this property is not populated.'
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.itemActivityStat:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: itemActivityStat
          type: object
          properties:
            access:
              $ref: '#/components/schemas/microsoft.graph.itemActionStat'
            create:
              $ref: '#/components/schemas/microsoft.graph.itemActionStat'
            delete:
              $ref: '#/components/schemas/microsoft.graph.itemActionStat'
            edit:
              $ref: '#/components/schemas/microsoft.graph.itemActionStat'
            endDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: When the interval ends. Read-only.
              format: date-time
              nullable: true
            incompleteData:
              $ref: '#/components/schemas/microsoft.graph.incompleteData'
            isTrending:
              type: boolean
              description: Indicates whether the item is 'trending.' Read-only.
              nullable: true
            move:
              $ref: '#/components/schemas/microsoft.graph.itemActionStat'
            startDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: When the interval starts. Read-only.
              format: date-time
              nullable: true
            activities:
              type: array
              items:
                $ref: '#/components/schemas/microsoft.graph.itemActivity'
              description: Exposes the itemActivities represented in this itemActivityStat resource.
          additionalProperties:
            type: object
    microsoft.graph.onenotePatchContentCommand:
      title: onenotePatchContentCommand
      type: object
      properties:
        action:
          $ref: '#/components/schemas/microsoft.graph.onenotePatchActionType'
        content:
          type: string
          description: 'A string of well-formed HTML to add to the page, and any image or file binary data. If the content contains binary data, the request must be sent using the multipart/form-data content type with a ''Commands'' part.'
          nullable: true
        position:
          $ref: '#/components/schemas/microsoft.graph.onenotePatchInsertPosition'
        target:
          type: string
          description: 'The element to update. Must be the #<data-id> or the generated <id> of the element, or the body or title keyword.'
      additionalProperties:
        type: object
    microsoft.graph.onenotePagePreview:
      title: onenotePagePreview
      type: object
      properties:
        links:
          $ref: '#/components/schemas/microsoft.graph.onenotePagePreviewLinks'
        previewText:
          type: string
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.CopyNotebookModel:
      title: CopyNotebookModel
      type: object
      properties:
        createdBy:
          type: string
          nullable: true
        createdByIdentity:
          $ref: '#/components/schemas/microsoft.graph.identitySet'
        createdTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        isShared:
          type: boolean
          nullable: true
        lastModifiedBy:
          type: string
          nullable: true
        lastModifiedByIdentity:
          $ref: '#/components/schemas/microsoft.graph.identitySet'
        lastModifiedTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/microsoft.graph.notebookLinks'
        name:
          type: string
          nullable: true
        sectionGroupsUrl:
          type: string
          nullable: true
        sectionsUrl:
          type: string
          nullable: true
        self:
          type: string
          nullable: true
        userRole:
          $ref: '#/components/schemas/microsoft.graph.onenoteUserRole'
      additionalProperties:
        type: object
    microsoft.graph.recentNotebook:
      title: recentNotebook
      type: object
      properties:
        displayName:
          type: string
          description: The name of the notebook.
          nullable: true
        lastAccessedTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/microsoft.graph.recentNotebookLinks'
        sourceService:
          $ref: '#/components/schemas/microsoft.graph.onenoteSourceService'
      additionalProperties:
        type: object
    microsoft.graph.driveRecipient:
      title: driveRecipient
      type: object
      properties:
        alias:
          type: string
          description: 'The alias of the domain object, for cases where an email address is unavailable (e.g. security groups).'
          nullable: true
        email:
          type: string
          description: 'The email address for the recipient, if the recipient has an associated email address.'
          nullable: true
        objectId:
          type: string
          description: The unique identifier for the recipient in the directory.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.publicError: { }
    microsoft.graph.root:
      description: 'If present, indicates that this is the root site in the site collection. Read-only.'
    microsoft.graph.sharepointIds:
      description: Returns identifiers useful for SharePoint REST compatibility. Read-only.
    microsoft.graph.siteCollection:
      description: Provides details about the site's site collection. Available only on the root site. Read-only.
    microsoft.graph.entity:
      title: entity
      type: object
      properties:
        id:
          type: string
      additionalProperties:
        type: object
    microsoft.graph.booleanColumn:
      description: This column stores boolean values.
    microsoft.graph.calculatedColumn:
      description: This column's data is calculated based on other columns.
    microsoft.graph.choiceColumn:
      description: This column stores data from a list of choices.
    microsoft.graph.contentApprovalStatusColumn:
      description: This column stores content approval status.
    microsoft.graph.currencyColumn:
      description: This column stores currency values.
    microsoft.graph.dateTimeColumn:
      description: This column stores DateTime values.
    microsoft.graph.defaultColumnValue:
      description: The default value for this column.
    microsoft.graph.geolocationColumn:
      description: This column stores a geolocation.
    microsoft.graph.hyperlinkOrPictureColumn:
      description: This column stores hyperlink or picture values.
    microsoft.graph.lookupColumn:
      description: This column's data is looked up from another source in the site.
    microsoft.graph.numberColumn:
      description: This column stores number values.
    microsoft.graph.personOrGroupColumn:
      description: This column stores Person or Group values.
    microsoft.graph.contentTypeInfo:
      description: ContentType from which this column is inherited from. Present only in contentTypes columns response. Read-only.
    microsoft.graph.termColumn:
      description: This column stores taxonomy terms.
    microsoft.graph.textColumn:
      description: This column stores text values.
    microsoft.graph.thumbnailColumn:
      description: This column stores thumbnail values.
    microsoft.graph.columnTypes:
      description: 'For site columns, the type of column. Read-only.'
    microsoft.graph.columnValidation:
      description: This column stores validation formula and message for the column.
    microsoft.graph.documentSet:
      description: Document Set metadata.
    microsoft.graph.documentSetContent:
      description: 'Document template metadata. To make sure that documents have consistent content across a site and its subsites, you can associate a Word, Excel, or PowerPoint template with a site content type.'
    microsoft.graph.contentTypeOrder:
      description: Specifies the order in which the content type appears in the selection UI.
    microsoft.graph.identitySet:
      description: Optional. The user account that owns the drive. Read-only.
    microsoft.graph.quota:
      description: Optional. Information about the drive's storage space quota. Read-only.
    microsoft.graph.systemFacet:
      description: 'If present, indicates that this is a system-managed drive. Read-only.'
    microsoft.graph.user:
      description: Identity of the user who created the item. Read-only.
    microsoft.graph.listInfo:
      description: Provides additional details about the list.
    microsoft.graph.documentSetVersionItem: { }
    microsoft.graph.audio:
      description: 'Audio metadata, if the item is an audio file. Read-only. Read-only. Only on OneDrive Personal.'
    microsoft.graph.bundle:
      description: 'Bundle metadata, if the item is a bundle. Read-only.'
    microsoft.graph.deleted:
      description: Information about the deleted state of the item. Read-only.
    microsoft.graph.file:
      description: 'File metadata, if the item is a file. Read-only.'
    microsoft.graph.fileSystemInfo:
      description: File system information on client. Read-write.
    microsoft.graph.folder:
      description: 'Folder metadata, if the item is a folder. Read-only.'
    microsoft.graph.image:
      description: 'Image metadata, if the item is an image. Read-only.'
    microsoft.graph.geoCoordinates:
      description: 'Location metadata, if the item has location data. Read-only.'
    microsoft.graph.malware:
      description: 'Malware metadata, if the item was detected to contain malware. Read-only.'
    microsoft.graph.package:
      description: 'If present, indicates that this item is a package instead of a folder or file. Packages are treated like files in some contexts and folders in others. Read-only.'
    microsoft.graph.pendingOperations:
      description: 'If present, indicates that one or more operations that might affect the state of the driveItem are pending completion. Read-only.'
    microsoft.graph.photo:
      description: 'Photo metadata, if the item is a photo. Read-only.'
    microsoft.graph.publicationFacet:
      description: 'Provides information about the published or checked-out state of an item, in locations that support such actions. This property is not returned by default. Read-only.'
    microsoft.graph.remoteItem:
      description: 'Remote item data, if the item is shared from a drive other than the one being accessed. Read-only.'
    microsoft.graph.searchResult:
      description: 'Search metadata, if the item is from a search result. Read-only.'
    microsoft.graph.shared:
      description: Indicates that the item has been shared with others and provides information about the shared state of the item. Read-only.
    microsoft.graph.specialFolder:
      description: 'If the current item is also available as a special folder, this facet is returned. Read-only.'
    microsoft.graph.video:
      description: 'Video metadata, if the item is a video. Read-only.'
    microsoft.graph.workbook:
      description: 'For files that are Excel spreadsheets, accesses the workbook API to work with the spreadsheet''s contents. Nullable.'
    microsoft.graph.thumbnailSet:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: thumbnailSet
          type: object
          properties:
            large:
              $ref: '#/components/schemas/microsoft.graph.thumbnail'
            medium:
              $ref: '#/components/schemas/microsoft.graph.thumbnail'
            small:
              $ref: '#/components/schemas/microsoft.graph.thumbnail'
            source:
              $ref: '#/components/schemas/microsoft.graph.thumbnail'
          additionalProperties:
            type: object
    microsoft.graph.driveItemVersion:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.baseItemVersion'
        - title: driveItemVersion
          type: object
          properties:
            content:
              type: string
              description: The content stream for this version of the item.
              format: base64url
              nullable: true
            size:
              type: integer
              description: Indicates the size of the content stream for this version of the item.
              format: int64
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.baseItemVersion:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: baseItemVersion
          type: object
          properties:
            lastModifiedBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Date and time the version was last modified. Read-only.
              format: date-time
              nullable: true
            publication:
              $ref: '#/components/schemas/microsoft.graph.publicationFacet'
          additionalProperties:
            type: object
    microsoft.graph.longRunningOperation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: longRunningOperation
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The start time of the operation.
              format: date-time
              nullable: true
            lastActionDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The time of the last action in the operation.
              format: date-time
              nullable: true
            resourceLocation:
              type: string
              description: URI of the resource that the operation is performed on.
              nullable: true
            status:
              $ref: '#/components/schemas/microsoft.graph.longRunningOperationStatus'
            statusDetail:
              type: string
              description: Details about the status of the operation.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.onenoteEntityHierarchyModel:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntitySchemaObjectModel'
        - title: onenoteEntityHierarchyModel
          type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            displayName:
              type: string
              description: The name of the notebook.
              nullable: true
            lastModifiedBy:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            lastModifiedDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
              format: date-time
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.notebookLinks:
      description: Links for opening the notebook. The oneNoteClientURL link opens the notebook in the OneNote native client if it's installed. The oneNoteWebURL link opens the notebook in OneNote on the web.
    microsoft.graph.onenoteUserRole:
      description: 'Possible values are: Owner, Contributor, Reader, None. Owner represents owner-level access to the notebook. Contributor represents read/write access to the notebook. Reader represents read-only access to the notebook. Read-only.'
    microsoft.graph.sectionLinks:
      description: Links for opening the section. The oneNoteClientURL link opens the section in the OneNote native client if it's installed. The oneNoteWebURL link opens the section in OneNote on the web.
    microsoft.graph.onenoteEntitySchemaObjectModel:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.onenoteEntityBaseModel'
        - title: onenoteEntitySchemaObjectModel
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: 'The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
              format: date-time
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.pageLinks:
      description: Links for opening the page. The oneNoteClientURL link opens the page in the OneNote native client if it 's installed. The oneNoteWebUrl link opens the page in OneNote on the web. Read-only.
    microsoft.graph.operation:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: operation
          type: object
          properties:
            createdDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The start time of the operation.
              format: date-time
              nullable: true
            lastActionDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: The time of the last action of the operation.
              format: date-time
              nullable: true
            status:
              $ref: '#/components/schemas/microsoft.graph.operationStatus'
          additionalProperties:
            type: object
    microsoft.graph.onenoteOperationError:
      description: The error returned by the operation.
    microsoft.graph.onenoteEntityBaseModel:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: onenoteEntityBaseModel
          type: object
          properties:
            self:
              type: string
              description: The endpoint where you can get details about the page. Read-only.
              nullable: true
          additionalProperties:
            type: object
    microsoft.graph.sharePointIdentitySet: { }
    microsoft.graph.sharingInvitation:
      description: Details of any associated sharing invitation for this permission. Read-only.
    microsoft.graph.sharingLink:
      description: 'Provides the link details of the current permission, if it is a link type permissions. Read-only.'
    microsoft.graph.termStore.termGroupScope:
      description: 'Returns the type of the group. Possible values are: global, system, and siteCollection.'
    microsoft.graph.termStore.localizedName: { }
    microsoft.graph.keyValue: { }
    microsoft.graph.termStore.localizedDescription: { }
    microsoft.graph.termStore.localizedLabel: { }
    microsoft.graph.termStore.relationType:
      description: 'The type of relation. Possible values are: pin, reuse.'
    microsoft.graph.itemActionStat:
      description: Statistics about the access actions in this interval. Read-only.
    microsoft.graph.incompleteData:
      description: Indicates that the statistics in this interval are based on incomplete data. Read-only.
    microsoft.graph.itemActivity:
      allOf:
        - $ref: '#/components/schemas/microsoft.graph.entity'
        - title: itemActivity
          type: object
          properties:
            access:
              $ref: '#/components/schemas/microsoft.graph.accessAction'
            activityDateTime:
              pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
              type: string
              description: Details about when the activity took place. Read-only.
              format: date-time
              nullable: true
            actor:
              $ref: '#/components/schemas/microsoft.graph.identitySet'
            driveItem:
              $ref: '#/components/schemas/microsoft.graph.driveItem'
          additionalProperties:
            type: object
    microsoft.graph.onenotePatchActionType:
      title: onenotePatchActionType
      enum:
        - Replace
        - Append
        - Delete
        - Insert
        - Prepend
      type: string
    microsoft.graph.onenotePatchInsertPosition:
      title: onenotePatchInsertPosition
      enum:
        - After
        - Before
      type: string
    microsoft.graph.onenotePagePreviewLinks:
      title: onenotePagePreviewLinks
      type: object
      properties:
        previewImageUrl:
          $ref: '#/components/schemas/microsoft.graph.externalLink'
      additionalProperties:
        type: object
    microsoft.graph.recentNotebookLinks:
      title: recentNotebookLinks
      type: object
      properties:
        oneNoteClientUrl:
          $ref: '#/components/schemas/microsoft.graph.externalLink'
        oneNoteWebUrl:
          $ref: '#/components/schemas/microsoft.graph.externalLink'
      additionalProperties:
        type: object
    microsoft.graph.onenoteSourceService:
      title: onenoteSourceService
      enum:
        - Unknown
        - OneDrive
        - OneDriveForBusiness
        - OnPremOneDriveForBusiness
      type: string
    microsoft.graph.siteCollectionResponse:
      title: Collection of site
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.site'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.ODataErrors.ODataError:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/microsoft.graph.ODataErrors.MainError'
      additionalProperties:
        type: object
    microsoft.graph.columnDefinitionCollectionResponse:
      title: Collection of columnDefinition
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.columnDefinition'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.contentTypeCollectionResponse:
      title: Collection of contentType
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.contentType'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.columnLinkCollectionResponse:
      title: Collection of columnLink
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.columnLink'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.driveCollectionResponse:
      title: Collection of drive
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.drive'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.baseItemCollectionResponse:
      title: Collection of baseItem
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.baseItem'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.listCollectionResponse:
      title: Collection of list
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.list'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.listItemCollectionResponse:
      title: Collection of listItem
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.listItem'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.documentSetVersionCollectionResponse:
      title: Collection of documentSetVersion
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.documentSetVersion'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.listItemVersionCollectionResponse:
      title: Collection of listItemVersion
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.listItemVersion'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.richLongRunningOperationCollectionResponse:
      title: Collection of richLongRunningOperation
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.richLongRunningOperation'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.subscriptionCollectionResponse:
      title: Collection of subscription
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.subscription'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.notebookCollectionResponse:
      title: Collection of notebook
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.notebook'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.sectionGroupCollectionResponse:
      title: Collection of sectionGroup
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.sectionGroup'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.onenoteSectionCollectionResponse:
      title: Collection of onenoteSection
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.onenoteSection'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.onenotePageCollectionResponse:
      title: Collection of onenotePage
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.onenotePage'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.onenoteOperationCollectionResponse:
      title: Collection of onenoteOperation
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.onenoteOperation'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.onenoteResourceCollectionResponse:
      title: Collection of onenoteResource
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.onenoteResource'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.permissionCollectionResponse:
      title: Collection of permission
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.permission'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.termStore.groupCollectionResponse:
      title: Collection of group
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.termStore.group'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.termStore.setCollectionResponse:
      title: Collection of set
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.termStore.set'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.termStore.termCollectionResponse:
      title: Collection of term
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.termStore.term'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.termStore.relationCollectionResponse:
      title: Collection of relation
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.termStore.relation'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.termStore.storeCollectionResponse:
      title: Collection of store
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.termStore.store'
        '@odata.nextLink':
          type: string
      additionalProperties:
        type: object
    microsoft.graph.thumbnail:
      description: A 1920x1920 scaled thumbnail.
    microsoft.graph.longRunningOperationStatus:
      description: 'The status of the operation. The possible values are: notStarted, running, succeeded, failed, unknownFutureValue.'
    microsoft.graph.operationStatus:
      description: 'The current status of the operation: notStarted, running, completed, failed'
    microsoft.graph.accessAction:
      description: An item was accessed.
    microsoft.graph.externalLink:
      title: externalLink
      type: object
      properties:
        href:
          type: string
          description: The url of the link.
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.ODataErrors.MainError:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/microsoft.graph.ODataErrors.ErrorDetails'
        innererror:
          $ref: '#/components/schemas/microsoft.graph.ODataErrors.InnerError'
      additionalProperties:
        type: object
    microsoft.graph.ODataErrors.ErrorDetails:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
          nullable: true
      additionalProperties:
        type: object
    microsoft.graph.ODataErrors.InnerError:
      type: object
      additionalProperties:
        type: object
      description: The structure of this object is service-specific
  responses:
    microsoft.graph.siteCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.siteCollectionResponse'
    error:
      description: error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.ODataErrors.ODataError'
    microsoft.graph.columnDefinitionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.columnDefinitionCollectionResponse'
    microsoft.graph.contentTypeCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.contentTypeCollectionResponse'
    microsoft.graph.columnLinkCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.columnLinkCollectionResponse'
    microsoft.graph.driveCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.driveCollectionResponse'
    microsoft.graph.baseItemCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.baseItemCollectionResponse'
    microsoft.graph.listCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.listCollectionResponse'
    microsoft.graph.listItemCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.listItemCollectionResponse'
    microsoft.graph.documentSetVersionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.documentSetVersionCollectionResponse'
    microsoft.graph.listItemVersionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.listItemVersionCollectionResponse'
    microsoft.graph.richLongRunningOperationCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.richLongRunningOperationCollectionResponse'
    microsoft.graph.subscriptionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.subscriptionCollectionResponse'
    microsoft.graph.notebookCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.notebookCollectionResponse'
    microsoft.graph.sectionGroupCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.sectionGroupCollectionResponse'
    microsoft.graph.onenoteSectionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.onenoteSectionCollectionResponse'
    microsoft.graph.onenotePageCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.onenotePageCollectionResponse'
    microsoft.graph.onenoteOperationCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.onenoteOperationCollectionResponse'
    microsoft.graph.onenoteResourceCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.onenoteResourceCollectionResponse'
    microsoft.graph.permissionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.permissionCollectionResponse'
    microsoft.graph.termStore.groupCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.termStore.groupCollectionResponse'
    microsoft.graph.termStore.setCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.termStore.setCollectionResponse'
    microsoft.graph.termStore.termCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.termStore.termCollectionResponse'
    microsoft.graph.termStore.relationCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.termStore.relationCollectionResponse'
    microsoft.graph.termStore.storeCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/microsoft.graph.termStore.storeCollectionResponse'
  parameters:
    top:
      name: $top
      in: query
      description: Show only the first n items
      schema:
        minimum: 0
        type: integer
      example: 50
    skip:
      name: $skip
      in: query
      description: Skip the first n items
      schema:
        minimum: 0
        type: integer
    search:
      name: $search
      in: query
      description: Search items by search phrases
      schema:
        type: string
    filter:
      name: $filter
      in: query
      description: Filter items by property values
      schema:
        type: string
    count:
      name: $count
      in: query
      description: Include count of items
      schema:
        type: boolean
  securitySchemes:
    azureaadv2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
          tokenUrl: https://login.microsoftonline.com/common/oauth2/v2.0/token
          scopes: { }
security:
  - azureaadv2: [ ]
